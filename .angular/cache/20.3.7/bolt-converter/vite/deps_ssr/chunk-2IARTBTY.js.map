{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/platform-server/fesm2022/server.mjs", "../../../../../../node_modules/@angular/platform-server/fesm2022/platform-server.mjs", "../../../../../../node_modules/@angular/ssr/third_party/beasties/index.js", "../../../../../../node_modules/@angular/ssr/fesm2022/ssr.mjs"],
  "sourcesContent": ["/**\n * @license Angular v20.3.7\n * (c) 2010-2025 Google LLC. https://angular.dev/\n * License: MIT\n */\n\nimport { ɵsetRootDomAdapter as _setRootDomAdapter, DOCUMENT, XhrFactory, PlatformLocation, ɵgetDOM as _getDOM, ɵPLATFORM_SERVER_ID as _PLATFORM_SERVER_ID, ViewportScroller, ɵNullViewportScroller as _NullViewportScroller } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ɵstartMeasuring as _startMeasuring, ɵstopMeasuring as _stopMeasuring, Injectable, Inject, Optional, APP_ID, TransferState, PLATFORM_ID, PLATFORM_INITIALIZER, NgModule, ɵsetDocument as _setDocument, createPlatformFactory, platformCore, Testability, ɵTESTABILITY as _TESTABILITY } from '@angular/core';\nimport { ɵBrowserDomAdapter as _BrowserDomAdapter, EventManagerPlugin, EVENT_MANAGER_PLUGINS, BrowserModule } from '@angular/platform-browser';\nimport { ɵHTTP_ROOT_INTERCEPTOR_FNS as _HTTP_ROOT_INTERCEPTOR_FNS } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nvar lib = {};\nvar Event_1;\nvar hasRequiredEvent;\nfunction requireEvent() {\n  if (hasRequiredEvent) return Event_1;\n  hasRequiredEvent = 1;\n  Event_1 = Event;\n  Event.CAPTURING_PHASE = 1;\n  Event.AT_TARGET = 2;\n  Event.BUBBLING_PHASE = 3;\n  function Event(type, dictionary) {\n    // Initialize basic event properties\n    this.type = '';\n    this.target = null;\n    this.currentTarget = null;\n    this.eventPhase = Event.AT_TARGET;\n    this.bubbles = false;\n    this.cancelable = false;\n    this.isTrusted = false;\n    this.defaultPrevented = false;\n    this.timeStamp = Date.now();\n\n    // Initialize internal flags\n    // XXX: Would it be better to inherit these defaults from the prototype?\n    this._propagationStopped = false;\n    this._immediatePropagationStopped = false;\n    this._initialized = true;\n    this._dispatching = false;\n\n    // Now initialize based on the constructor arguments (if any)\n    if (type) this.type = type;\n    if (dictionary) {\n      for (var p in dictionary) {\n        this[p] = dictionary[p];\n      }\n    }\n  }\n  Event.prototype = Object.create(Object.prototype, {\n    constructor: {\n      value: Event\n    },\n    stopPropagation: {\n      value: function stopPropagation() {\n        this._propagationStopped = true;\n      }\n    },\n    stopImmediatePropagation: {\n      value: function stopImmediatePropagation() {\n        this._propagationStopped = true;\n        this._immediatePropagationStopped = true;\n      }\n    },\n    preventDefault: {\n      value: function preventDefault() {\n        if (this.cancelable) this.defaultPrevented = true;\n      }\n    },\n    initEvent: {\n      value: function initEvent(type, bubbles, cancelable) {\n        this._initialized = true;\n        if (this._dispatching) return;\n        this._propagationStopped = false;\n        this._immediatePropagationStopped = false;\n        this.defaultPrevented = false;\n        this.isTrusted = false;\n        this.target = null;\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n      }\n    }\n  });\n  return Event_1;\n}\nvar UIEvent_1;\nvar hasRequiredUIEvent;\nfunction requireUIEvent() {\n  if (hasRequiredUIEvent) return UIEvent_1;\n  hasRequiredUIEvent = 1;\n  var Event = requireEvent();\n  UIEvent_1 = UIEvent;\n  function UIEvent() {\n    // Just use the superclass constructor to initialize\n    Event.call(this);\n    this.view = null; // FF uses the current window\n    this.detail = 0;\n  }\n  UIEvent.prototype = Object.create(Event.prototype, {\n    constructor: {\n      value: UIEvent\n    },\n    initUIEvent: {\n      value: function (type, bubbles, cancelable, view, detail) {\n        this.initEvent(type, bubbles, cancelable);\n        this.view = view;\n        this.detail = detail;\n      }\n    }\n  });\n  return UIEvent_1;\n}\nvar MouseEvent_1;\nvar hasRequiredMouseEvent;\nfunction requireMouseEvent() {\n  if (hasRequiredMouseEvent) return MouseEvent_1;\n  hasRequiredMouseEvent = 1;\n  var UIEvent = requireUIEvent();\n  MouseEvent_1 = MouseEvent;\n  function MouseEvent() {\n    // Just use the superclass constructor to initialize\n    UIEvent.call(this);\n    this.screenX = this.screenY = this.clientX = this.clientY = 0;\n    this.ctrlKey = this.altKey = this.shiftKey = this.metaKey = false;\n    this.button = 0;\n    this.buttons = 1;\n    this.relatedTarget = null;\n  }\n  MouseEvent.prototype = Object.create(UIEvent.prototype, {\n    constructor: {\n      value: MouseEvent\n    },\n    initMouseEvent: {\n      value: function (type, bubbles, cancelable, view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget) {\n        this.initEvent(type, bubbles, cancelable, view, detail);\n        this.screenX = screenX;\n        this.screenY = screenY;\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this.ctrlKey = ctrlKey;\n        this.altKey = altKey;\n        this.shiftKey = shiftKey;\n        this.metaKey = metaKey;\n        this.button = button;\n        switch (button) {\n          case 0:\n            this.buttons = 1;\n            break;\n          case 1:\n            this.buttons = 4;\n            break;\n          case 2:\n            this.buttons = 2;\n            break;\n          default:\n            this.buttons = 0;\n            break;\n        }\n        this.relatedTarget = relatedTarget;\n      }\n    },\n    getModifierState: {\n      value: function (key) {\n        switch (key) {\n          case \"Alt\":\n            return this.altKey;\n          case \"Control\":\n            return this.ctrlKey;\n          case \"Shift\":\n            return this.shiftKey;\n          case \"Meta\":\n            return this.metaKey;\n          default:\n            return false;\n        }\n      }\n    }\n  });\n  return MouseEvent_1;\n}\nvar utils = {};\nvar config = {};\n\n/*\n * This file defines Domino behaviour that can be externally configured.\n * To change these settings, set the relevant global property *before*\n * you call `require(\"domino\")`.\n */\n\nvar hasRequiredConfig;\nfunction requireConfig() {\n  if (hasRequiredConfig) return config;\n  hasRequiredConfig = 1;\n  config.isApiWritable = !globalThis.__domino_frozen__;\n  return config;\n}\nvar hasRequiredUtils;\nfunction requireUtils() {\n  if (hasRequiredUtils) return utils;\n  hasRequiredUtils = 1;\n  var isApiWritable = requireConfig().isApiWritable;\n  utils.NAMESPACE = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink'\n  };\n\n  //\n  // Shortcut functions for throwing errors of various types.\n  //\n  utils.IndexSizeError = () => {\n    throw new DOMException('The index is not in the allowed range', 'IndexSizeError');\n  };\n  utils.HierarchyRequestError = () => {\n    throw new DOMException('The node tree hierarchy is not correct', 'HierarchyRequestError');\n  };\n  utils.WrongDocumentError = () => {\n    throw new DOMException('The object is in the wrong Document', 'WrongDocumentError');\n  };\n  utils.InvalidCharacterError = () => {\n    throw new DOMException('The string contains invalid characters', 'InvalidCharacterError');\n  };\n  utils.NoModificationAllowedError = () => {\n    throw new DOMException('The object cannot be modified', 'NoModificationAllowedError');\n  };\n  utils.NotFoundError = () => {\n    throw new DOMException('The object can not be found here', 'NotFoundError');\n  };\n  utils.NotSupportedError = () => {\n    throw new DOMException('The operation is not supported', 'NotSupportedError');\n  };\n  utils.InvalidStateError = () => {\n    throw new DOMException('The object is in an invalid state', 'InvalidStateError');\n  };\n  utils.SyntaxError = () => {\n    throw new DOMException('The string did not match the expected pattern', 'SyntaxError');\n  };\n  utils.InvalidModificationError = () => {\n    throw new DOMException('The object can not be modified in this way', 'InvalidModificationError');\n  };\n  utils.NamespaceError = () => {\n    throw new DOMException('The operation is not allowed by Namespaces in XML', 'NamespaceError');\n  };\n  utils.InvalidAccessError = () => {\n    throw new DOMException('The object does not support the operation or argument', 'InvalidAccessError');\n  };\n  utils.TypeMismatchError = () => {\n    throw new DOMException('The type of the object does not match the expected type', 'TypeMismatchError');\n  };\n  utils.SecurityError = () => {\n    throw new DOMException('The operation is insecure', 'SecurityError');\n  };\n  utils.NetworkError = () => {\n    throw new DOMException('A network error occurred', 'NetworkError');\n  };\n  utils.AbortError = () => {\n    throw new DOMException('The operation was aborted', 'AbortError');\n  };\n  utils.UrlMismatchError = () => {\n    throw new DOMException('The given URL does not match another URL', 'URLMismatchError');\n  };\n  utils.QuotaExceededError = () => {\n    throw new DOMException('The quota has been exceeded', 'QuotaExceededError');\n  };\n  utils.TimeoutError = () => {\n    throw new DOMException('The operation timed out', 'TimeoutError');\n  };\n  utils.InvalidNodeTypeError = () => {\n    throw new DOMException('The node is of an invalid type', 'InvalidNodeTypeError');\n  };\n  utils.DataCloneError = () => {\n    throw new DOMException('The object can not be cloned', 'DataCloneError');\n  };\n  utils.InUseAttributeError = () => {\n    throw new DOMException('The attribute is already in use', 'InUseAttributeError');\n  };\n  utils.nyi = function () {\n    throw new Error('NotYetImplemented');\n  };\n  utils.shouldOverride = function () {\n    throw new Error('Abstract function; should be overriding in subclass.');\n  };\n  utils.assert = function (expr, msg) {\n    if (!expr) {\n      throw new Error('Assertion failed: ' + (msg || '') + '\\n' + new Error().stack);\n    }\n  };\n  utils.expose = function (src, c) {\n    for (var n in src) {\n      Object.defineProperty(c.prototype, n, {\n        value: src[n],\n        writable: isApiWritable\n      });\n    }\n  };\n  utils.merge = function (a, b) {\n    for (var n in b) {\n      a[n] = b[n];\n    }\n  };\n\n  // Compare two nodes based on their document order. This function is intended\n  // to be passed to sort(). Assumes that the array being sorted does not\n  // contain duplicates.  And that all nodes are connected and comparable.\n  // Clever code by ppk via jeresig.\n  utils.documentOrder = function (n, m) {\n    /* jshint bitwise: false */\n    return 3 - (n.compareDocumentPosition(m) & 6);\n  };\n  utils.toASCIILowerCase = function (s) {\n    return s.replace(/[A-Z]+/g, function (c) {\n      return c.toLowerCase();\n    });\n  };\n  utils.toASCIIUpperCase = function (s) {\n    return s.replace(/[a-z]+/g, function (c) {\n      return c.toUpperCase();\n    });\n  };\n  return utils;\n}\nvar EventTarget_1;\nvar hasRequiredEventTarget;\nfunction requireEventTarget() {\n  if (hasRequiredEventTarget) return EventTarget_1;\n  hasRequiredEventTarget = 1;\n  var Event = requireEvent();\n  var MouseEvent = requireMouseEvent();\n  var utils = requireUtils();\n  EventTarget_1 = EventTarget;\n  function EventTarget() {}\n  EventTarget.prototype = {\n    // XXX\n    // See WebIDL §4.8 for details on object event handlers\n    // and how they should behave.  We actually have to accept\n    // any object to addEventListener... Can't type check it.\n    // on registration.\n\n    // XXX:\n    // Capturing event listeners are sort of rare.  I think I can optimize\n    // them so that dispatchEvent can skip the capturing phase (or much of\n    // it).  Each time a capturing listener is added, increment a flag on\n    // the target node and each of its ancestors.  Decrement when removed.\n    // And update the counter when nodes are added and removed from the\n    // tree as well.  Then, in dispatch event, the capturing phase can\n    // abort if it sees any node with a zero count.\n    addEventListener: function addEventListener(type, listener, capture) {\n      if (!listener) return;\n      if (capture === undefined) capture = false;\n      if (!this._listeners) this._listeners = Object.create(null);\n      if (!this._listeners[type]) this._listeners[type] = [];\n      var list = this._listeners[type];\n\n      // If this listener has already been registered, just return\n      for (var i = 0, n = list.length; i < n; i++) {\n        var l = list[i];\n        if (l.listener === listener && l.capture === capture) return;\n      }\n\n      // Add an object to the list of listeners\n      var obj = {\n        listener: listener,\n        capture: capture\n      };\n      if (typeof listener === 'function') obj.f = listener;\n      list.push(obj);\n    },\n    removeEventListener: function removeEventListener(type, listener, capture) {\n      if (capture === undefined) capture = false;\n      if (this._listeners) {\n        var list = this._listeners[type];\n        if (list) {\n          // Find the listener in the list and remove it\n          for (var i = 0, n = list.length; i < n; i++) {\n            var l = list[i];\n            if (l.listener === listener && l.capture === capture) {\n              if (list.length === 1) {\n                this._listeners[type] = undefined;\n              } else {\n                list.splice(i, 1);\n              }\n              return;\n            }\n          }\n        }\n      }\n    },\n    // This is the public API for dispatching untrusted public events.\n    // See _dispatchEvent for the implementation\n    dispatchEvent: function dispatchEvent(event) {\n      // Dispatch an untrusted event\n      return this._dispatchEvent(event, false);\n    },\n    //\n    // See DOMCore §4.4\n    // XXX: I'll probably need another version of this method for\n    // internal use, one that does not set isTrusted to false.\n    // XXX: see Document._dispatchEvent: perhaps that and this could\n    // call a common internal function with different settings of\n    // a trusted boolean argument\n    //\n    // XXX:\n    // The spec has changed in how to deal with handlers registered\n    // on idl or content attributes rather than with addEventListener.\n    // Used to say that they always ran first.  That's how webkit does it\n    // Spec now says that they run in a position determined by\n    // when they were first set.  FF does it that way.  See:\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#event-handlers\n    //\n    _dispatchEvent: function _dispatchEvent(event, trusted) {\n      if (typeof trusted !== 'boolean') trusted = false;\n      function invoke(target, event) {\n        var type = event.type,\n          phase = event.eventPhase;\n        event.currentTarget = target;\n\n        // If there was an individual handler defined, invoke it first\n        // XXX: see comment above: this shouldn't always be first.\n        if (phase !== Event.CAPTURING_PHASE && target._handlers && target._handlers[type]) {\n          var handler = target._handlers[type];\n          var rv;\n          if (typeof handler === 'function') {\n            rv = handler.call(event.currentTarget, event);\n          } else {\n            var f = handler.handleEvent;\n            if (typeof f !== 'function') throw new TypeError('handleEvent property of ' + 'event handler object is' + 'not a function.');\n            rv = f.call(handler, event);\n          }\n          switch (event.type) {\n            case 'mouseover':\n              if (rv === true)\n                // Historical baggage\n                event.preventDefault();\n              break;\n            case 'beforeunload':\n            // XXX: eventually we need a special case here\n            /* falls through */\n            default:\n              if (rv === false) event.preventDefault();\n              break;\n          }\n        }\n\n        // Now invoke list list of listeners for this target and type\n        var list = target._listeners && target._listeners[type];\n        if (!list) return;\n        list = list.slice();\n        for (var i = 0, n = list.length; i < n; i++) {\n          if (event._immediatePropagationStopped) return;\n          var l = list[i];\n          if (phase === Event.CAPTURING_PHASE && !l.capture || phase === Event.BUBBLING_PHASE && l.capture) continue;\n          if (l.f) {\n            l.f.call(event.currentTarget, event);\n          } else {\n            var fn = l.listener.handleEvent;\n            if (typeof fn !== 'function') throw new TypeError('handleEvent property of event listener object is not a function.');\n            fn.call(l.listener, event);\n          }\n        }\n      }\n      if (!event._initialized || event._dispatching) utils.InvalidStateError();\n      event.isTrusted = trusted;\n\n      // Begin dispatching the event now\n      event._dispatching = true;\n      event.target = this;\n\n      // Build the list of targets for the capturing and bubbling phases\n      // XXX: we'll eventually have to add Window to this list.\n      var ancestors = [];\n      for (var n = this.parentNode; n; n = n.parentNode) ancestors.push(n);\n\n      // Capturing phase\n      event.eventPhase = Event.CAPTURING_PHASE;\n      for (var i = ancestors.length - 1; i >= 0; i--) {\n        invoke(ancestors[i], event);\n        if (event._propagationStopped) break;\n      }\n\n      // At target phase\n      if (!event._propagationStopped) {\n        event.eventPhase = Event.AT_TARGET;\n        invoke(this, event);\n      }\n\n      // Bubbling phase\n      if (event.bubbles && !event._propagationStopped) {\n        event.eventPhase = Event.BUBBLING_PHASE;\n        for (var ii = 0, nn = ancestors.length; ii < nn; ii++) {\n          invoke(ancestors[ii], event);\n          if (event._propagationStopped) break;\n        }\n      }\n      event._dispatching = false;\n      event.eventPhase = Event.AT_TARGET;\n      event.currentTarget = null;\n\n      // Deal with mouse events and figure out when\n      // a click has happened\n      if (trusted && !event.defaultPrevented && event instanceof MouseEvent) {\n        switch (event.type) {\n          case 'mousedown':\n            this._armed = {\n              x: event.clientX,\n              y: event.clientY,\n              t: event.timeStamp\n            };\n            break;\n          case 'mouseout':\n          case 'mouseover':\n            this._armed = null;\n            break;\n          case 'mouseup':\n            if (this._isClick(event)) this._doClick(event);\n            this._armed = null;\n            break;\n        }\n      }\n      return !event.defaultPrevented;\n    },\n    // Determine whether a click occurred\n    // XXX We don't support double clicks for now\n    _isClick: function (event) {\n      return this._armed !== null && event.type === 'mouseup' && event.isTrusted && event.button === 0 && event.timeStamp - this._armed.t < 1000 && Math.abs(event.clientX - this._armed.x) < 10 && Math.abs(event.clientY - this._armed.Y) < 10;\n    },\n    // Clicks are handled like this:\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#interactive-content-0\n    //\n    // Note that this method is similar to the HTMLElement.click() method\n    // The event argument must be the trusted mouseup event\n    _doClick: function (event) {\n      if (this._click_in_progress) return;\n      this._click_in_progress = true;\n\n      // Find the nearest enclosing element that is activatable\n      // An element is activatable if it has a\n      // _post_click_activation_steps hook\n      var activated = this;\n      while (activated && !activated._post_click_activation_steps) activated = activated.parentNode;\n      if (activated && activated._pre_click_activation_steps) {\n        activated._pre_click_activation_steps();\n      }\n      var click = this.ownerDocument.createEvent('MouseEvent');\n      click.initMouseEvent('click', true, true, this.ownerDocument.defaultView, 1, event.screenX, event.screenY, event.clientX, event.clientY, event.ctrlKey, event.altKey, event.shiftKey, event.metaKey, event.button, null);\n      var result = this._dispatchEvent(click, true);\n      if (activated) {\n        if (result) {\n          // This is where hyperlinks get followed, for example.\n          if (activated._post_click_activation_steps) activated._post_click_activation_steps(click);\n        } else {\n          if (activated._cancelled_activation_steps) activated._cancelled_activation_steps();\n        }\n      }\n    },\n    //\n    // An event handler is like an event listener, but it registered\n    // by setting an IDL or content attribute like onload or onclick.\n    // There can only be one of these at a time for any event type.\n    // This is an internal method for the attribute accessors and\n    // content attribute handlers that need to register events handlers.\n    // The type argument is the same as in addEventListener().\n    // The handler argument is the same as listeners in addEventListener:\n    // it can be a function or an object. Pass null to remove any existing\n    // handler.  Handlers are always invoked before any listeners of\n    // the same type.  They are not invoked during the capturing phase\n    // of event dispatch.\n    //\n    _setEventHandler: function _setEventHandler(type, handler) {\n      if (!this._handlers) this._handlers = Object.create(null);\n      this._handlers[type] = handler;\n    },\n    _getEventHandler: function _getEventHandler(type) {\n      return this._handlers && this._handlers[type] || null;\n    }\n  };\n  return EventTarget_1;\n}\nvar LinkedList = {\n  exports: {}\n};\nvar hasRequiredLinkedList;\nfunction requireLinkedList() {\n  if (hasRequiredLinkedList) return LinkedList.exports;\n  hasRequiredLinkedList = 1;\n  var utils = requireUtils();\n  var LinkedList$1 = LinkedList.exports = {\n    // basic validity tests on a circular linked list a\n    valid: function (a) {\n      utils.assert(a, \"list falsy\");\n      utils.assert(a._previousSibling, \"previous falsy\");\n      utils.assert(a._nextSibling, \"next falsy\");\n      // xxx check that list is actually circular\n      return true;\n    },\n    // insert a before b\n    insertBefore: function (a, b) {\n      utils.assert(LinkedList$1.valid(a) && LinkedList$1.valid(b));\n      var a_first = a,\n        a_last = a._previousSibling;\n      var b_first = b,\n        b_last = b._previousSibling;\n      a_first._previousSibling = b_last;\n      a_last._nextSibling = b_first;\n      b_last._nextSibling = a_first;\n      b_first._previousSibling = a_last;\n      utils.assert(LinkedList$1.valid(a) && LinkedList$1.valid(b));\n    },\n    // replace a single node a with a list b (which could be null)\n    replace: function (a, b) {\n      utils.assert(LinkedList$1.valid(a) && (b === null || LinkedList$1.valid(b)));\n      if (b !== null) {\n        LinkedList$1.insertBefore(b, a);\n      }\n      LinkedList$1.remove(a);\n      utils.assert(LinkedList$1.valid(a) && (b === null || LinkedList$1.valid(b)));\n    },\n    // remove single node a from its list\n    remove: function (a) {\n      utils.assert(LinkedList$1.valid(a));\n      var prev = a._previousSibling;\n      if (prev === a) {\n        return;\n      }\n      var next = a._nextSibling;\n      prev._nextSibling = next;\n      next._previousSibling = prev;\n      a._previousSibling = a._nextSibling = a;\n      utils.assert(LinkedList$1.valid(a));\n    }\n  };\n  return LinkedList.exports;\n}\nvar NodeUtils;\nvar hasRequiredNodeUtils;\nfunction requireNodeUtils() {\n  if (hasRequiredNodeUtils) return NodeUtils;\n  hasRequiredNodeUtils = 1;\n  NodeUtils = {\n    // NOTE: The `serializeOne()` function used to live on the `Node.prototype`\n    // as a private method `Node#_serializeOne(child)`, however that requires\n    // a megamorphic property access `this._serializeOne` just to get to the\n    // method, and this is being done on lots of different `Node` subclasses,\n    // which puts a lot of pressure on V8's megamorphic stub cache. So by\n    // moving the helper off of the `Node.prototype` and into a separate\n    // function in this helper module, we get a monomorphic property access\n    // `NodeUtils.serializeOne` to get to the function and reduce pressure\n    // on the megamorphic stub cache.\n    // See https://github.com/fgnass/domino/pull/142 for more information.\n    serializeOne: serializeOne,\n    // Export util functions so that we can run extra test for them.\n    // Note: we prefix function names with `ɵ`, similar to what we do\n    // with internal functions in Angular packages.\n    ɵescapeMatchingClosingTag: escapeMatchingClosingTag,\n    ɵescapeClosingCommentTag: escapeClosingCommentTag,\n    ɵescapeProcessingInstructionContent: escapeProcessingInstructionContent\n  };\n  var utils = requireUtils();\n  var NAMESPACE = utils.NAMESPACE;\n  var hasRawContent = {\n    STYLE: true,\n    SCRIPT: true,\n    XMP: true,\n    IFRAME: true,\n    NOEMBED: true,\n    NOFRAMES: true,\n    PLAINTEXT: true\n  };\n  var emptyElements = {\n    area: true,\n    base: true,\n    basefont: true,\n    bgsound: true,\n    br: true,\n    col: true,\n    embed: true,\n    frame: true,\n    hr: true,\n    img: true,\n    input: true,\n    keygen: true,\n    link: true,\n    meta: true,\n    param: true,\n    source: true,\n    track: true,\n    wbr: true\n  };\n  var extraNewLine = {\n    /* Removed in https://github.com/whatwg/html/issues/944\n    pre: true,\n    textarea: true,\n    listing: true\n    */\n  };\n  const ESCAPE_REGEXP = /[&<>\\u00A0]/g;\n  const ESCAPE_ATTR_REGEXP = /[&\"<>\\u00A0]/g;\n  function escape(s) {\n    if (!ESCAPE_REGEXP.test(s)) {\n      // nothing to do, fast path\n      return s;\n    }\n    return s.replace(ESCAPE_REGEXP, c => {\n      switch (c) {\n        case \"&\":\n          return \"&amp;\";\n        case \"<\":\n          return \"&lt;\";\n        case \">\":\n          return \"&gt;\";\n        case \"\\u00A0\":\n          return \"&nbsp;\";\n      }\n    });\n  }\n  function escapeAttr(s) {\n    if (!ESCAPE_ATTR_REGEXP.test(s)) {\n      // nothing to do, fast path\n      return s;\n    }\n    return s.replace(ESCAPE_ATTR_REGEXP, c => {\n      switch (c) {\n        case \"<\":\n          return \"&lt;\";\n        case \">\":\n          return \"&gt;\";\n        case \"&\":\n          return \"&amp;\";\n        case '\"':\n          return \"&quot;\";\n        case \"\\u00A0\":\n          return \"&nbsp;\";\n      }\n    });\n  }\n  function attrname(a) {\n    var ns = a.namespaceURI;\n    if (!ns) return a.localName;\n    if (ns === NAMESPACE.XML) return 'xml:' + a.localName;\n    if (ns === NAMESPACE.XLINK) return 'xlink:' + a.localName;\n    if (ns === NAMESPACE.XMLNS) {\n      if (a.localName === 'xmlns') return 'xmlns';else return 'xmlns:' + a.localName;\n    }\n    return a.name;\n  }\n\n  /**\n   * Escapes matching closing tag in a raw text.\n   *\n   * For example, given `<style>#text(</style><script></script>)</style>`,\n   * the parent tag would by \"style\" and the raw text is\n   * \"</style><script></script>\". If we come across a matching closing tag\n   * (in out case `</style>`) - replace `<` with `&lt;` to avoid unexpected\n   * and unsafe behavior after de-serialization.\n   */\n  function escapeMatchingClosingTag(rawText, parentTag) {\n    const parentClosingTag = '</' + parentTag;\n    if (!rawText.toLowerCase().includes(parentClosingTag)) {\n      return rawText; // fast path\n    }\n    const result = [...rawText];\n    const matches = rawText.matchAll(new RegExp(parentClosingTag, 'ig'));\n    for (const match of matches) {\n      result[match.index] = '&lt;';\n    }\n    return result.join('');\n  }\n  const CLOSING_COMMENT_REGEXP = /--!?>/;\n\n  /**\n   * Escapes closing comment tag in a comment content.\n   *\n   * For example, given `#comment('-->')`, the content of a comment would be\n   * updated to `--&gt;` to avoid unexpected and unsafe behavior after\n   * de-serialization.\n   */\n  function escapeClosingCommentTag(rawContent) {\n    if (!CLOSING_COMMENT_REGEXP.test(rawContent)) {\n      return rawContent; // fast path\n    }\n    return rawContent.replace(/(--\\!?)>/g, '$1&gt;');\n  }\n\n  /**\n   * Escapes processing instruction content by replacing `>` with `&gt`.\n   */\n  function escapeProcessingInstructionContent(rawContent) {\n    return rawContent.includes('>') ? rawContent.replaceAll('>', '&gt;') : rawContent;\n  }\n  function serializeOne(kid, parent) {\n    var s = '';\n    switch (kid.nodeType) {\n      case 1:\n        //ELEMENT_NODE\n        var ns = kid.namespaceURI;\n        var html = ns === NAMESPACE.HTML;\n        var tagname = html || ns === NAMESPACE.SVG || ns === NAMESPACE.MATHML ? kid.localName : kid.tagName;\n        s += '<' + tagname;\n        for (var j = 0, k = kid._numattrs; j < k; j++) {\n          var a = kid._attr(j);\n          s += ' ' + attrname(a);\n          if (a.value !== undefined) s += '=\"' + escapeAttr(a.value) + '\"';\n        }\n        s += '>';\n        if (!(html && emptyElements[tagname])) {\n          var ss = kid.serialize();\n          // If an element can have raw content, this content may\n          // potentially require escaping to avoid XSS.\n          if (hasRawContent[tagname.toUpperCase()]) {\n            ss = escapeMatchingClosingTag(ss, tagname);\n          }\n          if (html && extraNewLine[tagname] && ss.charAt(0) === '\\n') s += '\\n';\n          // Serialize children and add end tag for all others\n          s += ss;\n          s += '</' + tagname + '>';\n        }\n        break;\n      case 3: //TEXT_NODE\n      case 4:\n        //CDATA_SECTION_NODE\n        var parenttag;\n        if (parent.nodeType === 1 /*ELEMENT_NODE*/ && parent.namespaceURI === NAMESPACE.HTML) parenttag = parent.tagName;else parenttag = '';\n        if (hasRawContent[parenttag] || parenttag === 'NOSCRIPT' && parent.ownerDocument._scripting_enabled) {\n          s += kid.data;\n        } else {\n          s += escape(kid.data);\n        }\n        break;\n      case 8:\n        //COMMENT_NODE\n        s += '<!--' + escapeClosingCommentTag(kid.data) + '-->';\n        break;\n      case 7:\n        //PROCESSING_INSTRUCTION_NODE\n        const content = escapeProcessingInstructionContent(kid.data);\n        s += '<?' + kid.target + ' ' + content + '?>';\n        break;\n      case 10:\n        //DOCUMENT_TYPE_NODE\n        s += '<!DOCTYPE ' + kid.name;\n        s += '>';\n        break;\n      default:\n        utils.InvalidStateError();\n    }\n    return s;\n  }\n  return NodeUtils;\n}\nvar Node_1;\nvar hasRequiredNode;\nfunction requireNode() {\n  if (hasRequiredNode) return Node_1;\n  hasRequiredNode = 1;\n  Node_1 = Node;\n  var EventTarget = requireEventTarget();\n  var LinkedList = requireLinkedList();\n  var NodeUtils = requireNodeUtils();\n  var utils = requireUtils();\n\n  // All nodes have a nodeType and an ownerDocument.\n  // Once inserted, they also have a parentNode.\n  // This is an abstract class; all nodes in a document are instances\n  // of a subtype, so all the properties are defined by more specific\n  // constructors.\n  function Node() {\n    EventTarget.call(this);\n    this.parentNode = null;\n    this._nextSibling = this._previousSibling = this;\n    this._index = undefined;\n  }\n  var ELEMENT_NODE = Node.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = Node.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = Node.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = Node.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = Node.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = Node.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = Node.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = Node.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = Node.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = Node.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = Node.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = Node.NOTATION_NODE = 12;\n  var DOCUMENT_POSITION_DISCONNECTED = Node.DOCUMENT_POSITION_DISCONNECTED = 0x01;\n  var DOCUMENT_POSITION_PRECEDING = Node.DOCUMENT_POSITION_PRECEDING = 0x02;\n  var DOCUMENT_POSITION_FOLLOWING = Node.DOCUMENT_POSITION_FOLLOWING = 0x04;\n  var DOCUMENT_POSITION_CONTAINS = Node.DOCUMENT_POSITION_CONTAINS = 0x08;\n  var DOCUMENT_POSITION_CONTAINED_BY = Node.DOCUMENT_POSITION_CONTAINED_BY = 0x10;\n  var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;\n  Node.prototype = Object.create(EventTarget.prototype, {\n    // Node that are not inserted into the tree inherit a null parent\n\n    // XXX: the baseURI attribute is defined by dom core, but\n    // a correct implementation of it requires HTML features, so\n    // we'll come back to this later.\n    baseURI: {\n      get: utils.nyi\n    },\n    parentElement: {\n      get: function () {\n        return this.parentNode && this.parentNode.nodeType === ELEMENT_NODE ? this.parentNode : null;\n      }\n    },\n    hasChildNodes: {\n      value: utils.shouldOverride\n    },\n    firstChild: {\n      get: utils.shouldOverride\n    },\n    lastChild: {\n      get: utils.shouldOverride\n    },\n    isConnected: {\n      get: function () {\n        let node = this;\n        while (node != null) {\n          if (node.nodeType === Node.DOCUMENT_NODE) {\n            return true;\n          }\n          node = node.parentNode;\n          if (node != null && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            node = node.host;\n          }\n        }\n        return false;\n      }\n    },\n    previousSibling: {\n      get: function () {\n        var parent = this.parentNode;\n        if (!parent) return null;\n        if (this === parent.firstChild) return null;\n        return this._previousSibling;\n      }\n    },\n    nextSibling: {\n      get: function () {\n        var parent = this.parentNode,\n          next = this._nextSibling;\n        if (!parent) return null;\n        if (next === parent.firstChild) return null;\n        return next;\n      }\n    },\n    textContent: {\n      // Should override for DocumentFragment/Element/Attr/Text/PI/Comment\n      get: function () {\n        return null;\n      },\n      set: function (v) {/* do nothing */}\n    },\n    innerText: {\n      // Should override for DocumentFragment/Element/Attr/Text/PI/Comment\n      get: function () {\n        return null;\n      },\n      set: function (v) {/* do nothing */}\n    },\n    _countChildrenOfType: {\n      value: function (type) {\n        var sum = 0;\n        for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n          if (kid.nodeType === type) sum++;\n        }\n        return sum;\n      }\n    },\n    _ensureInsertValid: {\n      value: function _ensureInsertValid(node, child, isPreinsert) {\n        var parent = this,\n          i,\n          kid;\n        if (!node.nodeType) throw new TypeError('not a node');\n        // 1. If parent is not a Document, DocumentFragment, or Element\n        // node, throw a HierarchyRequestError.\n        switch (parent.nodeType) {\n          case DOCUMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n          case ELEMENT_NODE:\n            break;\n          default:\n            utils.HierarchyRequestError();\n        }\n        // 2. If node is a host-including inclusive ancestor of parent,\n        // throw a HierarchyRequestError.\n        if (node.isAncestor(parent)) utils.HierarchyRequestError();\n        // 3. If child is not null and its parent is not parent, then\n        // throw a NotFoundError. (replaceChild omits the 'child is not null'\n        // and throws a TypeError here if child is null.)\n        if (child !== null || !isPreinsert) {\n          if (child.parentNode !== parent) utils.NotFoundError();\n        }\n        // 4. If node is not a DocumentFragment, DocumentType, Element,\n        // Text, ProcessingInstruction, or Comment node, throw a\n        // HierarchyRequestError.\n        switch (node.nodeType) {\n          case DOCUMENT_FRAGMENT_NODE:\n          case DOCUMENT_TYPE_NODE:\n          case ELEMENT_NODE:\n          case TEXT_NODE:\n          case PROCESSING_INSTRUCTION_NODE:\n          case COMMENT_NODE:\n            break;\n          default:\n            utils.HierarchyRequestError();\n        }\n        // 5. If either node is a Text node and parent is a document, or\n        // node is a doctype and parent is not a document, throw a\n        // HierarchyRequestError.\n        // 6. If parent is a document, and any of the statements below, switched\n        // on node, are true, throw a HierarchyRequestError.\n        if (parent.nodeType === DOCUMENT_NODE) {\n          switch (node.nodeType) {\n            case TEXT_NODE:\n              utils.HierarchyRequestError();\n              break;\n            case DOCUMENT_FRAGMENT_NODE:\n              // 6a1. If node has more than one element child or has a Text\n              // node child.\n              if (node._countChildrenOfType(TEXT_NODE) > 0) utils.HierarchyRequestError();\n              switch (node._countChildrenOfType(ELEMENT_NODE)) {\n                case 0:\n                  break;\n                case 1:\n                  // 6a2. Otherwise, if node has one element child and either\n                  // parent has an element child, child is a doctype, or child\n                  // is not null and a doctype is following child. [preinsert]\n                  // 6a2. Otherwise, if node has one element child and either\n                  // parent has an element child that is not child or a\n                  // doctype is following child. [replaceWith]\n                  if (child !== null /* always true here for replaceWith */) {\n                    if (isPreinsert && child.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n                    for (kid = child.nextSibling; kid !== null; kid = kid.nextSibling) {\n                      if (kid.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n                    }\n                  }\n                  i = parent._countChildrenOfType(ELEMENT_NODE);\n                  if (isPreinsert) {\n                    // \"parent has an element child\"\n                    if (i > 0) utils.HierarchyRequestError();\n                  } else {\n                    // \"parent has an element child that is not child\"\n                    if (i > 1 || i === 1 && child.nodeType !== ELEMENT_NODE) utils.HierarchyRequestError();\n                  }\n                  break;\n                default:\n                  // 6a1, continued. (more than one Element child)\n                  utils.HierarchyRequestError();\n              }\n              break;\n            case ELEMENT_NODE:\n              // 6b. parent has an element child, child is a doctype, or\n              // child is not null and a doctype is following child. [preinsert]\n              // 6b. parent has an element child that is not child or a\n              // doctype is following child. [replaceWith]\n              if (child !== null /* always true here for replaceWith */) {\n                if (isPreinsert && child.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n                for (kid = child.nextSibling; kid !== null; kid = kid.nextSibling) {\n                  if (kid.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n                }\n              }\n              i = parent._countChildrenOfType(ELEMENT_NODE);\n              if (isPreinsert) {\n                // \"parent has an element child\"\n                if (i > 0) utils.HierarchyRequestError();\n              } else {\n                // \"parent has an element child that is not child\"\n                if (i > 1 || i === 1 && child.nodeType !== ELEMENT_NODE) utils.HierarchyRequestError();\n              }\n              break;\n            case DOCUMENT_TYPE_NODE:\n              // 6c. parent has a doctype child, child is non-null and an\n              // element is preceding child, or child is null and parent has\n              // an element child. [preinsert]\n              // 6c. parent has a doctype child that is not child, or an\n              // element is preceding child. [replaceWith]\n              if (child === null) {\n                if (parent._countChildrenOfType(ELEMENT_NODE)) utils.HierarchyRequestError();\n              } else {\n                // child is always non-null for [replaceWith] case\n                for (kid = parent.firstChild; kid !== null; kid = kid.nextSibling) {\n                  if (kid === child) break;\n                  if (kid.nodeType === ELEMENT_NODE) utils.HierarchyRequestError();\n                }\n              }\n              i = parent._countChildrenOfType(DOCUMENT_TYPE_NODE);\n              if (isPreinsert) {\n                // \"parent has an doctype child\"\n                if (i > 0) utils.HierarchyRequestError();\n              } else {\n                // \"parent has an doctype child that is not child\"\n                if (i > 1 || i === 1 && child.nodeType !== DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n              }\n              break;\n          }\n        } else {\n          // 5, continued: (parent is not a document)\n          if (node.nodeType === DOCUMENT_TYPE_NODE) utils.HierarchyRequestError();\n        }\n      }\n    },\n    insertBefore: {\n      value: function insertBefore(node, child) {\n        var parent = this;\n        // 1. Ensure pre-insertion validity\n        parent._ensureInsertValid(node, child, true);\n        // 2. Let reference child be child.\n        var refChild = child;\n        // 3. If reference child is node, set it to node's next sibling\n        if (refChild === node) {\n          refChild = node.nextSibling;\n        }\n        // 4. Adopt node into parent's node document.\n        parent.doc.adoptNode(node);\n        // 5. Insert node into parent before reference child.\n        node._insertOrReplace(parent, refChild, false);\n        // 6. Return node\n        return node;\n      }\n    },\n    appendChild: {\n      value: function (child) {\n        // This invokes _appendChild after doing validity checks.\n        return this.insertBefore(child, null);\n      }\n    },\n    _appendChild: {\n      value: function (child) {\n        child._insertOrReplace(this, null, false);\n      }\n    },\n    removeChild: {\n      value: function removeChild(child) {\n        var parent = this;\n        if (!child.nodeType) throw new TypeError('not a node');\n        if (child.parentNode !== parent) utils.NotFoundError();\n        child.remove();\n        return child;\n      }\n    },\n    // To replace a `child` with `node` within a `parent` (this)\n    replaceChild: {\n      value: function replaceChild(node, child) {\n        var parent = this;\n        // Ensure validity (slight differences from pre-insertion check)\n        parent._ensureInsertValid(node, child, false);\n        // Adopt node into parent's node document.\n        if (node.doc !== parent.doc) {\n          // XXX adoptNode has side-effect of removing node from its parent\n          // and generating a mutation event, thus causing the _insertOrReplace\n          // to generate two deletes and an insert instead of a 'move'\n          // event.  It looks like the new MutationObserver stuff avoids\n          // this problem, but for now let's only adopt (ie, remove `node`\n          // from its parent) here if we need to.\n          parent.doc.adoptNode(node);\n        }\n        // Do the replace.\n        node._insertOrReplace(parent, child, true);\n        return child;\n      }\n    },\n    // See: http://ejohn.org/blog/comparing-document-position/\n    contains: {\n      value: function contains(node) {\n        if (node === null) {\n          return false;\n        }\n        if (this === node) {\n          return true; /* inclusive descendant */\n        }\n        /* jshint bitwise: false */\n        return (this.compareDocumentPosition(node) & DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n      }\n    },\n    compareDocumentPosition: {\n      value: function compareDocumentPosition(that) {\n        // Basic algorithm for finding the relative position of two nodes.\n        // Make a list the ancestors of each node, starting with the\n        // document element and proceeding down to the nodes themselves.\n        // Then, loop through the lists, looking for the first element\n        // that differs.  The order of those two elements give the\n        // order of their descendant nodes.  Or, if one list is a prefix\n        // of the other one, then that node contains the other.\n\n        if (this === that) return 0;\n\n        // If they're not owned by the same document or if one is rooted\n        // and one is not, then they're disconnected.\n        if (this.doc !== that.doc || this.rooted !== that.rooted) return DOCUMENT_POSITION_DISCONNECTED + DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;\n\n        // Get arrays of ancestors for this and that\n        var these = [],\n          those = [];\n        for (var n = this; n !== null; n = n.parentNode) these.push(n);\n        for (n = that; n !== null; n = n.parentNode) those.push(n);\n        these.reverse(); // So we start with the outermost\n        those.reverse();\n        if (these[0] !== those[0])\n          // No common ancestor\n          return DOCUMENT_POSITION_DISCONNECTED + DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;\n        n = Math.min(these.length, those.length);\n        for (var i = 1; i < n; i++) {\n          if (these[i] !== those[i]) {\n            // We found two different ancestors, so compare\n            // their positions\n            if (these[i].index < those[i].index) return DOCUMENT_POSITION_FOLLOWING;else return DOCUMENT_POSITION_PRECEDING;\n          }\n        }\n\n        // If we get to here, then one of the nodes (the one with the\n        // shorter list of ancestors) contains the other one.\n        if (these.length < those.length) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY;else return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS;\n      }\n    },\n    isSameNode: {\n      value: function isSameNode(node) {\n        return this === node;\n      }\n    },\n    // This method implements the generic parts of node equality testing\n    // and defers to the (non-recursive) type-specific isEqual() method\n    // defined by subclasses\n    isEqualNode: {\n      value: function isEqualNode(node) {\n        if (!node) return false;\n        if (node.nodeType !== this.nodeType) return false;\n\n        // Check type-specific properties for equality\n        if (!this.isEqual(node)) return false;\n\n        // Now check children for number and equality\n        for (var c1 = this.firstChild, c2 = node.firstChild; c1 && c2; c1 = c1.nextSibling, c2 = c2.nextSibling) {\n          if (!c1.isEqualNode(c2)) return false;\n        }\n        return c1 === null && c2 === null;\n      }\n    },\n    // This method delegates shallow cloning to a clone() method\n    // that each concrete subclass must implement\n    cloneNode: {\n      value: function (deep) {\n        // Clone this node\n        var clone = this.clone();\n\n        // Handle the recursive case if necessary\n        if (deep) {\n          for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n            clone._appendChild(kid.cloneNode(true));\n          }\n        }\n        return clone;\n      }\n    },\n    lookupPrefix: {\n      value: function lookupPrefix(ns) {\n        var e;\n        if (ns === '' || ns === null || ns === undefined) return null;\n        switch (this.nodeType) {\n          case ELEMENT_NODE:\n            return this._lookupNamespacePrefix(ns, this);\n          case DOCUMENT_NODE:\n            e = this.documentElement;\n            return e ? e.lookupPrefix(ns) : null;\n          case ENTITY_NODE:\n          case NOTATION_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n          case DOCUMENT_TYPE_NODE:\n            return null;\n          case ATTRIBUTE_NODE:\n            e = this.ownerElement;\n            return e ? e.lookupPrefix(ns) : null;\n          default:\n            e = this.parentElement;\n            return e ? e.lookupPrefix(ns) : null;\n        }\n      }\n    },\n    lookupNamespaceURI: {\n      value: function lookupNamespaceURI(prefix) {\n        if (prefix === '' || prefix === undefined) {\n          prefix = null;\n        }\n        var e;\n        switch (this.nodeType) {\n          case ELEMENT_NODE:\n            return utils.shouldOverride();\n          case DOCUMENT_NODE:\n            e = this.documentElement;\n            return e ? e.lookupNamespaceURI(prefix) : null;\n          case ENTITY_NODE:\n          case NOTATION_NODE:\n          case DOCUMENT_TYPE_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            return null;\n          case ATTRIBUTE_NODE:\n            e = this.ownerElement;\n            return e ? e.lookupNamespaceURI(prefix) : null;\n          default:\n            e = this.parentElement;\n            return e ? e.lookupNamespaceURI(prefix) : null;\n        }\n      }\n    },\n    isDefaultNamespace: {\n      value: function isDefaultNamespace(ns) {\n        if (ns === '' || ns === undefined) {\n          ns = null;\n        }\n        var defaultNamespace = this.lookupNamespaceURI(null);\n        return defaultNamespace === ns;\n      }\n    },\n    // Utility methods for nodes.  Not part of the DOM\n\n    // Return the index of this node in its parent.\n    // Throw if no parent, or if this node is not a child of its parent\n    index: {\n      get: function () {\n        var parent = this.parentNode;\n        if (this === parent.firstChild) return 0; // fast case\n        var kids = parent.childNodes;\n        if (this._index === undefined || kids[this._index] !== this) {\n          // Ensure that we don't have an O(N^2) blowup if none of the\n          // kids have defined indices yet and we're traversing via\n          // nextSibling or previousSibling\n          for (var i = 0; i < kids.length; i++) {\n            kids[i]._index = i;\n          }\n          utils.assert(kids[this._index] === this);\n        }\n        return this._index;\n      }\n    },\n    // Return true if this node is equal to or is an ancestor of that node\n    // Note that nodes are considered to be ancestors of themselves\n    isAncestor: {\n      value: function (that) {\n        // If they belong to different documents, then they're unrelated.\n        if (this.doc !== that.doc) return false;\n        // If one is rooted and one isn't then they're not related\n        if (this.rooted !== that.rooted) return false;\n\n        // Otherwise check by traversing the parentNode chain\n        for (var e = that; e; e = e.parentNode) {\n          if (e === this) return true;\n        }\n        return false;\n      }\n    },\n    // DOMINO Changed the behavior to conform with the specs. See:\n    // https://groups.google.com/d/topic/mozilla.dev.platform/77sIYcpdDmc/discussion\n    ensureSameDoc: {\n      value: function (that) {\n        if (that.ownerDocument === null) {\n          that.ownerDocument = this.doc;\n        } else if (that.ownerDocument !== this.doc) {\n          utils.WrongDocumentError();\n        }\n      }\n    },\n    removeChildren: {\n      value: utils.shouldOverride\n    },\n    // Insert this node as a child of parent before the specified child,\n    // or insert as the last child of parent if specified child is null,\n    // or replace the specified child with this node, firing mutation events as\n    // necessary\n    _insertOrReplace: {\n      value: function _insertOrReplace(parent, before, isReplace) {\n        var child = this,\n          before_index,\n          i;\n        if (child.nodeType === DOCUMENT_FRAGMENT_NODE && child.rooted) {\n          utils.HierarchyRequestError();\n        }\n\n        /* Ensure index of `before` is cached before we (possibly) remove it. */\n        if (parent._childNodes) {\n          before_index = before === null ? parent._childNodes.length : before.index; /* ensure _index is cached */\n\n          // If we are already a child of the specified parent, then\n          // the index may have to be adjusted.\n          if (child.parentNode === parent) {\n            var child_index = child.index;\n            // If the child is before the spot it is to be inserted at,\n            // then when it is removed, the index of that spot will be\n            // reduced.\n            if (child_index < before_index) {\n              before_index--;\n            }\n          }\n        }\n\n        // Delete the old child\n        if (isReplace) {\n          if (before.rooted) before.doc.mutateRemove(before);\n          before.parentNode = null;\n        }\n        var n = before;\n        if (n === null) {\n          n = parent.firstChild;\n        }\n\n        // If both the child and the parent are rooted, then we want to\n        // transplant the child without uprooting and rerooting it.\n        var bothRooted = child.rooted && parent.rooted;\n        if (child.nodeType === DOCUMENT_FRAGMENT_NODE) {\n          var spliceArgs = [0, isReplace ? 1 : 0],\n            next;\n          for (var kid = child.firstChild; kid !== null; kid = next) {\n            next = kid.nextSibling;\n            spliceArgs.push(kid);\n            kid.parentNode = parent;\n          }\n          var len = spliceArgs.length;\n          // Add all nodes to the new parent, overwriting the old child\n          if (isReplace) {\n            LinkedList.replace(n, len > 2 ? spliceArgs[2] : null);\n          } else if (len > 2 && n !== null) {\n            LinkedList.insertBefore(spliceArgs[2], n);\n          }\n          if (parent._childNodes) {\n            spliceArgs[0] = before === null ? parent._childNodes.length : before._index;\n            parent._childNodes.splice.apply(parent._childNodes, spliceArgs);\n            for (i = 2; i < len; i++) {\n              spliceArgs[i]._index = spliceArgs[0] + (i - 2);\n            }\n          } else if (parent._firstChild === before) {\n            if (len > 2) {\n              parent._firstChild = spliceArgs[2];\n            } else if (isReplace) {\n              parent._firstChild = null;\n            }\n          }\n          // Remove all nodes from the document fragment\n          if (child._childNodes) {\n            child._childNodes.length = 0;\n          } else {\n            child._firstChild = null;\n          }\n          // Call the mutation handlers\n          // Use spliceArgs since the original array has been destroyed. The\n          // liveness guarantee requires us to clone the array so that\n          // references to the childNodes of the DocumentFragment will be empty\n          // when the insertion handlers are called.\n          if (parent.rooted) {\n            parent.modify();\n            for (i = 2; i < len; i++) {\n              parent.doc.mutateInsert(spliceArgs[i]);\n            }\n          }\n        } else {\n          if (before === child) {\n            return;\n          }\n          if (bothRooted) {\n            // Remove the child from its current position in the tree\n            // without calling remove(), since we don't want to uproot it.\n            child._remove();\n          } else if (child.parentNode) {\n            child.remove();\n          }\n\n          // Insert it as a child of its new parent\n          child.parentNode = parent;\n          if (isReplace) {\n            LinkedList.replace(n, child);\n            if (parent._childNodes) {\n              child._index = before_index;\n              parent._childNodes[before_index] = child;\n            } else if (parent._firstChild === before) {\n              parent._firstChild = child;\n            }\n          } else {\n            if (n !== null) {\n              LinkedList.insertBefore(child, n);\n            }\n            if (parent._childNodes) {\n              child._index = before_index;\n              parent._childNodes.splice(before_index, 0, child);\n            } else if (parent._firstChild === before) {\n              parent._firstChild = child;\n            }\n          }\n          if (bothRooted) {\n            parent.modify();\n            // Generate a move mutation event\n            parent.doc.mutateMove(child);\n          } else if (parent.rooted) {\n            parent.modify();\n            parent.doc.mutateInsert(child);\n          }\n        }\n      }\n    },\n    // Return the lastModTime value for this node. (For use as a\n    // cache invalidation mechanism. If the node does not already\n    // have one, initialize it from the owner document's modclock\n    // property. (Note that modclock does not return the actual\n    // time; it is simply a counter incremented on each document\n    // modification)\n    lastModTime: {\n      get: function () {\n        if (!this._lastModTime) {\n          this._lastModTime = this.doc.modclock;\n        }\n        return this._lastModTime;\n      }\n    },\n    // Increment the owner document's modclock and use the new\n    // value to update the lastModTime value for this node and\n    // all of its ancestors. Nodes that have never had their\n    // lastModTime value queried do not need to have a\n    // lastModTime property set on them since there is no\n    // previously queried value to ever compare the new value\n    // against, so only update nodes that already have a\n    // _lastModTime property.\n    modify: {\n      value: function () {\n        if (this.doc.modclock) {\n          // Skip while doc.modclock == 0\n          var time = ++this.doc.modclock;\n          for (var n = this; n; n = n.parentElement) {\n            if (n._lastModTime) {\n              n._lastModTime = time;\n            }\n          }\n        }\n      }\n    },\n    // This attribute is not part of the DOM but is quite helpful.\n    // It returns the document with which a node is associated.  Usually\n    // this is the ownerDocument. But ownerDocument is null for the\n    // document object itself, so this is a handy way to get the document\n    // regardless of the node type\n    doc: {\n      get: function () {\n        return this.ownerDocument || this;\n      }\n    },\n    // If the node has a nid (node id), then it is rooted in a document\n    rooted: {\n      get: function () {\n        return !!this._nid;\n      }\n    },\n    normalize: {\n      value: function () {\n        var next;\n        for (var child = this.firstChild; child !== null; child = next) {\n          next = child.nextSibling;\n          if (child.normalize) {\n            child.normalize();\n          }\n          if (child.nodeType !== Node.TEXT_NODE) {\n            continue;\n          }\n          if (child.nodeValue === \"\") {\n            this.removeChild(child);\n            continue;\n          }\n          var prevChild = child.previousSibling;\n          if (prevChild === null) {\n            continue;\n          } else if (prevChild.nodeType === Node.TEXT_NODE) {\n            // merge this with previous and remove the child\n            prevChild.appendData(child.nodeValue);\n            this.removeChild(child);\n          }\n        }\n      }\n    },\n    // Convert the children of a node to an HTML string.\n    // This is used by the innerHTML getter\n    // The serialization spec is at:\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#serializing-html-fragments\n    //\n    // The serialization logic is intentionally implemented in a separate\n    // `NodeUtils` helper instead of the more obvious choice of a private\n    // `_serializeOne()` method on the `Node.prototype` in order to avoid\n    // the megamorphic `this._serializeOne` property access, which reduces\n    // performance unnecessarily. If you need specialized behavior for a\n    // certain subclass, you'll need to implement that in `NodeUtils`.\n    // See https://github.com/fgnass/domino/pull/142 for more information.\n    serialize: {\n      value: function () {\n        if (this._innerHTML) {\n          return this._innerHTML;\n        }\n        var s = '';\n        for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n          s += NodeUtils.serializeOne(kid, this);\n        }\n        return s;\n      }\n    },\n    // Non-standard, but often useful for debugging.\n    outerHTML: {\n      get: function () {\n        return NodeUtils.serializeOne(this, {\n          nodeType: 0\n        });\n      },\n      set: utils.nyi\n    },\n    // mirror node type properties in the prototype, so they are present\n    // in instances of Node (and subclasses)\n    ELEMENT_NODE: {\n      value: ELEMENT_NODE\n    },\n    ATTRIBUTE_NODE: {\n      value: ATTRIBUTE_NODE\n    },\n    TEXT_NODE: {\n      value: TEXT_NODE\n    },\n    CDATA_SECTION_NODE: {\n      value: CDATA_SECTION_NODE\n    },\n    ENTITY_REFERENCE_NODE: {\n      value: ENTITY_REFERENCE_NODE\n    },\n    ENTITY_NODE: {\n      value: ENTITY_NODE\n    },\n    PROCESSING_INSTRUCTION_NODE: {\n      value: PROCESSING_INSTRUCTION_NODE\n    },\n    COMMENT_NODE: {\n      value: COMMENT_NODE\n    },\n    DOCUMENT_NODE: {\n      value: DOCUMENT_NODE\n    },\n    DOCUMENT_TYPE_NODE: {\n      value: DOCUMENT_TYPE_NODE\n    },\n    DOCUMENT_FRAGMENT_NODE: {\n      value: DOCUMENT_FRAGMENT_NODE\n    },\n    NOTATION_NODE: {\n      value: NOTATION_NODE\n    },\n    DOCUMENT_POSITION_DISCONNECTED: {\n      value: DOCUMENT_POSITION_DISCONNECTED\n    },\n    DOCUMENT_POSITION_PRECEDING: {\n      value: DOCUMENT_POSITION_PRECEDING\n    },\n    DOCUMENT_POSITION_FOLLOWING: {\n      value: DOCUMENT_POSITION_FOLLOWING\n    },\n    DOCUMENT_POSITION_CONTAINS: {\n      value: DOCUMENT_POSITION_CONTAINS\n    },\n    DOCUMENT_POSITION_CONTAINED_BY: {\n      value: DOCUMENT_POSITION_CONTAINED_BY\n    },\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: {\n      value: DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    }\n  });\n  return Node_1;\n}\n\n/* jshint esversion: 6 */\n\nvar NodeList_es6;\nvar hasRequiredNodeList_es6;\nfunction requireNodeList_es6() {\n  if (hasRequiredNodeList_es6) return NodeList_es6;\n  hasRequiredNodeList_es6 = 1;\n  NodeList_es6 = class NodeList extends Array {\n    constructor(a) {\n      super(a && a.length || 0);\n      if (a) {\n        for (var idx in a) {\n          this[idx] = a[idx];\n        }\n      }\n    }\n    item(i) {\n      return this[i] || null;\n    }\n  };\n  return NodeList_es6;\n}\nvar NodeList_es5;\nvar hasRequiredNodeList_es5;\nfunction requireNodeList_es5() {\n  if (hasRequiredNodeList_es5) return NodeList_es5;\n  hasRequiredNodeList_es5 = 1;\n\n  // No support for subclassing array, return an actual Array object.\n  function item(i) {\n    /* jshint validthis: true */\n    return this[i] || null;\n  }\n  function NodeList(a) {\n    if (!a) a = [];\n    a.item = item;\n    return a;\n  }\n  NodeList_es5 = NodeList;\n  return NodeList_es5;\n}\nvar NodeList_1;\nvar hasRequiredNodeList;\nfunction requireNodeList() {\n  if (hasRequiredNodeList) return NodeList_1;\n  hasRequiredNodeList = 1;\n  var NodeList;\n  try {\n    // Attempt to use ES6-style Array subclass if possible.\n    NodeList = requireNodeList_es6();\n  } catch (e) {\n    // No support for subclassing array, return an actual Array object.\n    NodeList = requireNodeList_es5();\n  }\n  NodeList_1 = NodeList;\n  return NodeList_1;\n}\nvar ContainerNode_1;\nvar hasRequiredContainerNode;\nfunction requireContainerNode() {\n  if (hasRequiredContainerNode) return ContainerNode_1;\n  hasRequiredContainerNode = 1;\n  ContainerNode_1 = ContainerNode;\n  var Node = requireNode();\n  var NodeList = requireNodeList();\n\n  // This class defines common functionality for node subtypes that\n  // can have children\n\n  function ContainerNode() {\n    Node.call(this);\n    this._firstChild = this._childNodes = null;\n  }\n\n  // Primary representation is a circular linked list of siblings\n  ContainerNode.prototype = Object.create(Node.prototype, {\n    hasChildNodes: {\n      value: function () {\n        if (this._childNodes) {\n          return this._childNodes.length > 0;\n        }\n        return this._firstChild !== null;\n      }\n    },\n    childNodes: {\n      get: function () {\n        this._ensureChildNodes();\n        return this._childNodes;\n      }\n    },\n    firstChild: {\n      get: function () {\n        if (this._childNodes) {\n          return this._childNodes.length === 0 ? null : this._childNodes[0];\n        }\n        return this._firstChild;\n      }\n    },\n    lastChild: {\n      get: function () {\n        var kids = this._childNodes,\n          first;\n        if (kids) {\n          return kids.length === 0 ? null : kids[kids.length - 1];\n        }\n        first = this._firstChild;\n        if (first === null) {\n          return null;\n        }\n        return first._previousSibling; // circular linked list\n      }\n    },\n    _ensureChildNodes: {\n      value: function () {\n        if (this._childNodes) {\n          return;\n        }\n        var first = this._firstChild,\n          kid = first,\n          childNodes = this._childNodes = new NodeList();\n        if (first) do {\n          childNodes.push(kid);\n          kid = kid._nextSibling;\n        } while (kid !== first); // circular linked list\n        this._firstChild = null; // free memory\n      }\n    },\n    // Remove all of this node's children.  This is a minor\n    // optimization that only calls modify() once.\n    removeChildren: {\n      value: function removeChildren() {\n        var root = this.rooted ? this.ownerDocument : null,\n          next = this.firstChild,\n          kid;\n        while (next !== null) {\n          kid = next;\n          next = kid.nextSibling;\n          if (root) root.mutateRemove(kid);\n          kid.parentNode = null;\n        }\n        if (this._childNodes) {\n          this._childNodes.length = 0;\n        } else {\n          this._firstChild = null;\n        }\n        this.modify(); // Update last modified type once only\n      }\n    }\n  });\n  return ContainerNode_1;\n}\nvar xmlnames = {};\nvar hasRequiredXmlnames;\nfunction requireXmlnames() {\n  if (hasRequiredXmlnames) return xmlnames;\n  hasRequiredXmlnames = 1;\n  // This grammar is from the XML and XML Namespace specs. It specifies whether\n  // a string (such as an element or attribute name) is a valid Name or QName.\n  //\n  // Name           ::= NameStartChar (NameChar)*\n  // NameStartChar  ::= \":\" | [A-Z] | \"_\" | [a-z] |\n  //                    [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] |\n  //                    [#x370-#x37D] | [#x37F-#x1FFF] |\n  //                    [#x200C-#x200D] | [#x2070-#x218F] |\n  //                    [#x2C00-#x2FEF] | [#x3001-#xD7FF] |\n  //                    [#xF900-#xFDCF] | [#xFDF0-#xFFFD] |\n  //                    [#x10000-#xEFFFF]\n  //\n  // NameChar       ::= NameStartChar | \"-\" | \".\" | [0-9] |\n  //                    #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //\n  // QName          ::= PrefixedName| UnprefixedName\n  // PrefixedName   ::= Prefix ':' LocalPart\n  // UnprefixedName ::= LocalPart\n  // Prefix         ::= NCName\n  // LocalPart      ::= NCName\n  // NCName         ::= Name - (Char* ':' Char*)\n  //                    # An XML Name, minus the \":\"\n  //\n\n  xmlnames.isValidName = isValidName;\n  xmlnames.isValidQName = isValidQName;\n\n  // Most names will be ASCII only. Try matching against simple regexps first\n  var simplename = /^[_:A-Za-z][-.:\\w]+$/;\n  var simpleqname = /^([_A-Za-z][-.\\w]+|[_A-Za-z][-.\\w]+:[_A-Za-z][-.\\w]+)$/;\n\n  // If the regular expressions above fail, try more complex ones that work\n  // for any identifiers using codepoints from the Unicode BMP\n  var ncnamestartchars = \"_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02ff\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n  var ncnamechars = \"-._A-Za-z0-9\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02ff\\u0300-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203f\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n  var ncname = \"[\" + ncnamestartchars + \"][\" + ncnamechars + \"]*\";\n  var namestartchars = ncnamestartchars + \":\";\n  var namechars = ncnamechars + \":\";\n  var name = new RegExp(\"^[\" + namestartchars + \"]\" + \"[\" + namechars + \"]*$\");\n  var qname = new RegExp(\"^(\" + ncname + \"|\" + ncname + \":\" + ncname + \")$\");\n\n  // XML says that these characters are also legal:\n  // [#x10000-#xEFFFF].  So if the patterns above fail, and the\n  // target string includes surrogates, then try the following\n  // patterns that allow surrogates and then run an extra validation\n  // step to make sure that the surrogates are in valid pairs and in\n  // the right range.  Note that since the characters \\uf0000 to \\u1f0000\n  // are not allowed, it means that the high surrogate can only go up to\n  // \\uDB7f instead of \\uDBFF.\n  var hassurrogates = /[\\uD800-\\uDB7F\\uDC00-\\uDFFF]/;\n  var surrogatechars = /[\\uD800-\\uDB7F\\uDC00-\\uDFFF]/g;\n  var surrogatepairs = /[\\uD800-\\uDB7F][\\uDC00-\\uDFFF]/g;\n\n  // Modify the variables above to allow surrogates\n  ncnamestartchars += \"\\uD800-\\uDB7F\\uDC00-\\uDFFF\";\n  ncnamechars += \"\\uD800-\\uDB7F\\uDC00-\\uDFFF\";\n  ncname = \"[\" + ncnamestartchars + \"][\" + ncnamechars + \"]*\";\n  namestartchars = ncnamestartchars + \":\";\n  namechars = ncnamechars + \":\";\n\n  // Build another set of regexps that include surrogates\n  var surrogatename = new RegExp(\"^[\" + namestartchars + \"]\" + \"[\" + namechars + \"]*$\");\n  var surrogateqname = new RegExp(\"^(\" + ncname + \"|\" + ncname + \":\" + ncname + \")$\");\n  function isValidName(s) {\n    if (simplename.test(s)) return true; // Plain ASCII\n    if (name.test(s)) return true; // Unicode BMP\n\n    // Maybe the tests above failed because s includes surrogate pairs\n    // Most likely, though, they failed for some more basic syntax problem\n    if (!hassurrogates.test(s)) return false;\n\n    // Is the string a valid name if we allow surrogates?\n    if (!surrogatename.test(s)) return false;\n\n    // Finally, are the surrogates all correctly paired up?\n    var chars = s.match(surrogatechars),\n      pairs = s.match(surrogatepairs);\n    return pairs !== null && 2 * pairs.length === chars.length;\n  }\n  function isValidQName(s) {\n    if (simpleqname.test(s)) return true; // Plain ASCII\n    if (qname.test(s)) return true; // Unicode BMP\n\n    if (!hassurrogates.test(s)) return false;\n    if (!surrogateqname.test(s)) return false;\n    var chars = s.match(surrogatechars),\n      pairs = s.match(surrogatepairs);\n    return pairs !== null && 2 * pairs.length === chars.length;\n  }\n  return xmlnames;\n}\nvar attributes = {};\nvar hasRequiredAttributes;\nfunction requireAttributes() {\n  if (hasRequiredAttributes) return attributes;\n  hasRequiredAttributes = 1;\n  var utils = requireUtils();\n  attributes.property = function (attr) {\n    if (Array.isArray(attr.type)) {\n      var valid = Object.create(null);\n      attr.type.forEach(function (val) {\n        valid[val.value || val] = val.alias || val;\n      });\n      var missingValueDefault = attr.missing;\n      if (missingValueDefault === undefined) {\n        missingValueDefault = null;\n      }\n      var invalidValueDefault = attr.invalid;\n      if (invalidValueDefault === undefined) {\n        invalidValueDefault = missingValueDefault;\n      }\n      return {\n        get: function () {\n          var v = this._getattr(attr.name);\n          if (v === null) return missingValueDefault;\n          v = valid[v.toLowerCase()];\n          if (v !== undefined) return v;\n          if (invalidValueDefault !== null) return invalidValueDefault;\n          return v;\n        },\n        set: function (v) {\n          this._setattr(attr.name, v);\n        }\n      };\n    } else if (attr.type === Boolean) {\n      return {\n        get: function () {\n          return this.hasAttribute(attr.name);\n        },\n        set: function (v) {\n          if (v) {\n            this._setattr(attr.name, '');\n          } else {\n            this.removeAttribute(attr.name);\n          }\n        }\n      };\n    } else if (attr.type === Number || attr.type === \"long\" || attr.type === \"unsigned long\" || attr.type === \"limited unsigned long with fallback\") {\n      return numberPropDesc(attr);\n    } else if (!attr.type || attr.type === String) {\n      return {\n        get: function () {\n          return this._getattr(attr.name) || '';\n        },\n        set: function (v) {\n          if (attr.treatNullAsEmptyString && v === null) {\n            v = '';\n          }\n          this._setattr(attr.name, v);\n        }\n      };\n    } else if (typeof attr.type === 'function') {\n      return attr.type(attr.name, attr);\n    }\n    throw new Error('Invalid attribute definition');\n  };\n\n  // See http://www.whatwg.org/specs/web-apps/current-work/#reflect\n  //\n  // defval is the default value. If it is a function, then that function\n  // will be invoked as a method of the element to obtain the default.\n  // If no default is specified for a given attribute, then the default\n  // depends on the type of the attribute, but since this function handles\n  // 4 integer cases, you must specify the default value in each call\n  //\n  // min and max define a valid range for getting the attribute.\n  //\n  // setmin defines a minimum value when setting.  If the value is less\n  // than that, then throw INDEX_SIZE_ERR.\n  //\n  // Conveniently, JavaScript's parseInt function appears to be\n  // compatible with HTML's 'rules for parsing integers'\n  function numberPropDesc(a) {\n    var def;\n    if (typeof a.default === 'function') {\n      def = a.default;\n    } else if (typeof a.default === 'number') {\n      def = function () {\n        return a.default;\n      };\n    } else {\n      def = function () {\n        utils.assert(false, typeof a.default);\n      };\n    }\n    var unsigned_long = a.type === 'unsigned long';\n    var signed_long = a.type === 'long';\n    var unsigned_fallback = a.type === 'limited unsigned long with fallback';\n    var min = a.min,\n      max = a.max,\n      setmin = a.setmin;\n    if (min === undefined) {\n      if (unsigned_long) min = 0;\n      if (signed_long) min = -2147483648;\n      if (unsigned_fallback) min = 1;\n    }\n    if (max === undefined) {\n      if (unsigned_long || signed_long || unsigned_fallback) max = 0x7FFFFFFF;\n    }\n    return {\n      get: function () {\n        var v = this._getattr(a.name);\n        var n = a.float ? parseFloat(v) : parseInt(v, 10);\n        if (v === null || !isFinite(n) || min !== undefined && n < min || max !== undefined && n > max) {\n          return def.call(this);\n        }\n        if (unsigned_long || signed_long || unsigned_fallback) {\n          if (!/^[ \\t\\n\\f\\r]*[-+]?[0-9]/.test(v)) {\n            return def.call(this);\n          }\n          n = n | 0; // jshint ignore:line\n        }\n        return n;\n      },\n      set: function (v) {\n        if (!a.float) {\n          v = Math.floor(v);\n        }\n        if (setmin !== undefined && v < setmin) {\n          utils.IndexSizeError(a.name + ' set to ' + v);\n        }\n        if (unsigned_long) {\n          v = v < 0 || v > 0x7FFFFFFF ? def.call(this) : v | 0; // jshint ignore:line\n        } else if (unsigned_fallback) {\n          v = v < 1 || v > 0x7FFFFFFF ? def.call(this) : v | 0; // jshint ignore:line\n        } else if (signed_long) {\n          v = v < -2147483648 || v > 0x7FFFFFFF ? def.call(this) : v | 0; // jshint ignore:line\n        }\n        this._setattr(a.name, String(v));\n      }\n    };\n  }\n\n  // This is a utility function for setting up change handler functions\n  // for attributes like 'id' that require special handling when they change.\n  attributes.registerChangeHandler = function (c, name, handler) {\n    var p = c.prototype;\n\n    // If p does not already have its own _attributeChangeHandlers\n    // then create one for it, inheriting from the inherited\n    // _attributeChangeHandlers. At the top (for the Element class) the\n    // _attributeChangeHandlers object will be created with a null prototype.\n    if (!Object.prototype.hasOwnProperty.call(p, '_attributeChangeHandlers')) {\n      p._attributeChangeHandlers = Object.create(p._attributeChangeHandlers || null);\n    }\n    p._attributeChangeHandlers[name] = handler;\n  };\n  return attributes;\n}\nvar FilteredElementList_1;\nvar hasRequiredFilteredElementList;\nfunction requireFilteredElementList() {\n  if (hasRequiredFilteredElementList) return FilteredElementList_1;\n  hasRequiredFilteredElementList = 1;\n  FilteredElementList_1 = FilteredElementList;\n  var Node = requireNode();\n\n  //\n  // This file defines node list implementation that lazily traverses\n  // the document tree (or a subtree rooted at any element) and includes\n  // only those elements for which a specified filter function returns true.\n  // It is used to implement the\n  // {Document,Element}.getElementsBy{TagName,ClassName}{,NS} methods.\n  //\n  // XXX this should inherit from NodeList\n\n  function FilteredElementList(root, filter) {\n    this.root = root;\n    this.filter = filter;\n    this.lastModTime = root.lastModTime;\n    this.done = false;\n    this.cache = [];\n    this.traverse();\n  }\n  FilteredElementList.prototype = Object.create(Object.prototype, {\n    length: {\n      get: function () {\n        this.checkcache();\n        if (!this.done) this.traverse();\n        return this.cache.length;\n      }\n    },\n    item: {\n      value: function (n) {\n        this.checkcache();\n        if (!this.done && n >= this.cache.length) {\n          // This can lead to O(N^2) behavior if we stop when we get to n\n          // and the caller is iterating through the items in order; so\n          // be sure to do the full traverse here.\n          this.traverse(/*n*/);\n        }\n        return this.cache[n];\n      }\n    },\n    checkcache: {\n      value: function () {\n        if (this.lastModTime !== this.root.lastModTime) {\n          // subtree has changed, so invalidate cache\n          for (var i = this.cache.length - 1; i >= 0; i--) {\n            this[i] = undefined;\n          }\n          this.cache.length = 0;\n          this.done = false;\n          this.lastModTime = this.root.lastModTime;\n        }\n      }\n    },\n    // If n is specified, then traverse the tree until we've found the nth\n    // item (or until we've found all items).  If n is not specified,\n    // traverse until we've found all items.\n    traverse: {\n      value: function (n) {\n        // increment n so we can compare to length, and so it is never falsy\n        if (n !== undefined) n++;\n        var elt;\n        while ((elt = this.next()) !== null) {\n          this[this.cache.length] = elt; //XXX Use proxy instead\n          this.cache.push(elt);\n          if (n && this.cache.length === n) return;\n        }\n\n        // no next element, so we've found everything\n        this.done = true;\n      }\n    },\n    // Return the next element under root that matches filter\n    next: {\n      value: function () {\n        var start = this.cache.length === 0 ? this.root // Start at the root or at\n        : this.cache[this.cache.length - 1]; // the last element we found\n\n        var elt;\n        if (start.nodeType === Node.DOCUMENT_NODE) elt = start.documentElement;else elt = start.nextElement(this.root);\n        while (elt) {\n          if (this.filter(elt)) {\n            return elt;\n          }\n          elt = elt.nextElement(this.root);\n        }\n        return null;\n      }\n    }\n  });\n  return FilteredElementList_1;\n}\nvar DOMTokenList_1;\nvar hasRequiredDOMTokenList;\nfunction requireDOMTokenList() {\n  if (hasRequiredDOMTokenList) return DOMTokenList_1;\n  hasRequiredDOMTokenList = 1;\n  // DOMTokenList implementation based on https://github.com/Raynos/DOM-shim\n  var utils = requireUtils();\n  DOMTokenList_1 = DOMTokenList;\n  function DOMTokenList(getter, setter) {\n    this._getString = getter;\n    this._setString = setter;\n    this._length = 0;\n    this._lastStringValue = '';\n    this._update();\n  }\n  Object.defineProperties(DOMTokenList.prototype, {\n    length: {\n      get: function () {\n        return this._length;\n      }\n    },\n    item: {\n      value: function (index) {\n        var list = getList(this);\n        if (index < 0 || index >= list.length) {\n          return null;\n        }\n        return list[index];\n      }\n    },\n    contains: {\n      value: function (token) {\n        token = String(token); // no error checking for contains()\n        var list = getList(this);\n        return list.indexOf(token) > -1;\n      }\n    },\n    add: {\n      value: function () {\n        var list = getList(this);\n        for (var i = 0, len = arguments.length; i < len; i++) {\n          var token = handleErrors(arguments[i]);\n          if (list.indexOf(token) < 0) {\n            list.push(token);\n          }\n        }\n        // Note: as per spec, if handleErrors() throws any errors, we never\n        // make it here and none of the changes take effect.\n        // Also per spec: we run the \"update steps\" even if no change was\n        // made (ie, if the token already existed)\n        this._update(list);\n      }\n    },\n    remove: {\n      value: function () {\n        var list = getList(this);\n        for (var i = 0, len = arguments.length; i < len; i++) {\n          var token = handleErrors(arguments[i]);\n          var index = list.indexOf(token);\n          if (index > -1) {\n            list.splice(index, 1);\n          }\n        }\n        // Note: as per spec, if handleErrors() throws any errors, we never\n        // make it here and none of the changes take effect.\n        // Also per spec: we run the \"update steps\" even if no change was\n        // made (ie, if the token wasn't previously present)\n        this._update(list);\n      }\n    },\n    toggle: {\n      value: function toggle(token, force) {\n        token = handleErrors(token);\n        if (this.contains(token)) {\n          if (force === undefined || force === false) {\n            this.remove(token);\n            return false;\n          }\n          return true;\n        } else {\n          if (force === undefined || force === true) {\n            this.add(token);\n            return true;\n          }\n          return false;\n        }\n      }\n    },\n    replace: {\n      value: function replace(token, newToken) {\n        // weird corner case of spec: if `token` contains whitespace, but\n        // `newToken` is the empty string, we must throw SyntaxError not\n        // InvalidCharacterError (sigh)\n        if (String(newToken) === '') {\n          utils.SyntaxError();\n        }\n        token = handleErrors(token);\n        newToken = handleErrors(newToken);\n        var list = getList(this);\n        var idx = list.indexOf(token);\n        if (idx < 0) {\n          // Note that, per spec, we do not run the update steps on this path.\n          return false;\n        }\n        var idx2 = list.indexOf(newToken);\n        if (idx2 < 0) {\n          list[idx] = newToken;\n        } else {\n          // \"replace the first instance of either `token` or `newToken` with\n          // `newToken` and remove all other instances\"\n          if (idx < idx2) {\n            list[idx] = newToken;\n            list.splice(idx2, 1);\n          } else {\n            // idx2 is already `newToken`\n            list.splice(idx, 1);\n          }\n        }\n        this._update(list);\n        return true;\n      }\n    },\n    toString: {\n      value: function () {\n        return this._getString();\n      }\n    },\n    value: {\n      get: function () {\n        return this._getString();\n      },\n      set: function (v) {\n        this._setString(v);\n        this._update();\n      }\n    },\n    // Called when the setter is called from outside this interface.\n    _update: {\n      value: function (list) {\n        if (list) {\n          fixIndex(this, list);\n          this._setString(list.join(\" \").trim());\n        } else {\n          fixIndex(this, getList(this));\n        }\n        this._lastStringValue = this._getString();\n      }\n    }\n  });\n  function fixIndex(clist, list) {\n    var oldLength = clist._length;\n    var i;\n    clist._length = list.length;\n    for (i = 0; i < list.length; i++) {\n      clist[i] = list[i];\n    }\n    // Clear/free old entries.\n    for (; i < oldLength; i++) {\n      clist[i] = undefined;\n    }\n  }\n  function handleErrors(token) {\n    token = String(token);\n    if (token === \"\") {\n      utils.SyntaxError();\n    }\n    if (/[ \\t\\r\\n\\f]/.test(token)) {\n      utils.InvalidCharacterError();\n    }\n    return token;\n  }\n  function toArray(clist) {\n    var length = clist._length;\n    var arr = Array(length);\n    for (var i = 0; i < length; i++) {\n      arr[i] = clist[i];\n    }\n    return arr;\n  }\n  function getList(clist) {\n    var strProp = clist._getString();\n    if (strProp === clist._lastStringValue) {\n      return toArray(clist);\n    }\n    var str = strProp.replace(/(^[ \\t\\r\\n\\f]+)|([ \\t\\r\\n\\f]+$)/g, '');\n    if (str === \"\") {\n      return [];\n    } else {\n      var seen = Object.create(null);\n      return str.split(/[ \\t\\r\\n\\f]+/g).filter(function (n) {\n        var key = '$' + n;\n        if (seen[key]) {\n          return false;\n        }\n        seen[key] = true;\n        return true;\n      });\n    }\n  }\n  return DOMTokenList_1;\n}\nvar select = {\n  exports: {}\n};\nvar hasRequiredSelect;\nfunction requireSelect() {\n  if (hasRequiredSelect) return select.exports;\n  hasRequiredSelect = 1;\n  (function (module, exports) {\n    /* jshint eqnull: true */\n    /**\n     * Zest (https://github.com/chjj/zest)\n     * A css selector engine.\n     * Copyright (c) 2011-2012, Christopher Jeffrey. (MIT Licensed)\n     * Domino version based on Zest v0.1.3 with bugfixes applied.\n     */\n\n    /**\n     * Helpers\n     */\n\n    var window = Object.create(null, {\n      location: {\n        get: function () {\n          throw new Error('window.location is not supported.');\n        }\n      }\n    });\n    var compareDocumentPosition = function (a, b) {\n      return a.compareDocumentPosition(b);\n    };\n    var order = function (a, b) {\n      /* jshint bitwise: false */\n      return compareDocumentPosition(a, b) & 2 ? 1 : -1;\n    };\n    var next = function (el) {\n      while ((el = el.nextSibling) && el.nodeType !== 1);\n      return el;\n    };\n    var prev = function (el) {\n      while ((el = el.previousSibling) && el.nodeType !== 1);\n      return el;\n    };\n    var child = function (el) {\n      /*jshint -W084 */\n      if (el = el.firstChild) {\n        while (el.nodeType !== 1 && (el = el.nextSibling));\n      }\n      return el;\n    };\n    var lastChild = function (el) {\n      /*jshint -W084 */\n      if (el = el.lastChild) {\n        while (el.nodeType !== 1 && (el = el.previousSibling));\n      }\n      return el;\n    };\n    var parentIsElement = function (n) {\n      if (!n.parentNode) {\n        return false;\n      }\n      var nodeType = n.parentNode.nodeType;\n      // The root `html` element can be a first- or last-child, too.\n      return nodeType === 1 || nodeType === 9;\n    };\n    var unquote = function (str) {\n      if (!str) return str;\n      var ch = str[0];\n      if (ch === '\"' || ch === '\\'') {\n        if (str[str.length - 1] === ch) {\n          str = str.slice(1, -1);\n        } else {\n          // bad string.\n          str = str.slice(1);\n        }\n        return str.replace(rules.str_escape, function (s) {\n          var m = /^\\\\(?:([0-9A-Fa-f]+)|([\\r\\n\\f]+))/.exec(s);\n          if (!m) {\n            return s.slice(1);\n          }\n          if (m[2]) {\n            return ''; /* escaped newlines are ignored in strings. */\n          }\n          var cp = parseInt(m[1], 16);\n          return String.fromCodePoint ? String.fromCodePoint(cp) :\n          // Not all JavaScript implementations have String.fromCodePoint yet.\n          String.fromCharCode(cp);\n        });\n      } else if (rules.ident.test(str)) {\n        return decodeid(str);\n      } else {\n        // NUMBER, PERCENTAGE, DIMENSION, etc\n        return str;\n      }\n    };\n    var decodeid = function (str) {\n      return str.replace(rules.escape, function (s) {\n        var m = /^\\\\([0-9A-Fa-f]+)/.exec(s);\n        if (!m) {\n          return s[1];\n        }\n        var cp = parseInt(m[1], 16);\n        return String.fromCodePoint ? String.fromCodePoint(cp) :\n        // Not all JavaScript implementations have String.fromCodePoint yet.\n        String.fromCharCode(cp);\n      });\n    };\n    var indexOf = function () {\n      if (Array.prototype.indexOf) {\n        return Array.prototype.indexOf;\n      }\n      return function (obj, item) {\n        var i = this.length;\n        while (i--) {\n          if (this[i] === item) return i;\n        }\n        return -1;\n      };\n    }();\n    var makeInside = function (start, end) {\n      var regex = rules.inside.source.replace(/</g, start).replace(/>/g, end);\n      return new RegExp(regex);\n    };\n    var replace = function (regex, name, val) {\n      regex = regex.source;\n      regex = regex.replace(name, val.source || val);\n      return new RegExp(regex);\n    };\n    var truncateUrl = function (url, num) {\n      return url.replace(/^(?:\\w+:\\/\\/|\\/+)/, '').replace(/(?:\\/+|\\/*#.*?)$/, '').split('/', num).join('/');\n    };\n\n    /**\n     * Handle `nth` Selectors\n     */\n\n    var parseNth = function (param_, test) {\n      var param = param_.replace(/\\s+/g, ''),\n        cap;\n      if (param === 'even') {\n        param = '2n+0';\n      } else if (param === 'odd') {\n        param = '2n+1';\n      } else if (param.indexOf('n') === -1) {\n        param = '0n' + param;\n      }\n      cap = /^([+-])?(\\d+)?n([+-])?(\\d+)?$/.exec(param);\n      return {\n        group: cap[1] === '-' ? -(cap[2] || 1) : +(cap[2] || 1),\n        offset: cap[4] ? cap[3] === '-' ? -cap[4] : +cap[4] : 0\n      };\n    };\n    var nth = function (param_, test, last) {\n      var param = parseNth(param_),\n        group = param.group,\n        offset = param.offset,\n        find = !last ? child : lastChild,\n        advance = !last ? next : prev;\n      return function (el) {\n        if (!parentIsElement(el)) return;\n        var rel = find(el.parentNode),\n          pos = 0;\n        while (rel) {\n          if (test(rel, el)) pos++;\n          if (rel === el) {\n            pos -= offset;\n            return group && pos ? pos % group === 0 && pos < 0 === group < 0 : !pos;\n          }\n          rel = advance(rel);\n        }\n      };\n    };\n\n    /**\n     * Simple Selectors\n     */\n\n    var selectors = {\n      '*': function () {\n        return function () {\n          return true;\n        };\n      }(),\n      'type': function (type) {\n        type = type.toLowerCase();\n        return function (el) {\n          return el.nodeName.toLowerCase() === type;\n        };\n      },\n      'attr': function (key, op, val, i) {\n        op = operators[op];\n        return function (el) {\n          var attr;\n          switch (key) {\n            case 'for':\n              attr = el.htmlFor;\n              break;\n            case 'class':\n              // className is '' when non-existent\n              // getAttribute('class') is null\n              attr = el.className;\n              if (attr === '' && el.getAttribute('class') == null) {\n                attr = null;\n              }\n              break;\n            case 'href':\n            case 'src':\n              attr = el.getAttribute(key, 2);\n              break;\n            case 'title':\n              // getAttribute('title') can be '' when non-existent sometimes?\n              attr = el.getAttribute('title') || null;\n              break;\n            // careful with attributes with special getter functions\n            case 'id':\n            case 'lang':\n            case 'dir':\n            case 'accessKey':\n            case 'hidden':\n            case 'tabIndex':\n            case 'style':\n              if (el.getAttribute) {\n                attr = el.getAttribute(key);\n                break;\n              }\n            /* falls through */\n            default:\n              if (el.hasAttribute && !el.hasAttribute(key)) {\n                break;\n              }\n              attr = el[key] != null ? el[key] : el.getAttribute && el.getAttribute(key);\n              break;\n          }\n          if (attr == null) return;\n          attr = attr + '';\n          if (i) {\n            attr = attr.toLowerCase();\n            val = val.toLowerCase();\n          }\n          return op(attr, val);\n        };\n      },\n      ':first-child': function (el) {\n        return !prev(el) && parentIsElement(el);\n      },\n      ':last-child': function (el) {\n        return !next(el) && parentIsElement(el);\n      },\n      ':only-child': function (el) {\n        return !prev(el) && !next(el) && parentIsElement(el);\n      },\n      ':nth-child': function (param, last) {\n        return nth(param, function () {\n          return true;\n        }, last);\n      },\n      ':nth-last-child': function (param) {\n        return selectors[':nth-child'](param, true);\n      },\n      ':root': function (el) {\n        return el.ownerDocument.documentElement === el;\n      },\n      ':empty': function (el) {\n        return !el.firstChild;\n      },\n      ':not': function (sel) {\n        var test = compileGroup(sel);\n        return function (el) {\n          return !test(el);\n        };\n      },\n      ':first-of-type': function (el) {\n        if (!parentIsElement(el)) return;\n        var type = el.nodeName;\n        /*jshint -W084 */\n        while (el = prev(el)) {\n          if (el.nodeName === type) return;\n        }\n        return true;\n      },\n      ':last-of-type': function (el) {\n        if (!parentIsElement(el)) return;\n        var type = el.nodeName;\n        /*jshint -W084 */\n        while (el = next(el)) {\n          if (el.nodeName === type) return;\n        }\n        return true;\n      },\n      ':only-of-type': function (el) {\n        return selectors[':first-of-type'](el) && selectors[':last-of-type'](el);\n      },\n      ':nth-of-type': function (param, last) {\n        return nth(param, function (rel, el) {\n          return rel.nodeName === el.nodeName;\n        }, last);\n      },\n      ':nth-last-of-type': function (param) {\n        return selectors[':nth-of-type'](param, true);\n      },\n      ':checked': function (el) {\n        return !!(el.checked || el.selected);\n      },\n      ':indeterminate': function (el) {\n        return !selectors[':checked'](el);\n      },\n      ':enabled': function (el) {\n        return !el.disabled && el.type !== 'hidden';\n      },\n      ':disabled': function (el) {\n        return !!el.disabled;\n      },\n      ':target': function (el) {\n        return el.id === window.location.hash.substring(1);\n      },\n      ':focus': function (el) {\n        return el === el.ownerDocument.activeElement;\n      },\n      ':is': function (sel) {\n        return compileGroup(sel);\n      },\n      // :matches is an older name for :is; see\n      // https://github.com/w3c/csswg-drafts/issues/3258\n      ':matches': function (sel) {\n        return selectors[':is'](sel);\n      },\n      ':nth-match': function (param, last) {\n        var args = param.split(/\\s*,\\s*/),\n          arg = args.shift(),\n          test = compileGroup(args.join(','));\n        return nth(arg, test, last);\n      },\n      ':nth-last-match': function (param) {\n        return selectors[':nth-match'](param, true);\n      },\n      ':links-here': function (el) {\n        return el + '' === window.location + '';\n      },\n      ':lang': function (param) {\n        return function (el) {\n          while (el) {\n            if (el.lang) return el.lang.indexOf(param) === 0;\n            el = el.parentNode;\n          }\n        };\n      },\n      ':dir': function (param) {\n        return function (el) {\n          while (el) {\n            if (el.dir) return el.dir === param;\n            el = el.parentNode;\n          }\n        };\n      },\n      ':scope': function (el, con) {\n        var context = con || el.ownerDocument;\n        if (context.nodeType === 9) {\n          return el === context.documentElement;\n        }\n        return el === context;\n      },\n      ':any-link': function (el) {\n        return typeof el.href === 'string';\n      },\n      ':local-link': function (el) {\n        if (el.nodeName) {\n          return el.href && el.host === window.location.host;\n        }\n        var param = +el + 1;\n        return function (el) {\n          if (!el.href) return;\n          var url = window.location + '',\n            href = el + '';\n          return truncateUrl(url, param) === truncateUrl(href, param);\n        };\n      },\n      ':default': function (el) {\n        return !!el.defaultSelected;\n      },\n      ':valid': function (el) {\n        return el.willValidate || el.validity && el.validity.valid;\n      },\n      ':invalid': function (el) {\n        return !selectors[':valid'](el);\n      },\n      ':in-range': function (el) {\n        return el.value > el.min && el.value <= el.max;\n      },\n      ':out-of-range': function (el) {\n        return !selectors[':in-range'](el);\n      },\n      ':required': function (el) {\n        return !!el.required;\n      },\n      ':optional': function (el) {\n        return !el.required;\n      },\n      ':read-only': function (el) {\n        if (el.readOnly) return true;\n        var attr = el.getAttribute('contenteditable'),\n          prop = el.contentEditable,\n          name = el.nodeName.toLowerCase();\n        name = name !== 'input' && name !== 'textarea';\n        return (name || el.disabled) && attr == null && prop !== 'true';\n      },\n      ':read-write': function (el) {\n        return !selectors[':read-only'](el);\n      },\n      ':hover': function () {\n        throw new Error(':hover is not supported.');\n      },\n      ':active': function () {\n        throw new Error(':active is not supported.');\n      },\n      ':link': function () {\n        throw new Error(':link is not supported.');\n      },\n      ':visited': function () {\n        throw new Error(':visited is not supported.');\n      },\n      ':column': function () {\n        throw new Error(':column is not supported.');\n      },\n      ':nth-column': function () {\n        throw new Error(':nth-column is not supported.');\n      },\n      ':nth-last-column': function () {\n        throw new Error(':nth-last-column is not supported.');\n      },\n      ':current': function () {\n        throw new Error(':current is not supported.');\n      },\n      ':past': function () {\n        throw new Error(':past is not supported.');\n      },\n      ':future': function () {\n        throw new Error(':future is not supported.');\n      },\n      // Non-standard, for compatibility purposes.\n      ':contains': function (param) {\n        return function (el) {\n          var text = el.innerText || el.textContent || el.value || '';\n          return text.indexOf(param) !== -1;\n        };\n      },\n      ':has': function (param) {\n        return function (el) {\n          return find(param, el).length > 0;\n        };\n      }\n      // Potentially add more pseudo selectors for\n      // compatibility with sizzle and most other\n      // selector engines (?).\n    };\n\n    /**\n     * Attribute Operators\n     */\n\n    var operators = {\n      '-': function () {\n        return true;\n      },\n      '=': function (attr, val) {\n        return attr === val;\n      },\n      '*=': function (attr, val) {\n        return attr.indexOf(val) !== -1;\n      },\n      '~=': function (attr, val) {\n        var i, s, f, l;\n        for (s = 0; true; s = i + 1) {\n          i = attr.indexOf(val, s);\n          if (i === -1) return false;\n          f = attr[i - 1];\n          l = attr[i + val.length];\n          if ((!f || f === ' ') && (!l || l === ' ')) return true;\n        }\n      },\n      '|=': function (attr, val) {\n        var i = attr.indexOf(val),\n          l;\n        if (i !== 0) return;\n        l = attr[i + val.length];\n        return l === '-' || !l;\n      },\n      '^=': function (attr, val) {\n        return attr.indexOf(val) === 0;\n      },\n      '$=': function (attr, val) {\n        var i = attr.lastIndexOf(val);\n        return i !== -1 && i + val.length === attr.length;\n      },\n      // non-standard\n      '!=': function (attr, val) {\n        return attr !== val;\n      }\n    };\n\n    /**\n     * Combinator Logic\n     */\n\n    var combinators = {\n      ' ': function (test) {\n        return function (el) {\n          /*jshint -W084 */\n          while (el = el.parentNode) {\n            if (test(el)) return el;\n          }\n        };\n      },\n      '>': function (test) {\n        return function (el) {\n          /*jshint -W084 */\n          if (el = el.parentNode) {\n            return test(el) && el;\n          }\n        };\n      },\n      '+': function (test) {\n        return function (el) {\n          /*jshint -W084 */\n          if (el = prev(el)) {\n            return test(el) && el;\n          }\n        };\n      },\n      '~': function (test) {\n        return function (el) {\n          /*jshint -W084 */\n          while (el = prev(el)) {\n            if (test(el)) return el;\n          }\n        };\n      },\n      'noop': function (test) {\n        return function (el) {\n          return test(el) && el;\n        };\n      },\n      'ref': function (test, name) {\n        var node;\n        function ref(el) {\n          var doc = el.ownerDocument,\n            nodes = doc.getElementsByTagName('*'),\n            i = nodes.length;\n          while (i--) {\n            node = nodes[i];\n            if (ref.test(el)) {\n              node = null;\n              return true;\n            }\n          }\n          node = null;\n        }\n        ref.combinator = function (el) {\n          if (!node || !node.getAttribute) return;\n          var attr = node.getAttribute(name) || '';\n          if (attr[0] === '#') attr = attr.substring(1);\n          if (attr === el.id && test(node)) {\n            return node;\n          }\n        };\n        return ref;\n      }\n    };\n\n    /**\n     * Grammar\n     */\n\n    var rules = {\n      escape: /\\\\(?:[^0-9A-Fa-f\\r\\n]|[0-9A-Fa-f]{1,6}[\\r\\n\\t ]?)/g,\n      str_escape: /(escape)|\\\\(\\n|\\r\\n?|\\f)/g,\n      nonascii: /[\\u00A0-\\uFFFF]/,\n      cssid: /(?:(?!-?[0-9])(?:escape|nonascii|[-_a-zA-Z0-9])+)/,\n      qname: /^ *(cssid|\\*)/,\n      simple: /^(?:([.#]cssid)|pseudo|attr)/,\n      ref: /^ *\\/(cssid)\\/ */,\n      combinator: /^(?: +([^ \\w*.#\\\\]) +|( )+|([^ \\w*.#\\\\]))(?! *$)/,\n      attr: /^\\[(cssid)(?:([^\\w]?=)(inside))?\\]/,\n      pseudo: /^(:cssid)(?:\\((inside)\\))?/,\n      inside: /(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|<[^\"'>]*>|\\\\[\"'>]|[^\"'>])*/,\n      ident: /^(cssid)$/\n    };\n    rules.cssid = replace(rules.cssid, 'nonascii', rules.nonascii);\n    rules.cssid = replace(rules.cssid, 'escape', rules.escape);\n    rules.qname = replace(rules.qname, 'cssid', rules.cssid);\n    rules.simple = replace(rules.simple, 'cssid', rules.cssid);\n    rules.ref = replace(rules.ref, 'cssid', rules.cssid);\n    rules.attr = replace(rules.attr, 'cssid', rules.cssid);\n    rules.pseudo = replace(rules.pseudo, 'cssid', rules.cssid);\n    rules.inside = replace(rules.inside, '[^\"\\'>]*', rules.inside);\n    rules.attr = replace(rules.attr, 'inside', makeInside('\\\\[', '\\\\]'));\n    rules.pseudo = replace(rules.pseudo, 'inside', makeInside('\\\\(', '\\\\)'));\n    rules.simple = replace(rules.simple, 'pseudo', rules.pseudo);\n    rules.simple = replace(rules.simple, 'attr', rules.attr);\n    rules.ident = replace(rules.ident, 'cssid', rules.cssid);\n    rules.str_escape = replace(rules.str_escape, 'escape', rules.escape);\n\n    /**\n     * Compiling\n     */\n\n    var compile = function (sel_) {\n      var sel = sel_.replace(/^\\s+|\\s+$/g, ''),\n        test,\n        filter = [],\n        buff = [],\n        subject,\n        qname,\n        cap,\n        op,\n        ref;\n\n      /*jshint -W084 */\n      while (sel) {\n        if (cap = rules.qname.exec(sel)) {\n          sel = sel.substring(cap[0].length);\n          qname = decodeid(cap[1]);\n          buff.push(tok(qname, true));\n        } else if (cap = rules.simple.exec(sel)) {\n          sel = sel.substring(cap[0].length);\n          qname = '*';\n          buff.push(tok(qname, true));\n          buff.push(tok(cap));\n        } else {\n          throw new SyntaxError('Invalid selector.');\n        }\n        while (cap = rules.simple.exec(sel)) {\n          sel = sel.substring(cap[0].length);\n          buff.push(tok(cap));\n        }\n        if (sel[0] === '!') {\n          sel = sel.substring(1);\n          subject = makeSubject();\n          subject.qname = qname;\n          buff.push(subject.simple);\n        }\n        if (cap = rules.ref.exec(sel)) {\n          sel = sel.substring(cap[0].length);\n          ref = combinators.ref(makeSimple(buff), decodeid(cap[1]));\n          filter.push(ref.combinator);\n          buff = [];\n          continue;\n        }\n        if (cap = rules.combinator.exec(sel)) {\n          sel = sel.substring(cap[0].length);\n          op = cap[1] || cap[2] || cap[3];\n          if (op === ',') {\n            filter.push(combinators.noop(makeSimple(buff)));\n            break;\n          }\n        } else {\n          op = 'noop';\n        }\n        if (!combinators[op]) {\n          throw new SyntaxError('Bad combinator.');\n        }\n        filter.push(combinators[op](makeSimple(buff)));\n        buff = [];\n      }\n      test = makeTest(filter);\n      test.qname = qname;\n      test.sel = sel;\n      if (subject) {\n        subject.lname = test.qname;\n        subject.test = test;\n        subject.qname = subject.qname;\n        subject.sel = test.sel;\n        test = subject;\n      }\n      if (ref) {\n        ref.test = test;\n        ref.qname = test.qname;\n        ref.sel = test.sel;\n        test = ref;\n      }\n      return test;\n    };\n    var tok = function (cap, qname) {\n      // qname\n      if (qname) {\n        return cap === '*' ? selectors['*'] : selectors.type(cap);\n      }\n\n      // class/id\n      if (cap[1]) {\n        return cap[1][0] === '.'\n        // XXX unescape here?  or in attr?\n        ? selectors.attr('class', '~=', decodeid(cap[1].substring(1)), false) : selectors.attr('id', '=', decodeid(cap[1].substring(1)), false);\n      }\n\n      // pseudo-name\n      // inside-pseudo\n      if (cap[2]) {\n        return cap[3] ? selectors[decodeid(cap[2])](unquote(cap[3])) : selectors[decodeid(cap[2])];\n      }\n\n      // attr name\n      // attr op\n      // attr value\n      if (cap[4]) {\n        var value = cap[6];\n        var i = /[\"'\\s]\\s*I$/i.test(value);\n        if (i) {\n          value = value.replace(/\\s*I$/i, '');\n        }\n        return selectors.attr(decodeid(cap[4]), cap[5] || '-', unquote(value), i);\n      }\n      throw new SyntaxError('Unknown Selector.');\n    };\n    var makeSimple = function (func) {\n      var l = func.length,\n        i;\n\n      // Potentially make sure\n      // `el` is truthy.\n      if (l < 2) return func[0];\n      return function (el) {\n        if (!el) return;\n        for (i = 0; i < l; i++) {\n          if (!func[i](el)) return;\n        }\n        return true;\n      };\n    };\n    var makeTest = function (func) {\n      if (func.length < 2) {\n        return function (el) {\n          return !!func[0](el);\n        };\n      }\n      return function (el) {\n        var i = func.length;\n        while (i--) {\n          if (!(el = func[i](el))) return;\n        }\n        return true;\n      };\n    };\n    var makeSubject = function () {\n      var target;\n      function subject(el) {\n        var node = el.ownerDocument,\n          scope = node.getElementsByTagName(subject.lname),\n          i = scope.length;\n        while (i--) {\n          if (subject.test(scope[i]) && target === el) {\n            target = null;\n            return true;\n          }\n        }\n        target = null;\n      }\n      subject.simple = function (el) {\n        target = el;\n        return true;\n      };\n      return subject;\n    };\n    var compileGroup = function (sel) {\n      var test = compile(sel),\n        tests = [test];\n      while (test.sel) {\n        test = compile(test.sel);\n        tests.push(test);\n      }\n      if (tests.length < 2) return test;\n      return function (el) {\n        var l = tests.length,\n          i = 0;\n        for (; i < l; i++) {\n          if (tests[i](el)) return true;\n        }\n      };\n    };\n\n    /**\n     * Selection\n     */\n\n    var find = function (sel, node) {\n      var results = [],\n        test = compile(sel),\n        scope = node.getElementsByTagName(test.qname),\n        i = 0,\n        el;\n\n      /*jshint -W084 */\n      while (el = scope[i++]) {\n        if (test(el)) results.push(el);\n      }\n      if (test.sel) {\n        while (test.sel) {\n          test = compile(test.sel);\n          scope = node.getElementsByTagName(test.qname);\n          i = 0;\n          /*jshint -W084 */\n          while (el = scope[i++]) {\n            if (test(el) && indexOf.call(results, el) === -1) {\n              results.push(el);\n            }\n          }\n        }\n        results.sort(order);\n      }\n      return results;\n    };\n\n    /**\n     * Expose\n     */\n\n    module.exports = exports = function (sel, context) {\n      /* when context isn't a DocumentFragment and the selector is simple: */\n      var id, r;\n      if (context.nodeType !== 11 && sel.indexOf(' ') === -1) {\n        if (sel[0] === '#' && context.rooted && /^#[A-Z_][-A-Z0-9_]*$/i.test(sel)) {\n          if (context.doc._hasMultipleElementsWithId) {\n            id = sel.substring(1);\n            if (!context.doc._hasMultipleElementsWithId(id)) {\n              r = context.doc.getElementById(id);\n              return r ? [r] : [];\n            }\n          }\n        }\n        if (sel[0] === '.' && /^\\.\\w+$/.test(sel)) {\n          return context.getElementsByClassName(sel.substring(1));\n        }\n        if (/^\\w+$/.test(sel)) {\n          return context.getElementsByTagName(sel);\n        }\n      }\n      /* do things the hard/slow way */\n      return find(sel, context);\n    };\n    exports.selectors = selectors;\n    exports.operators = operators;\n    exports.combinators = combinators;\n    exports.matches = function (el, sel) {\n      var test = {\n        sel: sel\n      };\n      do {\n        test = compile(test.sel);\n        if (test(el)) {\n          return true;\n        }\n      } while (test.sel);\n      return false;\n    };\n  })(select, select.exports);\n  return select.exports;\n}\nvar ChildNode_1;\nvar hasRequiredChildNode;\nfunction requireChildNode() {\n  if (hasRequiredChildNode) return ChildNode_1;\n  hasRequiredChildNode = 1;\n  var Node = requireNode();\n  var LinkedList = requireLinkedList();\n  var createDocumentFragmentFromArguments = function (document, args) {\n    var docFrag = document.createDocumentFragment();\n    for (var i = 0; i < args.length; i++) {\n      var argItem = args[i];\n      var isNode = argItem instanceof Node;\n      docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n    }\n    return docFrag;\n  };\n\n  // The ChildNode interface contains methods that are particular to `Node`\n  // objects that can have a parent.  It is implemented by `Element`,\n  // `DocumentType`, and `CharacterData` objects.\n  var ChildNode = {\n    // Inserts a set of Node or String objects in the children list of this\n    // ChildNode's parent, just after this ChildNode.  String objects are\n    // inserted as the equivalent Text nodes.\n    after: {\n      value: function after() {\n        var argArr = Array.prototype.slice.call(arguments);\n        var parentNode = this.parentNode,\n          nextSibling = this.nextSibling;\n        if (parentNode === null) {\n          return;\n        }\n        // Find \"viable next sibling\"; that is, next one not in argArr\n        while (nextSibling && argArr.some(function (v) {\n          return v === nextSibling;\n        })) nextSibling = nextSibling.nextSibling;\n        // ok, parent and sibling are saved away since this node could itself\n        // appear in argArr and we're about to move argArr to a document fragment.\n        var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\n        parentNode.insertBefore(docFrag, nextSibling);\n      }\n    },\n    // Inserts a set of Node or String objects in the children list of this\n    // ChildNode's parent, just before this ChildNode.  String objects are\n    // inserted as the equivalent Text nodes.\n    before: {\n      value: function before() {\n        var argArr = Array.prototype.slice.call(arguments);\n        var parentNode = this.parentNode,\n          prevSibling = this.previousSibling;\n        if (parentNode === null) {\n          return;\n        }\n        // Find \"viable prev sibling\"; that is, prev one not in argArr\n        while (prevSibling && argArr.some(function (v) {\n          return v === prevSibling;\n        })) prevSibling = prevSibling.previousSibling;\n        // ok, parent and sibling are saved away since this node could itself\n        // appear in argArr and we're about to move argArr to a document fragment.\n        var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\n        var nextSibling = prevSibling ? prevSibling.nextSibling : parentNode.firstChild;\n        parentNode.insertBefore(docFrag, nextSibling);\n      }\n    },\n    // Remove this node from its parent\n    remove: {\n      value: function remove() {\n        if (this.parentNode === null) return;\n\n        // Send mutation events if necessary\n        if (this.doc) {\n          this.doc._preremoveNodeIterators(this);\n          if (this.rooted) {\n            this.doc.mutateRemove(this);\n          }\n        }\n\n        // Remove this node from its parents array of children\n        // and update the structure id for all ancestors\n        this._remove();\n\n        // Forget this node's parent\n        this.parentNode = null;\n      }\n    },\n    // Remove this node w/o uprooting or sending mutation events\n    // (But do update the structure id for all ancestors)\n    _remove: {\n      value: function _remove() {\n        var parent = this.parentNode;\n        if (parent === null) return;\n        if (parent._childNodes) {\n          parent._childNodes.splice(this.index, 1);\n        } else if (parent._firstChild === this) {\n          if (this._nextSibling === this) {\n            parent._firstChild = null;\n          } else {\n            parent._firstChild = this._nextSibling;\n          }\n        }\n        LinkedList.remove(this);\n        parent.modify();\n      }\n    },\n    // Replace this node with the nodes or strings provided as arguments.\n    replaceWith: {\n      value: function replaceWith() {\n        var argArr = Array.prototype.slice.call(arguments);\n        var parentNode = this.parentNode,\n          nextSibling = this.nextSibling;\n        if (parentNode === null) {\n          return;\n        }\n        // Find \"viable next sibling\"; that is, next one not in argArr\n        while (nextSibling && argArr.some(function (v) {\n          return v === nextSibling;\n        })) nextSibling = nextSibling.nextSibling;\n        // ok, parent and sibling are saved away since this node could itself\n        // appear in argArr and we're about to move argArr to a document fragment.\n        var docFrag = createDocumentFragmentFromArguments(this.doc, argArr);\n        if (this.parentNode === parentNode) {\n          parentNode.replaceChild(docFrag, this);\n        } else {\n          // `this` was inserted into docFrag\n          parentNode.insertBefore(docFrag, nextSibling);\n        }\n      }\n    }\n  };\n  ChildNode_1 = ChildNode;\n  return ChildNode_1;\n}\nvar NonDocumentTypeChildNode_1;\nvar hasRequiredNonDocumentTypeChildNode;\nfunction requireNonDocumentTypeChildNode() {\n  if (hasRequiredNonDocumentTypeChildNode) return NonDocumentTypeChildNode_1;\n  hasRequiredNonDocumentTypeChildNode = 1;\n  var Node = requireNode();\n  var NonDocumentTypeChildNode = {\n    nextElementSibling: {\n      get: function () {\n        if (this.parentNode) {\n          for (var kid = this.nextSibling; kid !== null; kid = kid.nextSibling) {\n            if (kid.nodeType === Node.ELEMENT_NODE) return kid;\n          }\n        }\n        return null;\n      }\n    },\n    previousElementSibling: {\n      get: function () {\n        if (this.parentNode) {\n          for (var kid = this.previousSibling; kid !== null; kid = kid.previousSibling) {\n            if (kid.nodeType === Node.ELEMENT_NODE) return kid;\n          }\n        }\n        return null;\n      }\n    }\n  };\n  NonDocumentTypeChildNode_1 = NonDocumentTypeChildNode;\n  return NonDocumentTypeChildNode_1;\n}\nvar NamedNodeMap_1;\nvar hasRequiredNamedNodeMap;\nfunction requireNamedNodeMap() {\n  if (hasRequiredNamedNodeMap) return NamedNodeMap_1;\n  hasRequiredNamedNodeMap = 1;\n  NamedNodeMap_1 = NamedNodeMap;\n  var utils = requireUtils();\n\n  /* This is a hacky implementation of NamedNodeMap, intended primarily to\n   * satisfy clients (like dompurify and the web-platform-tests) which check\n   * to ensure that Node#attributes instanceof NamedNodeMap. */\n\n  function NamedNodeMap(element) {\n    this.element = element;\n  }\n  Object.defineProperties(NamedNodeMap.prototype, {\n    length: {\n      get: utils.shouldOverride\n    },\n    item: {\n      value: utils.shouldOverride\n    },\n    getNamedItem: {\n      value: function getNamedItem(qualifiedName) {\n        return this.element.getAttributeNode(qualifiedName);\n      }\n    },\n    getNamedItemNS: {\n      value: function getNamedItemNS(namespace, localName) {\n        return this.element.getAttributeNodeNS(namespace, localName);\n      }\n    },\n    setNamedItem: {\n      value: utils.nyi\n    },\n    setNamedItemNS: {\n      value: utils.nyi\n    },\n    removeNamedItem: {\n      value: function removeNamedItem(qualifiedName) {\n        var attr = this.element.getAttributeNode(qualifiedName);\n        if (attr) {\n          this.element.removeAttribute(qualifiedName);\n          return attr;\n        }\n        utils.NotFoundError();\n      }\n    },\n    removeNamedItemNS: {\n      value: function removeNamedItemNS(ns, lname) {\n        var attr = this.element.getAttributeNodeNS(ns, lname);\n        if (attr) {\n          this.element.removeAttributeNS(ns, lname);\n          return attr;\n        }\n        utils.NotFoundError();\n      }\n    }\n  });\n  return NamedNodeMap_1;\n}\nvar Element_1;\nvar hasRequiredElement;\nfunction requireElement() {\n  if (hasRequiredElement) return Element_1;\n  hasRequiredElement = 1;\n  Element_1 = Element;\n  var xml = requireXmlnames();\n  var utils = requireUtils();\n  var NAMESPACE = utils.NAMESPACE;\n  var attributes = requireAttributes();\n  var Node = requireNode();\n  var NodeList = requireNodeList();\n  var NodeUtils = requireNodeUtils();\n  var FilteredElementList = requireFilteredElementList();\n  var DOMTokenList = requireDOMTokenList();\n  var select = requireSelect();\n  var ContainerNode = requireContainerNode();\n  var ChildNode = requireChildNode();\n  var NonDocumentTypeChildNode = requireNonDocumentTypeChildNode();\n  var NamedNodeMap = requireNamedNodeMap();\n  var uppercaseCache = Object.create(null);\n  function Element(doc, localName, namespaceURI, prefix) {\n    ContainerNode.call(this);\n    this.nodeType = Node.ELEMENT_NODE;\n    this.ownerDocument = doc;\n    this.localName = localName;\n    this.namespaceURI = namespaceURI;\n    this.prefix = prefix;\n    this._tagName = undefined;\n\n    // These properties maintain the set of attributes\n    this._attrsByQName = Object.create(null); // The qname->Attr map\n    this._attrsByLName = Object.create(null); // The ns|lname->Attr map\n    this._attrKeys = []; // attr index -> ns|lname\n  }\n  function recursiveGetText(node, a) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      a.push(node._data);\n    } else {\n      for (var i = 0, n = node.childNodes.length; i < n; i++) recursiveGetText(node.childNodes[i], a);\n    }\n  }\n  Element.prototype = Object.create(ContainerNode.prototype, {\n    isHTML: {\n      get: function isHTML() {\n        return this.namespaceURI === NAMESPACE.HTML && this.ownerDocument.isHTML;\n      }\n    },\n    tagName: {\n      get: function tagName() {\n        if (this._tagName === undefined) {\n          var tn;\n          if (this.prefix === null) {\n            tn = this.localName;\n          } else {\n            tn = this.prefix + ':' + this.localName;\n          }\n          if (this.isHTML) {\n            var up = uppercaseCache[tn];\n            if (!up) {\n              // Converting to uppercase can be slow, so cache the conversion.\n              uppercaseCache[tn] = up = utils.toASCIIUpperCase(tn);\n            }\n            tn = up;\n          }\n          this._tagName = tn;\n        }\n        return this._tagName;\n      }\n    },\n    nodeName: {\n      get: function () {\n        return this.tagName;\n      }\n    },\n    nodeValue: {\n      get: function () {\n        return null;\n      },\n      set: function () {}\n    },\n    textContent: {\n      get: function () {\n        var strings = [];\n        recursiveGetText(this, strings);\n        return strings.join('');\n      },\n      set: function (newtext) {\n        this.removeChildren();\n        if (newtext !== null && newtext !== undefined && newtext !== '') {\n          this._appendChild(this.ownerDocument.createTextNode(newtext));\n        }\n      }\n    },\n    innerText: {\n      get: function () {\n        var strings = [];\n        recursiveGetText(this, strings);\n        // Strip and collapse whitespace\n        // This doesn't 100% match the browser behavior,\n        // but should cover most of the cases. This is also similar to\n        // how Angular's renderer used to work: the `textContent` and `innerText`\n        // were almost equivalent from the renderer perspective.\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#differences_from_innertext\n        return strings.join('').replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\n      },\n      set: function (newtext) {\n        this.removeChildren();\n        if (newtext !== null && newtext !== undefined && newtext !== '') {\n          this._appendChild(this.ownerDocument.createTextNode(newtext));\n        }\n      }\n    },\n    innerHTML: {\n      get: function () {\n        return this.serialize();\n      },\n      set: utils.nyi\n    },\n    outerHTML: {\n      get: function () {\n        // \"the attribute must return the result of running the HTML fragment\n        // serialization algorithm on a fictional node whose only child is\n        // the context object\"\n        //\n        // The serialization logic is intentionally implemented in a separate\n        // `NodeUtils` helper instead of the more obvious choice of a private\n        // `_serializeOne()` method on the `Node.prototype` in order to avoid\n        // the megamorphic `this._serializeOne` property access, which reduces\n        // performance unnecessarily. If you need specialized behavior for a\n        // certain subclass, you'll need to implement that in `NodeUtils`.\n        // See https://github.com/fgnass/domino/pull/142 for more information.\n        return NodeUtils.serializeOne(this, {\n          nodeType: 0\n        });\n      },\n      set: function (v) {\n        var document = this.ownerDocument;\n        var parent = this.parentNode;\n        if (parent === null) {\n          return;\n        }\n        if (parent.nodeType === Node.DOCUMENT_NODE) {\n          utils.NoModificationAllowedError();\n        }\n        if (parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          parent = parent.ownerDocument.createElement(\"body\");\n        }\n        var parser = document.implementation.mozHTMLParser(document._address, parent);\n        parser.parse(v === null ? '' : String(v), true);\n        this.replaceWith(parser._asDocumentFragment());\n      }\n    },\n    _insertAdjacent: {\n      value: function _insertAdjacent(position, node) {\n        var first = false;\n        switch (position) {\n          case 'beforebegin':\n            first = true;\n          /* falls through */\n          case 'afterend':\n            var parent = this.parentNode;\n            if (parent === null) {\n              return null;\n            }\n            return parent.insertBefore(node, first ? this : this.nextSibling);\n          case 'afterbegin':\n            first = true;\n          /* falls through */\n          case 'beforeend':\n            return this.insertBefore(node, first ? this.firstChild : null);\n          default:\n            return utils.SyntaxError();\n        }\n      }\n    },\n    insertAdjacentElement: {\n      value: function insertAdjacentElement(position, element) {\n        if (element.nodeType !== Node.ELEMENT_NODE) {\n          throw new TypeError('not an element');\n        }\n        position = utils.toASCIILowerCase(String(position));\n        return this._insertAdjacent(position, element);\n      }\n    },\n    insertAdjacentText: {\n      value: function insertAdjacentText(position, data) {\n        var textNode = this.ownerDocument.createTextNode(data);\n        position = utils.toASCIILowerCase(String(position));\n        this._insertAdjacent(position, textNode);\n        // \"This method returns nothing because it existed before we had a chance\n        // to design it.\"\n      }\n    },\n    insertAdjacentHTML: {\n      value: function insertAdjacentHTML(position, text) {\n        position = utils.toASCIILowerCase(String(position));\n        text = String(text);\n        var context;\n        switch (position) {\n          case 'beforebegin':\n          case 'afterend':\n            context = this.parentNode;\n            if (context === null || context.nodeType === Node.DOCUMENT_NODE) {\n              utils.NoModificationAllowedError();\n            }\n            break;\n          case 'afterbegin':\n          case 'beforeend':\n            context = this;\n            break;\n          default:\n            utils.SyntaxError();\n        }\n        if (!(context instanceof Element) || context.ownerDocument.isHTML && context.localName === 'html' && context.namespaceURI === NAMESPACE.HTML) {\n          context = context.ownerDocument.createElementNS(NAMESPACE.HTML, 'body');\n        }\n        var parser = this.ownerDocument.implementation.mozHTMLParser(this.ownerDocument._address, context);\n        parser.parse(text, true);\n        this._insertAdjacent(position, parser._asDocumentFragment());\n      }\n    },\n    children: {\n      get: function () {\n        if (!this._children) {\n          this._children = new ChildrenCollection(this);\n        }\n        return this._children;\n      }\n    },\n    attributes: {\n      get: function () {\n        if (!this._attributes) {\n          this._attributes = new AttributesArray(this);\n        }\n        return this._attributes;\n      }\n    },\n    firstElementChild: {\n      get: function () {\n        for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n          if (kid.nodeType === Node.ELEMENT_NODE) return kid;\n        }\n        return null;\n      }\n    },\n    lastElementChild: {\n      get: function () {\n        for (var kid = this.lastChild; kid !== null; kid = kid.previousSibling) {\n          if (kid.nodeType === Node.ELEMENT_NODE) return kid;\n        }\n        return null;\n      }\n    },\n    childElementCount: {\n      get: function () {\n        return this.children.length;\n      }\n    },\n    // Return the next element, in source order, after this one or\n    // null if there are no more.  If root element is specified,\n    // then don't traverse beyond its subtree.\n    //\n    // This is not a DOM method, but is convenient for\n    // lazy traversals of the tree.\n    nextElement: {\n      value: function (root) {\n        if (!root) root = this.ownerDocument.documentElement;\n        var next = this.firstElementChild;\n        if (!next) {\n          // don't use sibling if we're at root\n          if (this === root) return null;\n          next = this.nextElementSibling;\n        }\n        if (next) return next;\n\n        // If we can't go down or across, then we have to go up\n        // and across to the parent sibling or another ancestor's\n        // sibling.  Be careful, though: if we reach the root\n        // element, or if we reach the documentElement, then\n        // the traversal ends.\n        for (var parent = this.parentElement; parent && parent !== root; parent = parent.parentElement) {\n          next = parent.nextElementSibling;\n          if (next) return next;\n        }\n        return null;\n      }\n    },\n    // XXX:\n    // Tests are currently failing for this function.\n    // Awaiting resolution of:\n    // http://lists.w3.org/Archives/Public/www-dom/2011JulSep/0016.html\n    getElementsByTagName: {\n      value: function getElementsByTagName(lname) {\n        var filter;\n        if (!lname) return new NodeList();\n        if (lname === '*') filter = function () {\n          return true;\n        };else if (this.isHTML) filter = htmlLocalNameElementFilter(lname);else filter = localNameElementFilter(lname);\n        return new FilteredElementList(this, filter);\n      }\n    },\n    getElementsByTagNameNS: {\n      value: function getElementsByTagNameNS(ns, lname) {\n        var filter;\n        if (ns === '*' && lname === '*') filter = function () {\n          return true;\n        };else if (ns === '*') filter = localNameElementFilter(lname);else if (lname === '*') filter = namespaceElementFilter(ns);else filter = namespaceLocalNameElementFilter(ns, lname);\n        return new FilteredElementList(this, filter);\n      }\n    },\n    getElementsByClassName: {\n      value: function getElementsByClassName(names) {\n        names = String(names).trim();\n        if (names === '') {\n          var result = new NodeList(); // Empty node list\n          return result;\n        }\n        names = names.split(/[ \\t\\r\\n\\f]+/); // Split on ASCII whitespace\n        return new FilteredElementList(this, classNamesElementFilter(names));\n      }\n    },\n    getElementsByName: {\n      value: function getElementsByName(name) {\n        return new FilteredElementList(this, elementNameFilter(String(name)));\n      }\n    },\n    // Utility methods used by the public API methods above\n    clone: {\n      value: function clone() {\n        var e;\n\n        // XXX:\n        // Modify this to use the constructor directly or\n        // avoid error checking in some other way. In case we try\n        // to clone an invalid node that the parser inserted.\n        //\n        if (this.namespaceURI !== NAMESPACE.HTML || this.prefix || !this.ownerDocument.isHTML) {\n          e = this.ownerDocument.createElementNS(this.namespaceURI, this.prefix !== null ? this.prefix + ':' + this.localName : this.localName);\n        } else {\n          e = this.ownerDocument.createElement(this.localName);\n        }\n        for (var i = 0, n = this._attrKeys.length; i < n; i++) {\n          var lname = this._attrKeys[i];\n          var a = this._attrsByLName[lname];\n          var b = a.cloneNode();\n          b._setOwnerElement(e);\n          e._attrsByLName[lname] = b;\n          e._addQName(b);\n        }\n        e._attrKeys = this._attrKeys.concat();\n        return e;\n      }\n    },\n    isEqual: {\n      value: function isEqual(that) {\n        if (this.localName !== that.localName || this.namespaceURI !== that.namespaceURI || this.prefix !== that.prefix || this._numattrs !== that._numattrs) return false;\n\n        // Compare the sets of attributes, ignoring order\n        // and ignoring attribute prefixes.\n        for (var i = 0, n = this._numattrs; i < n; i++) {\n          var a = this._attr(i);\n          if (!that.hasAttributeNS(a.namespaceURI, a.localName)) return false;\n          if (that.getAttributeNS(a.namespaceURI, a.localName) !== a.value) return false;\n        }\n        return true;\n      }\n    },\n    // This is the 'locate a namespace prefix' algorithm from the\n    // DOM specification.  It is used by Node.lookupPrefix()\n    // (Be sure to compare DOM3 and DOM4 versions of spec.)\n    _lookupNamespacePrefix: {\n      value: function _lookupNamespacePrefix(ns, originalElement) {\n        if (this.namespaceURI && this.namespaceURI === ns && this.prefix !== null && originalElement.lookupNamespaceURI(this.prefix) === ns) {\n          return this.prefix;\n        }\n        for (var i = 0, n = this._numattrs; i < n; i++) {\n          var a = this._attr(i);\n          if (a.prefix === 'xmlns' && a.value === ns && originalElement.lookupNamespaceURI(a.localName) === ns) {\n            return a.localName;\n          }\n        }\n        var parent = this.parentElement;\n        return parent ? parent._lookupNamespacePrefix(ns, originalElement) : null;\n      }\n    },\n    // This is the 'locate a namespace' algorithm for Element nodes\n    // from the DOM Core spec.  It is used by Node#lookupNamespaceURI()\n    lookupNamespaceURI: {\n      value: function lookupNamespaceURI(prefix) {\n        if (prefix === '' || prefix === undefined) {\n          prefix = null;\n        }\n        if (this.namespaceURI !== null && this.prefix === prefix) return this.namespaceURI;\n        for (var i = 0, n = this._numattrs; i < n; i++) {\n          var a = this._attr(i);\n          if (a.namespaceURI === NAMESPACE.XMLNS) {\n            if (a.prefix === 'xmlns' && a.localName === prefix || prefix === null && a.prefix === null && a.localName === 'xmlns') {\n              return a.value || null;\n            }\n          }\n        }\n        var parent = this.parentElement;\n        return parent ? parent.lookupNamespaceURI(prefix) : null;\n      }\n    },\n    //\n    // Attribute handling methods and utilities\n    //\n\n    /*\n     * Attributes in the DOM are tricky:\n     *\n     * - there are the 8 basic get/set/has/removeAttribute{NS} methods\n     *\n     * - but many HTML attributes are also 'reflected' through IDL\n     *   attributes which means that they can be queried and set through\n     *   regular properties of the element.  There is just one attribute\n     *   value, but two ways to get and set it.\n     *\n     * - Different HTML element types have different sets of reflected\n       attributes.\n     *\n     * - attributes can also be queried and set through the .attributes\n     *   property of an element.  This property behaves like an array of\n     *   Attr objects.  The value property of each Attr is writeable, so\n     *   this is a third way to read and write attributes.\n     *\n     * - for efficiency, we really want to store attributes in some kind\n     *   of name->attr map.  But the attributes[] array is an array, not a\n     *   map, which is kind of unnatural.\n     *\n     * - When using namespaces and prefixes, and mixing the NS methods\n     *   with the non-NS methods, it is apparently actually possible for\n     *   an attributes[] array to have more than one attribute with the\n     *   same qualified name.  And certain methods must operate on only\n     *   the first attribute with such a name.  So for these methods, an\n     *   inefficient array-like data structure would be easier to\n     *   implement.\n     *\n     * - The attributes[] array is live, not a snapshot, so changes to the\n     *   attributes must be immediately visible through existing arrays.\n     *\n     * - When attributes are queried and set through IDL properties\n     *   (instead of the get/setAttributes() method or the attributes[]\n     *   array) they may be subject to type conversions, URL\n     *   normalization, etc., so some extra processing is required in that\n     *   case.\n     *\n     * - But access through IDL properties is probably the most common\n     *   case, so we'd like that to be as fast as possible.\n     *\n     * - We can't just store attribute values in their parsed idl form,\n     *   because setAttribute() has to return whatever string is passed to\n     *   getAttribute even if it is not a legal, parseable value. So\n     *   attribute values must be stored in unparsed string form.\n     *\n     * - We need to be able to send change notifications or mutation\n     *   events of some sort to the renderer whenever an attribute value\n     *   changes, regardless of the way in which it changes.\n     *\n     * - Some attributes, such as id and class affect other parts of the\n     *   DOM API, like getElementById and getElementsByClassName and so\n     *   for efficiency, we need to specially track changes to these\n     *   special attributes.\n     *\n     * - Some attributes like class have different names (className) when\n     *   reflected.\n     *\n     * - Attributes whose names begin with the string 'data-' are treated\n       specially.\n     *\n     * - Reflected attributes that have a boolean type in IDL have special\n     *   behavior: setting them to false (in IDL) is the same as removing\n     *   them with removeAttribute()\n     *\n     * - numeric attributes (like HTMLElement.tabIndex) can have default\n     *   values that must be returned by the idl getter even if the\n     *   content attribute does not exist. (The default tabIndex value\n     *   actually varies based on the type of the element, so that is a\n     *   tricky one).\n     *\n     * See\n     * http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#reflect\n     * for rules on how attributes are reflected.\n     *\n     */\n\n    getAttribute: {\n      value: function getAttribute(qname) {\n        var attr = this.getAttributeNode(qname);\n        return attr ? attr.value : null;\n      }\n    },\n    getAttributeNS: {\n      value: function getAttributeNS(ns, lname) {\n        var attr = this.getAttributeNodeNS(ns, lname);\n        return attr ? attr.value : null;\n      }\n    },\n    getAttributeNode: {\n      value: function getAttributeNode(qname) {\n        qname = String(qname);\n        if (/[A-Z]/.test(qname) && this.isHTML) qname = utils.toASCIILowerCase(qname);\n        var attr = this._attrsByQName[qname];\n        if (!attr) return null;\n        if (Array.isArray(attr))\n          // If there is more than one\n          attr = attr[0]; // use the first\n\n        return attr;\n      }\n    },\n    getAttributeNodeNS: {\n      value: function getAttributeNodeNS(ns, lname) {\n        ns = ns === undefined || ns === null ? '' : String(ns);\n        lname = String(lname);\n        var attr = this._attrsByLName[ns + '|' + lname];\n        return attr ? attr : null;\n      }\n    },\n    hasAttribute: {\n      value: function hasAttribute(qname) {\n        qname = String(qname);\n        if (/[A-Z]/.test(qname) && this.isHTML) qname = utils.toASCIILowerCase(qname);\n        return this._attrsByQName[qname] !== undefined;\n      }\n    },\n    hasAttributeNS: {\n      value: function hasAttributeNS(ns, lname) {\n        ns = ns === undefined || ns === null ? '' : String(ns);\n        lname = String(lname);\n        var key = ns + '|' + lname;\n        return this._attrsByLName[key] !== undefined;\n      }\n    },\n    hasAttributes: {\n      value: function hasAttributes() {\n        return this._numattrs > 0;\n      }\n    },\n    toggleAttribute: {\n      value: function toggleAttribute(qname, force) {\n        qname = String(qname);\n        if (!xml.isValidName(qname)) utils.InvalidCharacterError();\n        if (/[A-Z]/.test(qname) && this.isHTML) qname = utils.toASCIILowerCase(qname);\n        var a = this._attrsByQName[qname];\n        if (a === undefined) {\n          if (force === undefined || force === true) {\n            this._setAttribute(qname, '');\n            return true;\n          }\n          return false;\n        } else {\n          if (force === undefined || force === false) {\n            this.removeAttribute(qname);\n            return false;\n          }\n          return true;\n        }\n      }\n    },\n    // Set the attribute without error checking. The parser uses this.\n    _setAttribute: {\n      value: function _setAttribute(qname, value) {\n        // XXX: the spec says that this next search should be done\n        // on the local name, but I think that is an error.\n        // email pending on www-dom about it.\n        var attr = this._attrsByQName[qname];\n        var isnew;\n        if (!attr) {\n          attr = this._newattr(qname);\n          isnew = true;\n        } else {\n          if (Array.isArray(attr)) attr = attr[0];\n        }\n\n        // Now set the attribute value on the new or existing Attr object.\n        // The Attr.value setter method handles mutation events, etc.\n        attr.value = value;\n        if (this._attributes) this._attributes[qname] = attr;\n        if (isnew && this._newattrhook) this._newattrhook(qname, value);\n      }\n    },\n    // Check for errors, and then set the attribute\n    setAttribute: {\n      value: function setAttribute(qname, value) {\n        qname = String(qname);\n        if (!xml.isValidName(qname)) utils.InvalidCharacterError();\n        if (/[A-Z]/.test(qname) && this.isHTML) qname = utils.toASCIILowerCase(qname);\n        this._setAttribute(qname, String(value));\n      }\n    },\n    // The version with no error checking used by the parser\n    _setAttributeNS: {\n      value: function _setAttributeNS(ns, qname, value) {\n        var pos = qname.indexOf(':'),\n          prefix,\n          lname;\n        if (pos < 0) {\n          prefix = null;\n          lname = qname;\n        } else {\n          prefix = qname.substring(0, pos);\n          lname = qname.substring(pos + 1);\n        }\n        if (ns === '' || ns === undefined) ns = null;\n        var key = (ns === null ? '' : ns) + '|' + lname;\n        var attr = this._attrsByLName[key];\n        var isnew;\n        if (!attr) {\n          attr = new Attr(this, lname, prefix, ns);\n          isnew = true;\n          this._attrsByLName[key] = attr;\n          if (this._attributes) {\n            this._attributes[this._attrKeys.length] = attr;\n          }\n          this._attrKeys.push(key);\n\n          // We also have to make the attr searchable by qname.\n          // But we have to be careful because there may already\n          // be an attr with this qname.\n          this._addQName(attr);\n        }\n        attr.value = value; // Automatically sends mutation event\n        if (isnew && this._newattrhook) this._newattrhook(qname, value);\n      }\n    },\n    // Do error checking then call _setAttributeNS\n    setAttributeNS: {\n      value: function setAttributeNS(ns, qname, value) {\n        // Convert parameter types according to WebIDL\n        ns = ns === null || ns === undefined || ns === '' ? null : String(ns);\n        qname = String(qname);\n        if (!xml.isValidQName(qname)) utils.InvalidCharacterError();\n        var pos = qname.indexOf(':');\n        var prefix = pos < 0 ? null : qname.substring(0, pos);\n        if (prefix !== null && ns === null || prefix === 'xml' && ns !== NAMESPACE.XML || (qname === 'xmlns' || prefix === 'xmlns') && ns !== NAMESPACE.XMLNS || ns === NAMESPACE.XMLNS && !(qname === 'xmlns' || prefix === 'xmlns')) utils.NamespaceError();\n        this._setAttributeNS(ns, qname, String(value));\n      }\n    },\n    setAttributeNode: {\n      value: function setAttributeNode(attr) {\n        if (attr.ownerElement !== null && attr.ownerElement !== this) {\n          utils.InUseAttributeError();\n        }\n        var result = null;\n        var oldAttrs = this._attrsByQName[attr.name];\n        if (oldAttrs) {\n          if (!Array.isArray(oldAttrs)) {\n            oldAttrs = [oldAttrs];\n          }\n          if (oldAttrs.some(function (a) {\n            return a === attr;\n          })) {\n            return attr;\n          } else if (attr.ownerElement !== null) {\n            utils.InUseAttributeError();\n          }\n          oldAttrs.forEach(function (a) {\n            this.removeAttributeNode(a);\n          }, this);\n          result = oldAttrs[0];\n        }\n        this.setAttributeNodeNS(attr);\n        return result;\n      }\n    },\n    setAttributeNodeNS: {\n      value: function setAttributeNodeNS(attr) {\n        if (attr.ownerElement !== null) {\n          utils.InUseAttributeError();\n        }\n        var ns = attr.namespaceURI;\n        var key = (ns === null ? '' : ns) + '|' + attr.localName;\n        var oldAttr = this._attrsByLName[key];\n        if (oldAttr) {\n          this.removeAttributeNode(oldAttr);\n        }\n        attr._setOwnerElement(this);\n        this._attrsByLName[key] = attr;\n        if (this._attributes) {\n          this._attributes[this._attrKeys.length] = attr;\n        }\n        this._attrKeys.push(key);\n        this._addQName(attr);\n        if (this._newattrhook) this._newattrhook(attr.name, attr.value);\n        return oldAttr || null;\n      }\n    },\n    removeAttribute: {\n      value: function removeAttribute(qname) {\n        qname = String(qname);\n        if (/[A-Z]/.test(qname) && this.isHTML) qname = utils.toASCIILowerCase(qname);\n        var attr = this._attrsByQName[qname];\n        if (!attr) return;\n\n        // If there is more than one match for this qname\n        // so don't delete the qname mapping, just remove the first\n        // element from it.\n        if (Array.isArray(attr)) {\n          if (attr.length > 2) {\n            attr = attr.shift(); // remove it from the array\n          } else {\n            this._attrsByQName[qname] = attr[1];\n            attr = attr[0];\n          }\n        } else {\n          // only a single match, so remove the qname mapping\n          this._attrsByQName[qname] = undefined;\n        }\n        var ns = attr.namespaceURI;\n        // Now attr is the removed attribute.  Figure out its\n        // ns+lname key and remove it from the other mapping as well.\n        var key = (ns === null ? '' : ns) + '|' + attr.localName;\n        this._attrsByLName[key] = undefined;\n        var i = this._attrKeys.indexOf(key);\n        if (this._attributes) {\n          Array.prototype.splice.call(this._attributes, i, 1);\n          this._attributes[qname] = undefined;\n        }\n        this._attrKeys.splice(i, 1);\n\n        // Onchange handler for the attribute\n        var onchange = attr.onchange;\n        attr._setOwnerElement(null);\n        if (onchange) {\n          onchange.call(attr, this, attr.localName, attr.value, null);\n        }\n        // Mutation event\n        if (this.rooted) this.ownerDocument.mutateRemoveAttr(attr);\n      }\n    },\n    removeAttributeNS: {\n      value: function removeAttributeNS(ns, lname) {\n        ns = ns === undefined || ns === null ? '' : String(ns);\n        lname = String(lname);\n        var key = ns + '|' + lname;\n        var attr = this._attrsByLName[key];\n        if (!attr) return;\n        this._attrsByLName[key] = undefined;\n        var i = this._attrKeys.indexOf(key);\n        if (this._attributes) {\n          Array.prototype.splice.call(this._attributes, i, 1);\n        }\n        this._attrKeys.splice(i, 1);\n\n        // Now find the same Attr object in the qname mapping and remove it\n        // But be careful because there may be more than one match.\n        this._removeQName(attr);\n\n        // Onchange handler for the attribute\n        var onchange = attr.onchange;\n        attr._setOwnerElement(null);\n        if (onchange) {\n          onchange.call(attr, this, attr.localName, attr.value, null);\n        }\n        // Mutation event\n        if (this.rooted) this.ownerDocument.mutateRemoveAttr(attr);\n      }\n    },\n    removeAttributeNode: {\n      value: function removeAttributeNode(attr) {\n        var ns = attr.namespaceURI;\n        var key = (ns === null ? '' : ns) + '|' + attr.localName;\n        if (this._attrsByLName[key] !== attr) {\n          utils.NotFoundError();\n        }\n        this.removeAttributeNS(ns, attr.localName);\n        return attr;\n      }\n    },\n    getAttributeNames: {\n      value: function getAttributeNames() {\n        var elt = this;\n        return this._attrKeys.map(function (key) {\n          return elt._attrsByLName[key].name;\n        });\n      }\n    },\n    // This 'raw' version of getAttribute is used by the getter functions\n    // of reflected attributes. It skips some error checking and\n    // namespace steps\n    _getattr: {\n      value: function _getattr(qname) {\n        // Assume that qname is already lowercased, so don't do it here.\n        // Also don't check whether attr is an array: a qname with no\n        // prefix will never have two matching Attr objects (because\n        // setAttributeNS doesn't allow a non-null namespace with a\n        // null prefix.\n        var attr = this._attrsByQName[qname];\n        return attr ? attr.value : null;\n      }\n    },\n    // The raw version of setAttribute for reflected idl attributes.\n    _setattr: {\n      value: function _setattr(qname, value) {\n        var attr = this._attrsByQName[qname];\n        var isnew;\n        if (!attr) {\n          attr = this._newattr(qname);\n          isnew = true;\n        }\n        attr.value = String(value);\n        if (this._attributes) this._attributes[qname] = attr;\n        if (isnew && this._newattrhook) this._newattrhook(qname, value);\n      }\n    },\n    // Create a new Attr object, insert it, and return it.\n    // Used by setAttribute() and by set()\n    _newattr: {\n      value: function _newattr(qname) {\n        var attr = new Attr(this, qname, null, null);\n        var key = '|' + qname;\n        this._attrsByQName[qname] = attr;\n        this._attrsByLName[key] = attr;\n        if (this._attributes) {\n          this._attributes[this._attrKeys.length] = attr;\n        }\n        this._attrKeys.push(key);\n        return attr;\n      }\n    },\n    // Add a qname->Attr mapping to the _attrsByQName object, taking into\n    // account that there may be more than one attr object with the\n    // same qname\n    _addQName: {\n      value: function (attr) {\n        var qname = attr.name;\n        var existing = this._attrsByQName[qname];\n        if (!existing) {\n          this._attrsByQName[qname] = attr;\n        } else if (Array.isArray(existing)) {\n          existing.push(attr);\n        } else {\n          this._attrsByQName[qname] = [existing, attr];\n        }\n        if (this._attributes) this._attributes[qname] = attr;\n      }\n    },\n    // Remove a qname->Attr mapping to the _attrsByQName object, taking into\n    // account that there may be more than one attr object with the\n    // same qname\n    _removeQName: {\n      value: function (attr) {\n        var qname = attr.name;\n        var target = this._attrsByQName[qname];\n        if (Array.isArray(target)) {\n          var idx = target.indexOf(attr);\n          utils.assert(idx !== -1); // It must be here somewhere\n          if (target.length === 2) {\n            this._attrsByQName[qname] = target[1 - idx];\n            if (this._attributes) {\n              this._attributes[qname] = this._attrsByQName[qname];\n            }\n          } else {\n            target.splice(idx, 1);\n            if (this._attributes && this._attributes[qname] === attr) {\n              this._attributes[qname] = target[0];\n            }\n          }\n        } else {\n          utils.assert(target === attr); // If only one, it must match\n          this._attrsByQName[qname] = undefined;\n          if (this._attributes) {\n            this._attributes[qname] = undefined;\n          }\n        }\n      }\n    },\n    // Return the number of attributes\n    _numattrs: {\n      get: function () {\n        return this._attrKeys.length;\n      }\n    },\n    // Return the nth Attr object\n    _attr: {\n      value: function (n) {\n        return this._attrsByLName[this._attrKeys[n]];\n      }\n    },\n    // Define getters and setters for an 'id' property that reflects\n    // the content attribute 'id'.\n    id: attributes.property({\n      name: 'id'\n    }),\n    // Define getters and setters for a 'className' property that reflects\n    // the content attribute 'class'.\n    className: attributes.property({\n      name: 'class'\n    }),\n    classList: {\n      get: function () {\n        var self = this;\n        if (this._classList) {\n          return this._classList;\n        }\n        var dtlist = new DOMTokenList(function () {\n          return self.className || \"\";\n        }, function (v) {\n          self.className = v;\n        });\n        this._classList = dtlist;\n        return dtlist;\n      },\n      set: function (v) {\n        this.className = v;\n      }\n    },\n    matches: {\n      value: function (selector) {\n        return select.matches(this, selector);\n      }\n    },\n    closest: {\n      value: function (selector) {\n        var el = this;\n        do {\n          if (el.matches && el.matches(selector)) {\n            return el;\n          }\n          el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === Node.ELEMENT_NODE);\n        return null;\n      }\n    },\n    querySelector: {\n      value: function (selector) {\n        return select(selector, this)[0];\n      }\n    },\n    querySelectorAll: {\n      value: function (selector) {\n        var nodes = select(selector, this);\n        return nodes.item ? nodes : new NodeList(nodes);\n      }\n    }\n  });\n  Object.defineProperties(Element.prototype, ChildNode);\n  Object.defineProperties(Element.prototype, NonDocumentTypeChildNode);\n\n  // Register special handling for the id attribute\n  attributes.registerChangeHandler(Element, 'id', function (element, lname, oldval, newval) {\n    if (element.rooted) {\n      if (oldval) {\n        element.ownerDocument.delId(oldval, element);\n      }\n      if (newval) {\n        element.ownerDocument.addId(newval, element);\n      }\n    }\n  });\n  attributes.registerChangeHandler(Element, 'class', function (element, lname, oldval, newval) {\n    if (element._classList) {\n      element._classList._update();\n    }\n  });\n\n  // The Attr class represents a single attribute.  The values in\n  // _attrsByQName and _attrsByLName are instances of this class.\n  function Attr(elt, lname, prefix, namespace, value) {\n    // localName and namespace are constant for any attr object.\n    // But value may change.  And so can prefix, and so, therefore can name.\n    this.localName = lname;\n    this.prefix = prefix === null || prefix === '' ? null : '' + prefix;\n    this.namespaceURI = namespace === null || namespace === '' ? null : '' + namespace;\n    this.data = value;\n    // Set ownerElement last to ensure it is hooked up to onchange handler\n    this._setOwnerElement(elt);\n  }\n\n  // In DOM 3 Attr was supposed to extend Node; in DOM 4 that was abandoned.\n  Attr.prototype = Object.create(Object.prototype, {\n    ownerElement: {\n      get: function () {\n        return this._ownerElement;\n      }\n    },\n    _setOwnerElement: {\n      value: function _setOwnerElement(elt) {\n        this._ownerElement = elt;\n        if (this.prefix === null && this.namespaceURI === null && elt) {\n          this.onchange = elt._attributeChangeHandlers[this.localName];\n        } else {\n          this.onchange = null;\n        }\n      }\n    },\n    name: {\n      get: function () {\n        return this.prefix ? this.prefix + ':' + this.localName : this.localName;\n      }\n    },\n    specified: {\n      get: function () {\n        // Deprecated\n        return true;\n      }\n    },\n    value: {\n      get: function () {\n        return this.data;\n      },\n      set: function (value) {\n        var oldval = this.data;\n        value = value === undefined ? '' : value + '';\n        if (value === oldval) return;\n        this.data = value;\n\n        // Run the onchange hook for the attribute\n        // if there is one.\n        if (this.ownerElement) {\n          if (this.onchange) this.onchange(this.ownerElement, this.localName, oldval, value);\n\n          // Generate a mutation event if the element is rooted\n          if (this.ownerElement.rooted) this.ownerElement.ownerDocument.mutateAttr(this, oldval);\n        }\n      }\n    },\n    cloneNode: {\n      value: function cloneNode(deep) {\n        // Both this method and Document#createAttribute*() create unowned Attrs\n        return new Attr(null, this.localName, this.prefix, this.namespaceURI, this.data);\n      }\n    },\n    // Legacy aliases (see gh#70 and https://dom.spec.whatwg.org/#interface-attr)\n    nodeType: {\n      get: function () {\n        return Node.ATTRIBUTE_NODE;\n      }\n    },\n    nodeName: {\n      get: function () {\n        return this.name;\n      }\n    },\n    nodeValue: {\n      get: function () {\n        return this.value;\n      },\n      set: function (v) {\n        this.value = v;\n      }\n    },\n    textContent: {\n      get: function () {\n        return this.value;\n      },\n      set: function (v) {\n        if (v === null || v === undefined) {\n          v = '';\n        }\n        this.value = v;\n      }\n    },\n    innerText: {\n      get: function () {\n        return this.value;\n      },\n      set: function (v) {\n        if (v === null || v === undefined) {\n          v = '';\n        }\n        this.value = v;\n      }\n    }\n  });\n  // Sneakily export this class for use by Document.createAttribute()\n  Element._Attr = Attr;\n\n  // The attributes property of an Element will be an instance of this class.\n  // This class is really just a dummy, though. It only defines a length\n  // property and an item() method. The AttrArrayProxy that\n  // defines the public API just uses the Element object itself.\n  function AttributesArray(elt) {\n    NamedNodeMap.call(this, elt);\n    for (var name in elt._attrsByQName) {\n      this[name] = elt._attrsByQName[name];\n    }\n    for (var i = 0; i < elt._attrKeys.length; i++) {\n      this[i] = elt._attrsByLName[elt._attrKeys[i]];\n    }\n  }\n  AttributesArray.prototype = Object.create(NamedNodeMap.prototype, {\n    length: {\n      get: function () {\n        return this.element._attrKeys.length;\n      },\n      set: function () {/* ignore */}\n    },\n    item: {\n      value: function (n) {\n        /* jshint bitwise: false */\n        n = n >>> 0;\n        if (n >= this.length) {\n          return null;\n        }\n        return this.element._attrsByLName[this.element._attrKeys[n]];\n        /* jshint bitwise: true */\n      }\n    }\n  });\n\n  // We can't make direct array access work (without Proxies, node >=6)\n  // but we can make `Array.from(node.attributes)` and for-of loops work.\n  if (globalThis.Symbol?.iterator) {\n    AttributesArray.prototype[globalThis.Symbol.iterator] = function () {\n      var i = 0,\n        n = this.length,\n        self = this;\n      return {\n        next: function () {\n          if (i < n) return {\n            value: self.item(i++)\n          };\n          return {\n            done: true\n          };\n        }\n      };\n    };\n  }\n\n  // The children property of an Element will be an instance of this class.\n  // It defines length, item() and namedItem() and will be wrapped by an\n  // HTMLCollection when exposed through the DOM.\n  function ChildrenCollection(e) {\n    this.element = e;\n    this.updateCache();\n  }\n  ChildrenCollection.prototype = Object.create(Object.prototype, {\n    length: {\n      get: function () {\n        this.updateCache();\n        return this.childrenByNumber.length;\n      }\n    },\n    item: {\n      value: function item(n) {\n        this.updateCache();\n        return this.childrenByNumber[n] || null;\n      }\n    },\n    namedItem: {\n      value: function namedItem(name) {\n        this.updateCache();\n        return this.childrenByName[name] || null;\n      }\n    },\n    // This attribute returns the entire name->element map.\n    // It is not part of the HTMLCollection API, but we need it in\n    // src/HTMLCollectionProxy\n    namedItems: {\n      get: function () {\n        this.updateCache();\n        return this.childrenByName;\n      }\n    },\n    updateCache: {\n      value: function updateCache() {\n        var namedElts = /^(a|applet|area|embed|form|frame|frameset|iframe|img|object)$/;\n        if (this.lastModTime !== this.element.lastModTime) {\n          this.lastModTime = this.element.lastModTime;\n          var n = this.childrenByNumber && this.childrenByNumber.length || 0;\n          for (var i = 0; i < n; i++) {\n            this[i] = undefined;\n          }\n          this.childrenByNumber = [];\n          this.childrenByName = Object.create(null);\n          for (var c = this.element.firstChild; c !== null; c = c.nextSibling) {\n            if (c.nodeType === Node.ELEMENT_NODE) {\n              this[this.childrenByNumber.length] = c;\n              this.childrenByNumber.push(c);\n\n              // XXX Are there any requirements about the namespace\n              // of the id property?\n              var id = c.getAttribute('id');\n\n              // If there is an id that is not already in use...\n              if (id && !this.childrenByName[id]) this.childrenByName[id] = c;\n\n              // For certain HTML elements we check the name attribute\n              var name = c.getAttribute('name');\n              if (name && this.element.namespaceURI === NAMESPACE.HTML && namedElts.test(this.element.localName) && !this.childrenByName[name]) this.childrenByName[id] = c;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  // These functions return predicates for filtering elements.\n  // They're used by the Document and Element classes for methods like\n  // getElementsByTagName and getElementsByClassName\n\n  function localNameElementFilter(lname) {\n    return function (e) {\n      return e.localName === lname;\n    };\n  }\n  function htmlLocalNameElementFilter(lname) {\n    var lclname = utils.toASCIILowerCase(lname);\n    if (lclname === lname) return localNameElementFilter(lname);\n    return function (e) {\n      return e.isHTML ? e.localName === lclname : e.localName === lname;\n    };\n  }\n  function namespaceElementFilter(ns) {\n    return function (e) {\n      return e.namespaceURI === ns;\n    };\n  }\n  function namespaceLocalNameElementFilter(ns, lname) {\n    return function (e) {\n      return e.namespaceURI === ns && e.localName === lname;\n    };\n  }\n  function classNamesElementFilter(names) {\n    return function (e) {\n      return names.every(function (n) {\n        return e.classList.contains(n);\n      });\n    };\n  }\n  function elementNameFilter(name) {\n    return function (e) {\n      // All the *HTML elements* in the document with the given name attribute\n      if (e.namespaceURI !== NAMESPACE.HTML) {\n        return false;\n      }\n      return e.getAttribute('name') === name;\n    };\n  }\n  return Element_1;\n}\nvar Leaf_1;\nvar hasRequiredLeaf;\nfunction requireLeaf() {\n  if (hasRequiredLeaf) return Leaf_1;\n  hasRequiredLeaf = 1;\n  Leaf_1 = Leaf;\n  var Node = requireNode();\n  var NodeList = requireNodeList();\n  var utils = requireUtils();\n  var HierarchyRequestError = utils.HierarchyRequestError;\n  var NotFoundError = utils.NotFoundError;\n\n  // This class defines common functionality for node subtypes that\n  // can never have children\n  function Leaf() {\n    Node.call(this);\n  }\n  Leaf.prototype = Object.create(Node.prototype, {\n    hasChildNodes: {\n      value: function () {\n        return false;\n      }\n    },\n    firstChild: {\n      value: null\n    },\n    lastChild: {\n      value: null\n    },\n    insertBefore: {\n      value: function (node, child) {\n        if (!node.nodeType) throw new TypeError('not a node');\n        HierarchyRequestError();\n      }\n    },\n    replaceChild: {\n      value: function (node, child) {\n        if (!node.nodeType) throw new TypeError('not a node');\n        HierarchyRequestError();\n      }\n    },\n    removeChild: {\n      value: function (node) {\n        if (!node.nodeType) throw new TypeError('not a node');\n        NotFoundError();\n      }\n    },\n    removeChildren: {\n      value: function () {/* no op */}\n    },\n    childNodes: {\n      get: function () {\n        if (!this._childNodes) this._childNodes = new NodeList();\n        return this._childNodes;\n      }\n    }\n  });\n  return Leaf_1;\n}\n\n/* jshint bitwise: false */\n\nvar CharacterData_1;\nvar hasRequiredCharacterData;\nfunction requireCharacterData() {\n  if (hasRequiredCharacterData) return CharacterData_1;\n  hasRequiredCharacterData = 1;\n  CharacterData_1 = CharacterData;\n  var Leaf = requireLeaf();\n  var utils = requireUtils();\n  var ChildNode = requireChildNode();\n  var NonDocumentTypeChildNode = requireNonDocumentTypeChildNode();\n  function CharacterData() {\n    Leaf.call(this);\n  }\n  CharacterData.prototype = Object.create(Leaf.prototype, {\n    // DOMString substringData(unsigned long offset,\n    //               unsigned long count);\n    // The substringData(offset, count) method must run these steps:\n    //\n    //     If offset is greater than the context object's\n    //     length, throw an INDEX_SIZE_ERR exception and\n    //     terminate these steps.\n    //\n    //     If offset+count is greater than the context\n    //     object's length, return a DOMString whose value is\n    //     the UTF-16 code units from the offsetth UTF-16 code\n    //     unit to the end of data.\n    //\n    //     Return a DOMString whose value is the UTF-16 code\n    //     units from the offsetth UTF-16 code unit to the\n    //     offset+countth UTF-16 code unit in data.\n    substringData: {\n      value: function substringData(offset, count) {\n        if (arguments.length < 2) {\n          throw new TypeError(\"Not enough arguments\");\n        }\n        // Convert arguments to WebIDL \"unsigned long\"\n        offset = offset >>> 0;\n        count = count >>> 0;\n        if (offset > this.data.length || offset < 0 || count < 0) {\n          utils.IndexSizeError();\n        }\n        return this.data.substring(offset, offset + count);\n      }\n    },\n    // void appendData(DOMString data);\n    // The appendData(data) method must append data to the context\n    // object's data.\n    appendData: {\n      value: function appendData(data) {\n        if (arguments.length < 1) {\n          throw new TypeError(\"Not enough arguments\");\n        }\n        this.data += String(data);\n      }\n    },\n    // void insertData(unsigned long offset, DOMString data);\n    // The insertData(offset, data) method must run these steps:\n    //\n    //     If offset is greater than the context object's\n    //     length, throw an INDEX_SIZE_ERR exception and\n    //     terminate these steps.\n    //\n    //     Insert data into the context object's data after\n    //     offset UTF-16 code units.\n    //\n    insertData: {\n      value: function insertData(offset, data) {\n        return this.replaceData(offset, 0, data);\n      }\n    },\n    // void deleteData(unsigned long offset, unsigned long count);\n    // The deleteData(offset, count) method must run these steps:\n    //\n    //     If offset is greater than the context object's\n    //     length, throw an INDEX_SIZE_ERR exception and\n    //     terminate these steps.\n    //\n    //     If offset+count is greater than the context\n    //     object's length var count be length-offset.\n    //\n    //     Starting from offset UTF-16 code units remove count\n    //     UTF-16 code units from the context object's data.\n    deleteData: {\n      value: function deleteData(offset, count) {\n        return this.replaceData(offset, count, '');\n      }\n    },\n    // void replaceData(unsigned long offset, unsigned long count,\n    //          DOMString data);\n    //\n    // The replaceData(offset, count, data) method must act as\n    // if the deleteData() method is invoked with offset and\n    // count as arguments followed by the insertData() method\n    // with offset and data as arguments and re-throw any\n    // exceptions these methods might have thrown.\n    replaceData: {\n      value: function replaceData(offset, count, data) {\n        var curtext = this.data,\n          len = curtext.length;\n        // Convert arguments to correct WebIDL type\n        offset = offset >>> 0;\n        count = count >>> 0;\n        data = String(data);\n        if (offset > len || offset < 0) utils.IndexSizeError();\n        if (offset + count > len) count = len - offset;\n        var prefix = curtext.substring(0, offset),\n          suffix = curtext.substring(offset + count);\n        this.data = prefix + data + suffix;\n      }\n    },\n    // Utility method that Node.isEqualNode() calls to test Text and\n    // Comment nodes for equality.  It is okay to put it here, since\n    // Node will have already verified that nodeType is equal\n    isEqual: {\n      value: function isEqual(n) {\n        return this._data === n._data;\n      }\n    },\n    length: {\n      get: function () {\n        return this.data.length;\n      }\n    }\n  });\n  Object.defineProperties(CharacterData.prototype, ChildNode);\n  Object.defineProperties(CharacterData.prototype, NonDocumentTypeChildNode);\n  return CharacterData_1;\n}\nvar Text_1;\nvar hasRequiredText;\nfunction requireText() {\n  if (hasRequiredText) return Text_1;\n  hasRequiredText = 1;\n  Text_1 = Text;\n  var utils = requireUtils();\n  var Node = requireNode();\n  var CharacterData = requireCharacterData();\n  function Text(doc, data) {\n    CharacterData.call(this);\n    this.nodeType = Node.TEXT_NODE;\n    this.ownerDocument = doc;\n    this._data = data;\n    this._index = undefined;\n  }\n  var nodeValue = {\n    get: function () {\n      return this._data;\n    },\n    set: function (v) {\n      if (v === null || v === undefined) {\n        v = '';\n      } else {\n        v = String(v);\n      }\n      if (v === this._data) return;\n      this._data = v;\n      if (this.rooted) this.ownerDocument.mutateValue(this);\n      if (this.parentNode && this.parentNode._textchangehook) this.parentNode._textchangehook(this);\n    }\n  };\n  Text.prototype = Object.create(CharacterData.prototype, {\n    nodeName: {\n      value: \"#text\"\n    },\n    // These three attributes are all the same.\n    // The data attribute has a [TreatNullAs=EmptyString] but we'll\n    // implement that at the interface level\n    nodeValue: nodeValue,\n    textContent: nodeValue,\n    innerText: nodeValue,\n    data: {\n      get: nodeValue.get,\n      set: function (v) {\n        nodeValue.set.call(this, v === null ? '' : String(v));\n      }\n    },\n    splitText: {\n      value: function splitText(offset) {\n        if (offset > this._data.length || offset < 0) utils.IndexSizeError();\n        var newdata = this._data.substring(offset),\n          newnode = this.ownerDocument.createTextNode(newdata);\n        this.data = this.data.substring(0, offset);\n        var parent = this.parentNode;\n        if (parent !== null) parent.insertBefore(newnode, this.nextSibling);\n        return newnode;\n      }\n    },\n    wholeText: {\n      get: function wholeText() {\n        var result = this.textContent;\n        for (var next = this.nextSibling; next; next = next.nextSibling) {\n          if (next.nodeType !== Node.TEXT_NODE) {\n            break;\n          }\n          result += next.textContent;\n        }\n        return result;\n      }\n    },\n    // Obsolete, removed from spec.\n    replaceWholeText: {\n      value: utils.nyi\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        return new Text(this.ownerDocument, this._data);\n      }\n    }\n  });\n  return Text_1;\n}\nvar Comment_1;\nvar hasRequiredComment;\nfunction requireComment() {\n  if (hasRequiredComment) return Comment_1;\n  hasRequiredComment = 1;\n  Comment_1 = Comment;\n  var Node = requireNode();\n  var CharacterData = requireCharacterData();\n  function Comment(doc, data) {\n    CharacterData.call(this);\n    this.nodeType = Node.COMMENT_NODE;\n    this.ownerDocument = doc;\n    this._data = data;\n  }\n  var nodeValue = {\n    get: function () {\n      return this._data;\n    },\n    set: function (v) {\n      if (v === null || v === undefined) {\n        v = '';\n      } else {\n        v = String(v);\n      }\n      this._data = v;\n      if (this.rooted) this.ownerDocument.mutateValue(this);\n    }\n  };\n  Comment.prototype = Object.create(CharacterData.prototype, {\n    nodeName: {\n      value: '#comment'\n    },\n    nodeValue: nodeValue,\n    textContent: nodeValue,\n    innerText: nodeValue,\n    data: {\n      get: nodeValue.get,\n      set: function (v) {\n        nodeValue.set.call(this, v === null ? '' : String(v));\n      }\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        return new Comment(this.ownerDocument, this._data);\n      }\n    }\n  });\n  return Comment_1;\n}\nvar DocumentFragment_1;\nvar hasRequiredDocumentFragment;\nfunction requireDocumentFragment() {\n  if (hasRequiredDocumentFragment) return DocumentFragment_1;\n  hasRequiredDocumentFragment = 1;\n  DocumentFragment_1 = DocumentFragment;\n  var Node = requireNode();\n  var NodeList = requireNodeList();\n  var ContainerNode = requireContainerNode();\n  var Element = requireElement();\n  var select = requireSelect();\n  var utils = requireUtils();\n  function DocumentFragment(doc) {\n    ContainerNode.call(this);\n    this.nodeType = Node.DOCUMENT_FRAGMENT_NODE;\n    this.ownerDocument = doc;\n  }\n  DocumentFragment.prototype = Object.create(ContainerNode.prototype, {\n    nodeName: {\n      value: '#document-fragment'\n    },\n    nodeValue: {\n      get: function () {\n        return null;\n      },\n      set: function () {}\n    },\n    // Copy the text content getter/setter from Element\n    textContent: Object.getOwnPropertyDescriptor(Element.prototype, 'textContent'),\n    // Copy the text content getter/setter from Element\n    innerText: Object.getOwnPropertyDescriptor(Element.prototype, 'innerText'),\n    querySelector: {\n      value: function (selector) {\n        // implement in terms of querySelectorAll\n        var nodes = this.querySelectorAll(selector);\n        return nodes.length ? nodes[0] : null;\n      }\n    },\n    querySelectorAll: {\n      value: function (selector) {\n        // create a context\n        var context = Object.create(this);\n        // add some methods to the context for zest implementation, without\n        // adding them to the public DocumentFragment API\n        context.isHTML = true; // in HTML namespace (case-insensitive match)\n        context.getElementsByTagName = Element.prototype.getElementsByTagName;\n        context.nextElement = Object.getOwnPropertyDescriptor(Element.prototype, 'firstElementChild').get;\n        // invoke zest\n        var nodes = select(selector, context);\n        return nodes.item ? nodes : new NodeList(nodes);\n      }\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        return new DocumentFragment(this.ownerDocument);\n      }\n    },\n    isEqual: {\n      value: function isEqual(n) {\n        // Any two document fragments are shallowly equal.\n        // Node.isEqualNode() will test their children for equality\n        return true;\n      }\n    },\n    // Non-standard, but useful (github issue #73)\n    innerHTML: {\n      get: function () {\n        return this.serialize();\n      },\n      set: utils.nyi\n    },\n    outerHTML: {\n      get: function () {\n        return this.serialize();\n      },\n      set: utils.nyi\n    }\n  });\n  return DocumentFragment_1;\n}\nvar ProcessingInstruction_1;\nvar hasRequiredProcessingInstruction;\nfunction requireProcessingInstruction() {\n  if (hasRequiredProcessingInstruction) return ProcessingInstruction_1;\n  hasRequiredProcessingInstruction = 1;\n  ProcessingInstruction_1 = ProcessingInstruction;\n  var Node = requireNode();\n  var CharacterData = requireCharacterData();\n  function ProcessingInstruction(doc, target, data) {\n    CharacterData.call(this);\n    this.nodeType = Node.PROCESSING_INSTRUCTION_NODE;\n    this.ownerDocument = doc;\n    this.target = target;\n    this._data = data;\n  }\n  var nodeValue = {\n    get: function () {\n      return this._data;\n    },\n    set: function (v) {\n      if (v === null || v === undefined) {\n        v = '';\n      } else {\n        v = String(v);\n      }\n      this._data = v;\n      if (this.rooted) this.ownerDocument.mutateValue(this);\n    }\n  };\n  ProcessingInstruction.prototype = Object.create(CharacterData.prototype, {\n    nodeName: {\n      get: function () {\n        return this.target;\n      }\n    },\n    nodeValue: nodeValue,\n    textContent: nodeValue,\n    innerText: nodeValue,\n    data: {\n      get: nodeValue.get,\n      set: function (v) {\n        nodeValue.set.call(this, v === null ? '' : String(v));\n      }\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        return new ProcessingInstruction(this.ownerDocument, this.target, this._data);\n      }\n    },\n    isEqual: {\n      value: function isEqual(n) {\n        return this.target === n.target && this._data === n._data;\n      }\n    }\n  });\n  return ProcessingInstruction_1;\n}\nvar NodeFilter_1;\nvar hasRequiredNodeFilter;\nfunction requireNodeFilter() {\n  if (hasRequiredNodeFilter) return NodeFilter_1;\n  hasRequiredNodeFilter = 1;\n  var NodeFilter = {\n    // Constants for acceptNode()\n    FILTER_ACCEPT: 1,\n    FILTER_REJECT: 2,\n    FILTER_SKIP: 3,\n    // Constants for whatToShow\n    SHOW_ALL: 0xFFFFFFFF,\n    SHOW_ELEMENT: 0x1,\n    SHOW_ATTRIBUTE: 0x2,\n    // historical\n    SHOW_TEXT: 0x4,\n    SHOW_CDATA_SECTION: 0x8,\n    // historical\n    SHOW_ENTITY_REFERENCE: 0x10,\n    // historical\n    SHOW_ENTITY: 0x20,\n    // historical\n    SHOW_PROCESSING_INSTRUCTION: 0x40,\n    SHOW_COMMENT: 0x80,\n    SHOW_DOCUMENT: 0x100,\n    SHOW_DOCUMENT_TYPE: 0x200,\n    SHOW_DOCUMENT_FRAGMENT: 0x400,\n    SHOW_NOTATION: 0x800 // historical\n  };\n  NodeFilter_1 = NodeFilter.constructor = NodeFilter.prototype = NodeFilter;\n  return NodeFilter_1;\n}\nvar NodeTraversal = {\n  exports: {}\n};\nvar hasRequiredNodeTraversal;\nfunction requireNodeTraversal() {\n  if (hasRequiredNodeTraversal) return NodeTraversal.exports;\n  hasRequiredNodeTraversal = 1;\n  /* exported NodeTraversal */\n  NodeTraversal.exports = {\n    nextSkippingChildren: nextSkippingChildren,\n    nextAncestorSibling: nextAncestorSibling,\n    next: next,\n    previous: previous,\n    deepLastChild: deepLastChild\n  };\n\n  /**\n   * @based on WebKit's NodeTraversal::nextSkippingChildren\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L109\n   */\n  function nextSkippingChildren(node, stayWithin) {\n    if (node === stayWithin) {\n      return null;\n    }\n    if (node.nextSibling !== null) {\n      return node.nextSibling;\n    }\n    return nextAncestorSibling(node, stayWithin);\n  }\n\n  /**\n   * @based on WebKit's NodeTraversal::nextAncestorSibling\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L93\n   */\n  function nextAncestorSibling(node, stayWithin) {\n    for (node = node.parentNode; node !== null; node = node.parentNode) {\n      if (node === stayWithin) {\n        return null;\n      }\n      if (node.nextSibling !== null) {\n        return node.nextSibling;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @based on WebKit's NodeTraversal::next\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L99\n   */\n  function next(node, stayWithin) {\n    var n;\n    n = node.firstChild;\n    if (n !== null) {\n      return n;\n    }\n    if (node === stayWithin) {\n      return null;\n    }\n    n = node.nextSibling;\n    if (n !== null) {\n      return n;\n    }\n    return nextAncestorSibling(node, stayWithin);\n  }\n\n  /**\n   * @based on WebKit's NodeTraversal::deepLastChild\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.cpp?rev=179143#L116\n   */\n  function deepLastChild(node) {\n    while (node.lastChild) {\n      node = node.lastChild;\n    }\n    return node;\n  }\n\n  /**\n   * @based on WebKit's NodeTraversal::previous\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeTraversal.h?rev=179143#L121\n   */\n  function previous(node, stayWithin) {\n    var p;\n    p = node.previousSibling;\n    if (p !== null) {\n      return deepLastChild(p);\n    }\n    p = node.parentNode;\n    if (p === stayWithin) {\n      return null;\n    }\n    return p;\n  }\n  return NodeTraversal.exports;\n}\nvar TreeWalker_1;\nvar hasRequiredTreeWalker;\nfunction requireTreeWalker() {\n  if (hasRequiredTreeWalker) return TreeWalker_1;\n  hasRequiredTreeWalker = 1;\n  TreeWalker_1 = TreeWalker;\n  var Node = requireNode();\n  var NodeFilter = requireNodeFilter();\n  var NodeTraversal = requireNodeTraversal();\n  var utils = requireUtils();\n  var mapChild = {\n    first: 'firstChild',\n    last: 'lastChild',\n    next: 'firstChild',\n    previous: 'lastChild'\n  };\n  var mapSibling = {\n    first: 'nextSibling',\n    last: 'previousSibling',\n    next: 'nextSibling',\n    previous: 'previousSibling'\n  };\n\n  /* Private methods and helpers */\n\n  /**\n   * @spec https://dom.spec.whatwg.org/#concept-traverse-children\n   * @method\n   * @access private\n   * @param {TreeWalker} tw\n   * @param {string} type One of 'first' or 'last'.\n   * @return {Node|null}\n   */\n  function traverseChildren(tw, type) {\n    var child, node, parent, result, sibling;\n    node = tw._currentNode[mapChild[type]];\n    while (node !== null) {\n      result = tw._internalFilter(node);\n      if (result === NodeFilter.FILTER_ACCEPT) {\n        tw._currentNode = node;\n        return node;\n      }\n      if (result === NodeFilter.FILTER_SKIP) {\n        child = node[mapChild[type]];\n        if (child !== null) {\n          node = child;\n          continue;\n        }\n      }\n      while (node !== null) {\n        sibling = node[mapSibling[type]];\n        if (sibling !== null) {\n          node = sibling;\n          break;\n        }\n        parent = node.parentNode;\n        if (parent === null || parent === tw.root || parent === tw._currentNode) {\n          return null;\n        } else {\n          node = parent;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @spec https://dom.spec.whatwg.org/#concept-traverse-siblings\n   * @method\n   * @access private\n   * @param {TreeWalker} tw\n   * @param {TreeWalker} type One of 'next' or 'previous'.\n   * @return {Node|nul}\n   */\n  function traverseSiblings(tw, type) {\n    var node, result, sibling;\n    node = tw._currentNode;\n    if (node === tw.root) {\n      return null;\n    }\n    while (true) {\n      sibling = node[mapSibling[type]];\n      while (sibling !== null) {\n        node = sibling;\n        result = tw._internalFilter(node);\n        if (result === NodeFilter.FILTER_ACCEPT) {\n          tw._currentNode = node;\n          return node;\n        }\n        sibling = node[mapChild[type]];\n        if (result === NodeFilter.FILTER_REJECT || sibling === null) {\n          sibling = node[mapSibling[type]];\n        }\n      }\n      node = node.parentNode;\n      if (node === null || node === tw.root) {\n        return null;\n      }\n      if (tw._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\n        return null;\n      }\n    }\n  }\n\n  /* Public API */\n\n  /**\n   * Latest version: https://dom.spec.whatwg.org/#treewalker\n   *\n   * @constructor\n   * @param {Node} root\n   * @param {number} whatToShow [optional]\n   * @param {Function|NodeFilter} filter [optional]\n   * @throws Error\n   */\n  function TreeWalker(root, whatToShow, filter) {\n    if (!root || !root.nodeType) {\n      utils.NotSupportedError();\n    }\n\n    // Read-only properties\n    this._root = root;\n    this._whatToShow = Number(whatToShow) || 0;\n    this._filter = filter || null;\n    this._active = false;\n    // Read-write property\n    this._currentNode = root;\n  }\n  Object.defineProperties(TreeWalker.prototype, {\n    root: {\n      get: function () {\n        return this._root;\n      }\n    },\n    whatToShow: {\n      get: function () {\n        return this._whatToShow;\n      }\n    },\n    filter: {\n      get: function () {\n        return this._filter;\n      }\n    },\n    currentNode: {\n      get: function currentNode() {\n        return this._currentNode;\n      },\n      set: function setCurrentNode(v) {\n        if (!(v instanceof Node)) {\n          throw new TypeError(\"Not a Node\"); // `null` is also not a node\n        }\n        this._currentNode = v;\n      }\n    },\n    /**\n     * @method\n     * @param {Node} node\n     * @return {Number} Constant NodeFilter.FILTER_ACCEPT,\n     *  NodeFilter.FILTER_REJECT or NodeFilter.FILTER_SKIP.\n     */\n    _internalFilter: {\n      value: function _internalFilter(node) {\n        /* jshint bitwise: false */\n        var result, filter;\n        if (this._active) {\n          utils.InvalidStateError();\n        }\n\n        // Maps nodeType to whatToShow\n        if (!(1 << node.nodeType - 1 & this._whatToShow)) {\n          return NodeFilter.FILTER_SKIP;\n        }\n        filter = this._filter;\n        if (filter === null) {\n          result = NodeFilter.FILTER_ACCEPT;\n        } else {\n          this._active = true;\n          try {\n            if (typeof filter === 'function') {\n              result = filter(node);\n            } else {\n              result = filter.acceptNode(node);\n            }\n          } finally {\n            this._active = false;\n          }\n        }\n\n        // Note that coercing to a number means that\n        //  `true` becomes `1` (which is NodeFilter.FILTER_ACCEPT)\n        //  `false` becomes `0` (neither accept, reject, or skip)\n        return +result;\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#dom-treewalker-parentnode\n     * @based on WebKit's TreeWalker::parentNode\n     * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L50\n     * @method\n     * @return {Node|null}\n     */\n    parentNode: {\n      value: function parentNode() {\n        var node = this._currentNode;\n        while (node !== this.root) {\n          node = node.parentNode;\n          if (node === null) {\n            return null;\n          }\n          if (this._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\n            this._currentNode = node;\n            return node;\n          }\n        }\n        return null;\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#dom-treewalker-firstchild\n     * @method\n     * @return {Node|null}\n     */\n    firstChild: {\n      value: function firstChild() {\n        return traverseChildren(this, 'first');\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#dom-treewalker-lastchild\n     * @method\n     * @return {Node|null}\n     */\n    lastChild: {\n      value: function lastChild() {\n        return traverseChildren(this, 'last');\n      }\n    },\n    /**\n     * @spec http://www.w3.org/TR/dom/#dom-treewalker-previoussibling\n     * @method\n     * @return {Node|null}\n     */\n    previousSibling: {\n      value: function previousSibling() {\n        return traverseSiblings(this, 'previous');\n      }\n    },\n    /**\n     * @spec http://www.w3.org/TR/dom/#dom-treewalker-nextsibling\n     * @method\n     * @return {Node|null}\n     */\n    nextSibling: {\n      value: function nextSibling() {\n        return traverseSiblings(this, 'next');\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#dom-treewalker-previousnode\n     * @based on WebKit's TreeWalker::previousNode\n     * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L181\n     * @method\n     * @return {Node|null}\n     */\n    previousNode: {\n      value: function previousNode() {\n        var node, result, previousSibling, lastChild;\n        node = this._currentNode;\n        while (node !== this._root) {\n          for (previousSibling = node.previousSibling; previousSibling; previousSibling = node.previousSibling) {\n            node = previousSibling;\n            result = this._internalFilter(node);\n            if (result === NodeFilter.FILTER_REJECT) {\n              continue;\n            }\n            for (lastChild = node.lastChild; lastChild; lastChild = node.lastChild) {\n              node = lastChild;\n              result = this._internalFilter(node);\n              if (result === NodeFilter.FILTER_REJECT) {\n                break;\n              }\n            }\n            if (result === NodeFilter.FILTER_ACCEPT) {\n              this._currentNode = node;\n              return node;\n            }\n          }\n          if (node === this.root || node.parentNode === null) {\n            return null;\n          }\n          node = node.parentNode;\n          if (this._internalFilter(node) === NodeFilter.FILTER_ACCEPT) {\n            this._currentNode = node;\n            return node;\n          }\n        }\n        return null;\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#dom-treewalker-nextnode\n     * @based on WebKit's TreeWalker::nextNode\n     * https://trac.webkit.org/browser/webkit/trunk/Source/WebCore/dom/TreeWalker.cpp?rev=220453#L228\n     * @method\n     * @return {Node|null}\n     */\n    nextNode: {\n      value: function nextNode() {\n        var node, result, firstChild, nextSibling;\n        node = this._currentNode;\n        result = NodeFilter.FILTER_ACCEPT;\n        CHILDREN: while (true) {\n          for (firstChild = node.firstChild; firstChild; firstChild = node.firstChild) {\n            node = firstChild;\n            result = this._internalFilter(node);\n            if (result === NodeFilter.FILTER_ACCEPT) {\n              this._currentNode = node;\n              return node;\n            } else if (result === NodeFilter.FILTER_REJECT) {\n              break;\n            }\n          }\n          for (nextSibling = NodeTraversal.nextSkippingChildren(node, this.root); nextSibling; nextSibling = NodeTraversal.nextSkippingChildren(node, this.root)) {\n            node = nextSibling;\n            result = this._internalFilter(node);\n            if (result === NodeFilter.FILTER_ACCEPT) {\n              this._currentNode = node;\n              return node;\n            } else if (result === NodeFilter.FILTER_SKIP) {\n              continue CHILDREN;\n            }\n          }\n          return null;\n        }\n      }\n    },\n    /** For compatibility with web-platform-tests. */\n    toString: {\n      value: function toString() {\n        return \"[object TreeWalker]\";\n      }\n    }\n  });\n  return TreeWalker_1;\n}\nvar NodeIterator_1;\nvar hasRequiredNodeIterator;\nfunction requireNodeIterator() {\n  if (hasRequiredNodeIterator) return NodeIterator_1;\n  hasRequiredNodeIterator = 1;\n  NodeIterator_1 = NodeIterator;\n  var NodeFilter = requireNodeFilter();\n  var NodeTraversal = requireNodeTraversal();\n  var utils = requireUtils();\n\n  /* Private methods and helpers */\n\n  /**\n   * @based on WebKit's NodeIterator::moveToNext and NodeIterator::moveToPrevious\n   * https://trac.webkit.org/browser/trunk/Source/WebCore/dom/NodeIterator.cpp?rev=186279#L51\n   */\n  function move(node, stayWithin, directionIsNext) {\n    if (directionIsNext) {\n      return NodeTraversal.next(node, stayWithin);\n    } else {\n      if (node === stayWithin) {\n        return null;\n      }\n      return NodeTraversal.previous(node, null);\n    }\n  }\n  function isInclusiveAncestor(node, possibleChild) {\n    for (; possibleChild; possibleChild = possibleChild.parentNode) {\n      if (node === possibleChild) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @spec http://www.w3.org/TR/dom/#concept-nodeiterator-traverse\n   * @method\n   * @access private\n   * @param {NodeIterator} ni\n   * @param {string} direction One of 'next' or 'previous'.\n   * @return {Node|null}\n   */\n  function traverse(ni, directionIsNext) {\n    var node, beforeNode;\n    node = ni._referenceNode;\n    beforeNode = ni._pointerBeforeReferenceNode;\n    while (true) {\n      if (beforeNode === directionIsNext) {\n        beforeNode = !beforeNode;\n      } else {\n        node = move(node, ni._root, directionIsNext);\n        if (node === null) {\n          return null;\n        }\n      }\n      var result = ni._internalFilter(node);\n      if (result === NodeFilter.FILTER_ACCEPT) {\n        break;\n      }\n    }\n    ni._referenceNode = node;\n    ni._pointerBeforeReferenceNode = beforeNode;\n    return node;\n  }\n\n  /* Public API */\n\n  /**\n   * Implemented version: http://www.w3.org/TR/2015/WD-dom-20150618/#nodeiterator\n   * Latest version: http://www.w3.org/TR/dom/#nodeiterator\n   *\n   * @constructor\n   * @param {Node} root\n   * @param {number} whatToShow [optional]\n   * @param {Function|NodeFilter} filter [optional]\n   * @throws Error\n   */\n  function NodeIterator(root, whatToShow, filter) {\n    if (!root || !root.nodeType) {\n      utils.NotSupportedError();\n    }\n\n    // Read-only properties\n    this._root = root;\n    this._referenceNode = root;\n    this._pointerBeforeReferenceNode = true;\n    this._whatToShow = Number(whatToShow) || 0;\n    this._filter = filter || null;\n    this._active = false;\n    // Record active node iterators in the document, in order to perform\n    // \"node iterator pre-removal steps\".\n    root.doc._attachNodeIterator(this);\n  }\n  Object.defineProperties(NodeIterator.prototype, {\n    root: {\n      get: function root() {\n        return this._root;\n      }\n    },\n    referenceNode: {\n      get: function referenceNode() {\n        return this._referenceNode;\n      }\n    },\n    pointerBeforeReferenceNode: {\n      get: function pointerBeforeReferenceNode() {\n        return this._pointerBeforeReferenceNode;\n      }\n    },\n    whatToShow: {\n      get: function whatToShow() {\n        return this._whatToShow;\n      }\n    },\n    filter: {\n      get: function filter() {\n        return this._filter;\n      }\n    },\n    /**\n     * @method\n     * @param {Node} node\n     * @return {Number} Constant NodeFilter.FILTER_ACCEPT,\n     *  NodeFilter.FILTER_REJECT or NodeFilter.FILTER_SKIP.\n     */\n    _internalFilter: {\n      value: function _internalFilter(node) {\n        /* jshint bitwise: false */\n        var result, filter;\n        if (this._active) {\n          utils.InvalidStateError();\n        }\n\n        // Maps nodeType to whatToShow\n        if (!(1 << node.nodeType - 1 & this._whatToShow)) {\n          return NodeFilter.FILTER_SKIP;\n        }\n        filter = this._filter;\n        if (filter === null) {\n          result = NodeFilter.FILTER_ACCEPT;\n        } else {\n          this._active = true;\n          try {\n            if (typeof filter === 'function') {\n              result = filter(node);\n            } else {\n              result = filter.acceptNode(node);\n            }\n          } finally {\n            this._active = false;\n          }\n        }\n\n        // Note that coercing to a number means that\n        //  `true` becomes `1` (which is NodeFilter.FILTER_ACCEPT)\n        //  `false` becomes `0` (neither accept, reject, or skip)\n        return +result;\n      }\n    },\n    /**\n     * @spec https://dom.spec.whatwg.org/#nodeiterator-pre-removing-steps\n     * @method\n     * @return void\n     */\n    _preremove: {\n      value: function _preremove(toBeRemovedNode) {\n        if (isInclusiveAncestor(toBeRemovedNode, this._root)) {\n          return;\n        }\n        if (!isInclusiveAncestor(toBeRemovedNode, this._referenceNode)) {\n          return;\n        }\n        if (this._pointerBeforeReferenceNode) {\n          var next = toBeRemovedNode;\n          while (next.lastChild) {\n            next = next.lastChild;\n          }\n          next = NodeTraversal.next(next, this.root);\n          if (next) {\n            this._referenceNode = next;\n            return;\n          }\n          this._pointerBeforeReferenceNode = false;\n          // fall through\n        }\n        if (toBeRemovedNode.previousSibling === null) {\n          this._referenceNode = toBeRemovedNode.parentNode;\n        } else {\n          this._referenceNode = toBeRemovedNode.previousSibling;\n          var lastChild;\n          for (lastChild = this._referenceNode.lastChild; lastChild; lastChild = this._referenceNode.lastChild) {\n            this._referenceNode = lastChild;\n          }\n        }\n      }\n    },\n    /**\n     * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-nextnode\n     * @method\n     * @return {Node|null}\n     */\n    nextNode: {\n      value: function nextNode() {\n        return traverse(this, true);\n      }\n    },\n    /**\n     * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-previousnode\n     * @method\n     * @return {Node|null}\n     */\n    previousNode: {\n      value: function previousNode() {\n        return traverse(this, false);\n      }\n    },\n    /**\n     * @spec http://www.w3.org/TR/dom/#dom-nodeiterator-detach\n     * @method\n     * @return void\n     */\n    detach: {\n      value: function detach() {\n        /* \"The detach() method must do nothing.\n         * Its functionality (disabling a NodeIterator object) was removed,\n         * but the method itself is preserved for compatibility.\n         */\n      }\n    },\n    /** For compatibility with web-platform-tests. */\n    toString: {\n      value: function toString() {\n        return \"[object NodeIterator]\";\n      }\n    }\n  });\n  return NodeIterator_1;\n}\nvar URL_1;\nvar hasRequiredURL;\nfunction requireURL() {\n  if (hasRequiredURL) return URL_1;\n  hasRequiredURL = 1;\n  URL_1 = URL;\n  function URL(url) {\n    if (!url) return Object.create(URL.prototype);\n    // Can't use String.trim() since it defines whitespace differently than HTML\n    this.url = url.replace(/^[ \\t\\n\\r\\f]+|[ \\t\\n\\r\\f]+$/g, \"\");\n\n    // See http://tools.ietf.org/html/rfc3986#appendix-B\n    // and https://url.spec.whatwg.org/#parsing\n    var match = URL.pattern.exec(this.url);\n    if (match) {\n      if (match[2]) this.scheme = match[2];\n      if (match[4]) {\n        // parse username/password\n        var userinfo = match[4].match(URL.userinfoPattern);\n        if (userinfo) {\n          this.username = userinfo[1];\n          this.password = userinfo[3];\n          match[4] = match[4].substring(userinfo[0].length);\n        }\n        if (match[4].match(URL.portPattern)) {\n          var pos = match[4].lastIndexOf(':');\n          this.host = match[4].substring(0, pos);\n          this.port = match[4].substring(pos + 1);\n        } else {\n          this.host = match[4];\n        }\n      }\n      if (match[5]) this.path = match[5];\n      if (match[6]) this.query = match[7];\n      if (match[8]) this.fragment = match[9];\n    }\n  }\n  URL.pattern = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/;\n  URL.userinfoPattern = /^([^@:]*)(:([^@]*))?@/;\n  URL.portPattern = /:\\d+$/;\n  URL.authorityPattern = /^[^:\\/?#]+:\\/\\//;\n  URL.hierarchyPattern = /^[^:\\/?#]+:\\//;\n\n  // Return a percentEncoded version of s.\n  // S should be a single-character string\n  // XXX: needs to do utf-8 encoding?\n  URL.percentEncode = function percentEncode(s) {\n    var c = s.charCodeAt(0);\n    if (c < 256) return \"%\" + c.toString(16);else throw Error(\"can't percent-encode codepoints > 255 yet\");\n  };\n  URL.prototype = {\n    constructor: URL,\n    // XXX: not sure if this is the precise definition of absolute\n    isAbsolute: function () {\n      return !!this.scheme;\n    },\n    isAuthorityBased: function () {\n      return URL.authorityPattern.test(this.url);\n    },\n    isHierarchical: function () {\n      return URL.hierarchyPattern.test(this.url);\n    },\n    toString: function () {\n      var s = \"\";\n      if (this.scheme !== undefined) s += this.scheme + \":\";\n      if (this.isAbsolute()) {\n        s += '//';\n        if (this.username || this.password) {\n          s += this.username || '';\n          if (this.password) {\n            s += ':' + this.password;\n          }\n          s += '@';\n        }\n        if (this.host) {\n          s += this.host;\n        }\n      }\n      if (this.port !== undefined) s += \":\" + this.port;\n      if (this.path !== undefined) s += this.path;\n      if (this.query !== undefined) s += \"?\" + this.query;\n      if (this.fragment !== undefined) s += \"#\" + this.fragment;\n      return s;\n    },\n    // See: http://tools.ietf.org/html/rfc3986#section-5.2\n    // and https://url.spec.whatwg.org/#constructors\n    resolve: function (relative) {\n      var base = this; // The base url we're resolving against\n      var r = new URL(relative); // The relative reference url to resolve\n      var t = new URL(); // The absolute target url we will return\n\n      if (r.scheme !== undefined) {\n        t.scheme = r.scheme;\n        t.username = r.username;\n        t.password = r.password;\n        t.host = r.host;\n        t.port = r.port;\n        t.path = remove_dot_segments(r.path);\n        t.query = r.query;\n      } else {\n        t.scheme = base.scheme;\n        if (r.host !== undefined) {\n          t.username = r.username;\n          t.password = r.password;\n          t.host = r.host;\n          t.port = r.port;\n          t.path = remove_dot_segments(r.path);\n          t.query = r.query;\n        } else {\n          t.username = base.username;\n          t.password = base.password;\n          t.host = base.host;\n          t.port = base.port;\n          if (!r.path) {\n            // undefined or empty\n            t.path = base.path;\n            if (r.query !== undefined) t.query = r.query;else t.query = base.query;\n          } else {\n            if (r.path.charAt(0) === \"/\") {\n              t.path = remove_dot_segments(r.path);\n            } else {\n              t.path = merge(base.path, r.path);\n              t.path = remove_dot_segments(t.path);\n            }\n            t.query = r.query;\n          }\n        }\n      }\n      t.fragment = r.fragment;\n      return t.toString();\n      function merge(basepath, refpath) {\n        if (base.host !== undefined && !base.path) return \"/\" + refpath;\n        var lastslash = basepath.lastIndexOf(\"/\");\n        if (lastslash === -1) return refpath;else return basepath.substring(0, lastslash + 1) + refpath;\n      }\n      function remove_dot_segments(path) {\n        if (!path) return path; // For \"\" or undefined\n\n        var output = \"\";\n        while (path.length > 0) {\n          if (path === \".\" || path === \"..\") {\n            path = \"\";\n            break;\n          }\n          var twochars = path.substring(0, 2);\n          var threechars = path.substring(0, 3);\n          var fourchars = path.substring(0, 4);\n          if (threechars === \"../\") {\n            path = path.substring(3);\n          } else if (twochars === \"./\") {\n            path = path.substring(2);\n          } else if (threechars === \"/./\") {\n            path = \"/\" + path.substring(3);\n          } else if (twochars === \"/.\" && path.length === 2) {\n            path = \"/\";\n          } else if (fourchars === \"/../\" || threechars === \"/..\" && path.length === 3) {\n            path = \"/\" + path.substring(4);\n            output = output.replace(/\\/?[^\\/]*$/, \"\");\n          } else {\n            var segment = path.match(/(\\/?([^\\/]*))/)[0];\n            output += segment;\n            path = path.substring(segment.length);\n          }\n        }\n        return output;\n      }\n    }\n  };\n  return URL_1;\n}\nvar CustomEvent_1;\nvar hasRequiredCustomEvent;\nfunction requireCustomEvent() {\n  if (hasRequiredCustomEvent) return CustomEvent_1;\n  hasRequiredCustomEvent = 1;\n  CustomEvent_1 = CustomEvent;\n  var Event = requireEvent();\n  function CustomEvent(type, dictionary) {\n    // Just use the superclass constructor to initialize\n    Event.call(this, type, dictionary);\n  }\n  CustomEvent.prototype = Object.create(Event.prototype, {\n    constructor: {\n      value: CustomEvent\n    }\n  });\n  return CustomEvent_1;\n}\nvar events;\nvar hasRequiredEvents;\nfunction requireEvents() {\n  if (hasRequiredEvents) return events;\n  hasRequiredEvents = 1;\n  events = {\n    Event: requireEvent(),\n    UIEvent: requireUIEvent(),\n    MouseEvent: requireMouseEvent(),\n    CustomEvent: requireCustomEvent()\n  };\n  return events;\n}\nvar htmlelts = {};\nvar style_parser = {};\nvar hasRequiredStyle_parser;\nfunction requireStyle_parser() {\n  if (hasRequiredStyle_parser) return style_parser;\n  hasRequiredStyle_parser = 1;\n\n  // The below is a compiled copy of https://github.com/angular/angular/blob/92e41e9cb417223d9888a4c23b4c0e73188f87d0/packages/compiler/src/render3/view/style_parser.ts\n\n  Object.defineProperty(style_parser, \"__esModule\", {\n    value: true\n  });\n  style_parser.hyphenate = style_parser.parse = void 0;\n  /**\n   * Parses string representation of a style and converts it into object literal.\n   *\n   * @param value string representation of style as used in the `style` attribute in HTML.\n   *   Example: `color: red; height: auto`.\n   * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',\n   * 'auto']`\n   */\n  function parse(value) {\n    // we use a string array here instead of a string map\n    // because a string-map is not guaranteed to retain the\n    // order of the entries whereas a string array can be\n    // constructed in a [key, value, key, value] format.\n    const styles = [];\n    let i = 0;\n    let parenDepth = 0;\n    let quote = 0; /* Char.QuoteNone */\n    let valueStart = 0;\n    let propStart = 0;\n    let currentProp = null;\n    while (i < value.length) {\n      const token = value.charCodeAt(i++);\n      switch (token) {\n        case 40 /* Char.OpenParen */:\n          parenDepth++;\n          break;\n        case 41 /* Char.CloseParen */:\n          parenDepth--;\n          break;\n        case 39 /* Char.QuoteSingle */:\n          // valueStart needs to be there since prop values don't\n          // have quotes in CSS\n          if (quote === 0 /* Char.QuoteNone */) {\n            quote = 39 /* Char.QuoteSingle */;\n          } else if (quote === 39 /* Char.QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* Char.BackSlash */) {\n            quote = 0 /* Char.QuoteNone */;\n          }\n          break;\n        case 34 /* Char.QuoteDouble */:\n          // same logic as above\n          if (quote === 0 /* Char.QuoteNone */) {\n            quote = 34 /* Char.QuoteDouble */;\n          } else if (quote === 34 /* Char.QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* Char.BackSlash */) {\n            quote = 0 /* Char.QuoteNone */;\n          }\n          break;\n        case 58 /* Char.Colon */:\n          if (!currentProp && parenDepth === 0 && quote === 0 /* Char.QuoteNone */) {\n            currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n            valueStart = i;\n          }\n          break;\n        case 59 /* Char.Semicolon */:\n          if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* Char.QuoteNone */) {\n            const styleVal = value.substring(valueStart, i - 1).trim();\n            styles.push(currentProp, styleVal);\n            propStart = i;\n            valueStart = 0;\n            currentProp = null;\n          }\n          break;\n      }\n    }\n    if (currentProp && valueStart) {\n      const styleVal = value.slice(valueStart).trim();\n      styles.push(currentProp, styleVal);\n    }\n    return styles;\n  }\n  style_parser.parse = parse;\n  function hyphenate(value) {\n    return value.replace(/[a-z][A-Z]/g, v => {\n      return v.charAt(0) + \"-\" + v.charAt(1);\n    }).toLowerCase();\n  }\n  style_parser.hyphenate = hyphenate;\n  return style_parser;\n}\nvar CSSStyleDeclaration_1;\nvar hasRequiredCSSStyleDeclaration;\nfunction requireCSSStyleDeclaration() {\n  if (hasRequiredCSSStyleDeclaration) return CSSStyleDeclaration_1;\n  hasRequiredCSSStyleDeclaration = 1;\n  const {\n    parse\n  } = requireStyle_parser();\n  CSSStyleDeclaration_1 = function (elt) {\n    const style = new CSSStyleDeclaration(elt);\n    const handler = {\n      get: function (target, property) {\n        return property in target ? target[property] : target.getPropertyValue(dasherizeProperty(property));\n      },\n      has: function (target, key) {\n        return true;\n      },\n      set: function (target, property, value) {\n        if (property in target) {\n          target[property] = value;\n        } else {\n          target.setProperty(dasherizeProperty(property), value ?? undefined);\n        }\n        return true;\n      }\n    };\n    return new Proxy(style, handler);\n  };\n  function dasherizeProperty(property) {\n    return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n  function CSSStyleDeclaration(elt) {\n    this._element = elt;\n  }\n  const IMPORTANT_BANG = '!important';\n\n  // Utility function for parsing style declarations\n  // Pass in a string like \"margin-left: 5px; border-style: solid\"\n  // and this function returns an object like\n  // {\"margin-left\":\"5px\", \"border-style\":\"solid\"}\n  function parseStyles(value) {\n    const result = {\n      property: {},\n      priority: {}\n    };\n    if (!value) {\n      return result;\n    }\n    const styleValues = parse(value);\n    if (styleValues.length < 2) {\n      return result;\n    }\n    for (let i = 0; i < styleValues.length; i += 2) {\n      const name = styleValues[i];\n      let value = styleValues[i + 1];\n      if (value.endsWith(IMPORTANT_BANG)) {\n        result.priority[name] = 'important';\n        value = value.slice(0, -IMPORTANT_BANG.length).trim();\n      }\n      result.property[name] = value;\n    }\n    return result;\n  }\n  var NO_CHANGE = {}; // Private marker object\n\n  CSSStyleDeclaration.prototype = Object.create(Object.prototype, {\n    // Return the parsed form of the element's style attribute.\n    // If the element's style attribute has never been parsed\n    // or if it has changed since the last parse, then reparse it\n    // Note that the styles don't get parsed until they're actually needed\n    _parsed: {\n      get: function () {\n        if (!this._parsedStyles || this.cssText !== this._lastParsedText) {\n          var text = this.cssText;\n          this._parsedStyles = parseStyles(text);\n          this._lastParsedText = text;\n          delete this._names;\n        }\n        return this._parsedStyles;\n      }\n    },\n    // Call this method any time the parsed representation of the\n    // style changes.  It converts the style properties to a string and\n    // sets cssText and the element's style attribute\n    _serialize: {\n      value: function () {\n        var styles = this._parsed;\n        var s = \"\";\n        for (var name in styles.property) {\n          if (s) s += \" \";\n          s += name + \": \" + styles.property[name];\n          if (styles.priority[name]) {\n            s += \" !\" + styles.priority[name];\n          }\n          s += \";\";\n        }\n        this.cssText = s; // also sets the style attribute\n        this._lastParsedText = s; // so we don't reparse\n        delete this._names;\n      }\n    },\n    cssText: {\n      get: function () {\n        // XXX: this is a CSSStyleDeclaration for an element.\n        // A different impl might be necessary for a set of styles\n        // associated returned by getComputedStyle(), e.g.\n        return this._element.getAttribute(\"style\");\n      },\n      set: function (value) {\n        // XXX: I should parse and serialize the value to\n        // normalize it and remove errors. FF and chrome do that.\n        this._element.setAttribute(\"style\", value);\n      }\n    },\n    length: {\n      get: function () {\n        if (!this._names) this._names = Object.getOwnPropertyNames(this._parsed.property);\n        return this._names.length;\n      }\n    },\n    item: {\n      value: function (n) {\n        if (!this._names) this._names = Object.getOwnPropertyNames(this._parsed.property);\n        return this._names[n];\n      }\n    },\n    getPropertyValue: {\n      value: function (property) {\n        property = property.toLowerCase();\n        return this._parsed.property[property] || \"\";\n      }\n    },\n    getPropertyPriority: {\n      value: function (property) {\n        property = property.toLowerCase();\n        return this._parsed.priority[property] || \"\";\n      }\n    },\n    setProperty: {\n      value: function (property, value, priority) {\n        property = property.toLowerCase();\n        if (value === null || value === undefined) {\n          value = \"\";\n        }\n        if (priority === null || priority === undefined) {\n          priority = \"\";\n        }\n\n        // String coercion\n        if (value !== NO_CHANGE) {\n          value = \"\" + value;\n        }\n        value = value.trim();\n        if (value === \"\") {\n          this.removeProperty(property);\n          return;\n        }\n        if (priority !== \"\" && priority !== NO_CHANGE && !/^important$/i.test(priority)) {\n          return;\n        }\n        var styles = this._parsed;\n        if (value === NO_CHANGE) {\n          if (!styles.property[property]) {\n            return; // Not a valid property name.\n          }\n          if (priority !== \"\") {\n            styles.priority[property] = \"important\";\n          } else {\n            delete styles.priority[property];\n          }\n        } else {\n          // We don't just accept the property value.  Instead\n          // we parse it to ensure that it is something valid.\n          // If it contains a semicolon it is invalid, except  base64-encoded\n          // URLs (e.g. `background-image: url(data:image/png;base64,...`)\n          if (value.includes(\";\") && !value.includes(\"data:\")) return;\n          var newprops = parseStyles(property + \":\" + value);\n          if (Object.getOwnPropertyNames(newprops.property).length === 0) {\n            return; // no valid property found\n          }\n          if (Object.getOwnPropertyNames(newprops.priority).length !== 0) {\n            return; // if the value included '!important' it wasn't valid.\n          }\n\n          // XXX handle shorthand properties\n\n          for (var p in newprops.property) {\n            styles.property[p] = newprops.property[p];\n            if (priority === NO_CHANGE) {\n              continue;\n            } else if (priority !== \"\") {\n              styles.priority[p] = \"important\";\n            } else if (styles.priority[p]) {\n              delete styles.priority[p];\n            }\n          }\n        }\n\n        // Serialize and update cssText and element.style!\n        this._serialize();\n      }\n    },\n    setPropertyValue: {\n      value: function (property, value) {\n        return this.setProperty(property, value, NO_CHANGE);\n      }\n    },\n    setPropertyPriority: {\n      value: function (property, priority) {\n        return this.setProperty(property, NO_CHANGE, priority);\n      }\n    },\n    removeProperty: {\n      value: function (property) {\n        property = property.toLowerCase();\n        var styles = this._parsed;\n        if (property in styles.property) {\n          delete styles.property[property];\n          delete styles.priority[property];\n\n          // Serialize and update cssText and element.style!\n          this._serialize();\n        }\n      }\n    }\n  });\n  return CSSStyleDeclaration_1;\n}\nvar URLUtils_1;\nvar hasRequiredURLUtils;\nfunction requireURLUtils() {\n  if (hasRequiredURLUtils) return URLUtils_1;\n  hasRequiredURLUtils = 1;\n  var URL = requireURL();\n  URLUtils_1 = URLUtils;\n\n  // Allow the `x == null` pattern.  This is eslint's \"null: 'ignore'\" option,\n  // but jshint doesn't support this.\n  /* jshint eqeqeq: false */\n\n  // This is an abstract superclass for Location, HTMLAnchorElement and\n  // other types that have the standard complement of \"URL decomposition\n  // IDL attributes\".  This is now standardized as URLUtils, see:\n  // https://url.spec.whatwg.org/#urlutils\n  // Subclasses must define a getter/setter on href.\n  // The getter and setter methods parse and rebuild the URL on each\n  // invocation; there is no attempt to cache the value and be more efficient\n  function URLUtils() {}\n  URLUtils.prototype = Object.create(Object.prototype, {\n    _url: {\n      get: function () {\n        // XXX: this should do the \"Reinitialize url\" steps, and \"null\" should\n        // be a valid return value.\n        return new URL(this.href);\n      }\n    },\n    protocol: {\n      get: function () {\n        var url = this._url;\n        if (url && url.scheme) return url.scheme + \":\";else return \":\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute()) {\n          v = v.replace(/:+$/, \"\");\n          v = v.replace(/[^-+\\.a-zA-Z0-9]/g, URL.percentEncode);\n          if (v.length > 0) {\n            url.scheme = v;\n            output = url.toString();\n          }\n        }\n        this.href = output;\n      }\n    },\n    host: {\n      get: function () {\n        var url = this._url;\n        if (url.isAbsolute() && url.isAuthorityBased()) return url.host + (url.port ? \":\" + url.port : \"\");else return \"\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute() && url.isAuthorityBased()) {\n          v = v.replace(/[^-+\\._~!$&'()*,;:=a-zA-Z0-9]/g, URL.percentEncode);\n          if (v.length > 0) {\n            url.host = v;\n            delete url.port;\n            output = url.toString();\n          }\n        }\n        this.href = output;\n      }\n    },\n    hostname: {\n      get: function () {\n        var url = this._url;\n        if (url.isAbsolute() && url.isAuthorityBased()) return url.host;else return \"\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute() && url.isAuthorityBased()) {\n          v = v.replace(/^\\/+/, \"\");\n          v = v.replace(/[^-+\\._~!$&'()*,;:=a-zA-Z0-9]/g, URL.percentEncode);\n          if (v.length > 0) {\n            url.host = v;\n            output = url.toString();\n          }\n        }\n        this.href = output;\n      }\n    },\n    port: {\n      get: function () {\n        var url = this._url;\n        if (url.isAbsolute() && url.isAuthorityBased() && url.port !== undefined) return url.port;else return \"\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute() && url.isAuthorityBased()) {\n          v = '' + v;\n          v = v.replace(/[^0-9].*$/, \"\");\n          v = v.replace(/^0+/, \"\");\n          if (v.length === 0) v = \"0\";\n          if (parseInt(v, 10) <= 65535) {\n            url.port = v;\n            output = url.toString();\n          }\n        }\n        this.href = output;\n      }\n    },\n    pathname: {\n      get: function () {\n        var url = this._url;\n        if (url.isAbsolute() && url.isHierarchical()) return url.path;else return \"\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute() && url.isHierarchical()) {\n          if (v.charAt(0) !== \"/\") v = \"/\" + v;\n          v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/a-zA-Z0-9]/g, URL.percentEncode);\n          url.path = v;\n          output = url.toString();\n        }\n        this.href = output;\n      }\n    },\n    search: {\n      get: function () {\n        var url = this._url;\n        if (url.isAbsolute() && url.isHierarchical() && url.query !== undefined) return \"?\" + url.query;else return \"\";\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute() && url.isHierarchical()) {\n          if (v.charAt(0) === \"?\") v = v.substring(1);\n          v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/?a-zA-Z0-9]/g, URL.percentEncode);\n          url.query = v;\n          output = url.toString();\n        }\n        this.href = output;\n      }\n    },\n    hash: {\n      get: function () {\n        var url = this._url;\n        if (url == null || url.fragment == null || url.fragment === '') {\n          return \"\";\n        } else {\n          return \"#\" + url.fragment;\n        }\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (v.charAt(0) === \"#\") v = v.substring(1);\n        v = v.replace(/[^-+\\._~!$&'()*,;:=@\\/?a-zA-Z0-9]/g, URL.percentEncode);\n        url.fragment = v;\n        output = url.toString();\n        this.href = output;\n      }\n    },\n    username: {\n      get: function () {\n        var url = this._url;\n        return url.username || '';\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute()) {\n          v = v.replace(/[\\x00-\\x1F\\x7F-\\uFFFF \"#<>?`\\/@\\\\:]/g, URL.percentEncode);\n          url.username = v;\n          output = url.toString();\n        }\n        this.href = output;\n      }\n    },\n    password: {\n      get: function () {\n        var url = this._url;\n        return url.password || '';\n      },\n      set: function (v) {\n        var output = this.href;\n        var url = new URL(output);\n        if (url.isAbsolute()) {\n          if (v === '') {\n            url.password = null;\n          } else {\n            v = v.replace(/[\\x00-\\x1F\\x7F-\\uFFFF \"#<>?`\\/@\\\\]/g, URL.percentEncode);\n            url.password = v;\n          }\n          output = url.toString();\n        }\n        this.href = output;\n      }\n    },\n    origin: {\n      get: function () {\n        var url = this._url;\n        if (url == null) {\n          return '';\n        }\n        var originForPort = function (defaultPort) {\n          var origin = [url.scheme, url.host, +url.port || defaultPort];\n          // XXX should be \"unicode serialization\"\n          return origin[0] + '://' + origin[1] + (origin[2] === defaultPort ? '' : ':' + origin[2]);\n        };\n        switch (url.scheme) {\n          case 'ftp':\n            return originForPort(21);\n          case 'gopher':\n            return originForPort(70);\n          case 'http':\n          case 'ws':\n            return originForPort(80);\n          case 'https':\n          case 'wss':\n            return originForPort(443);\n          default:\n            // this is what chrome does\n            return url.scheme + '://';\n        }\n      }\n    }\n\n    /*\n    searchParams: {\n      get: function() {\n        var url = this._url;\n        // XXX\n      },\n      set: function(v) {\n        var output = this.href;\n        var url = new URL(output);\n        // XXX\n        this.href = output;\n      },\n    },\n    */\n  });\n  URLUtils._inherit = function (proto) {\n    // copy getters/setters from URLUtils to o.\n    Object.getOwnPropertyNames(URLUtils.prototype).forEach(function (p) {\n      if (p === 'constructor' || p === 'href') {\n        return;\n      }\n      var desc = Object.getOwnPropertyDescriptor(URLUtils.prototype, p);\n      Object.defineProperty(proto, p, desc);\n    });\n  };\n  return URLUtils_1;\n}\nvar defineElement;\nvar hasRequiredDefineElement;\nfunction requireDefineElement() {\n  if (hasRequiredDefineElement) return defineElement;\n  hasRequiredDefineElement = 1;\n  var attributes = requireAttributes();\n  var isApiWritable = requireConfig().isApiWritable;\n  defineElement = function (spec, defaultConstructor, tagList, tagNameToImpl) {\n    var c = spec.ctor;\n    if (c) {\n      var props = spec.props || {};\n      if (spec.attributes) {\n        for (var n in spec.attributes) {\n          var attr = spec.attributes[n];\n          if (typeof attr !== 'object' || Array.isArray(attr)) attr = {\n            type: attr\n          };\n          if (!attr.name) attr.name = n.toLowerCase();\n          props[n] = attributes.property(attr);\n        }\n      }\n      props.constructor = {\n        value: c,\n        writable: isApiWritable\n      };\n      c.prototype = Object.create((spec.superclass || defaultConstructor).prototype, props);\n      if (spec.events) {\n        addEventHandlers(c, spec.events);\n      }\n      tagList[spec.name] = c;\n    } else {\n      c = defaultConstructor;\n    }\n    (spec.tags || spec.tag && [spec.tag] || []).forEach(function (tag) {\n      tagNameToImpl[tag] = c;\n    });\n    return c;\n  };\n  function EventHandlerBuilder(body, document, form, element) {\n    this.body = body;\n    this.document = document;\n    this.form = form;\n    this.element = element;\n  }\n  EventHandlerBuilder.prototype.build = function () {\n    return () => {};\n  };\n  function EventHandlerChangeHandler(elt, name, oldval, newval) {\n    var doc = elt.ownerDocument || Object.create(null);\n    var form = elt.form || Object.create(null);\n    elt[name] = new EventHandlerBuilder(newval, doc, form, elt).build();\n  }\n  function addEventHandlers(c, eventHandlerTypes) {\n    var p = c.prototype;\n    eventHandlerTypes.forEach(function (type) {\n      // Define the event handler registration IDL attribute for this type\n      Object.defineProperty(p, \"on\" + type, {\n        get: function () {\n          return this._getEventHandler(type);\n        },\n        set: function (v) {\n          this._setEventHandler(type, v);\n        }\n      });\n\n      // Define special behavior for the content attribute as well\n      attributes.registerChangeHandler(c, \"on\" + type, EventHandlerChangeHandler);\n    });\n  }\n  return defineElement;\n}\nvar hasRequiredHtmlelts;\nfunction requireHtmlelts() {\n  if (hasRequiredHtmlelts) return htmlelts;\n  hasRequiredHtmlelts = 1;\n  var Node = requireNode();\n  var Element = requireElement();\n  var CSSStyleDeclaration = requireCSSStyleDeclaration();\n  var utils = requireUtils();\n  var URLUtils = requireURLUtils();\n  var defineElement = requireDefineElement();\n  var htmlElements = htmlelts.elements = {};\n  var htmlNameToImpl = Object.create(null);\n  htmlelts.createElement = function (doc, localName, prefix) {\n    var impl = htmlNameToImpl[localName] || HTMLUnknownElement;\n    return new impl(doc, localName, prefix);\n  };\n  function define(spec) {\n    return defineElement(spec, HTMLElement, htmlElements, htmlNameToImpl);\n  }\n  function URL(attr) {\n    return {\n      get: function () {\n        var v = this._getattr(attr);\n        if (v === null) {\n          return '';\n        }\n        var url = this.doc._resolve(v);\n        return url === null ? v : url;\n      },\n      set: function (value) {\n        this._setattr(attr, value);\n      }\n    };\n  }\n  function CORS(attr) {\n    return {\n      get: function () {\n        var v = this._getattr(attr);\n        if (v === null) {\n          return null;\n        }\n        if (v.toLowerCase() === 'use-credentials') {\n          return 'use-credentials';\n        }\n        return 'anonymous';\n      },\n      set: function (value) {\n        if (value === null || value === undefined) {\n          this.removeAttribute(attr);\n        } else {\n          this._setattr(attr, value);\n        }\n      }\n    };\n  }\n  const REFERRER = {\n    type: [\"\", \"no-referrer\", \"no-referrer-when-downgrade\", \"same-origin\", \"origin\", \"strict-origin\", \"origin-when-cross-origin\", \"strict-origin-when-cross-origin\", \"unsafe-url\"],\n    missing: ''\n  };\n\n  // XXX: the default value for tabIndex should be 0 if the element is\n  // focusable and -1 if it is not.  But the full definition of focusable\n  // is actually hard to compute, so for now, I'll follow Firefox and\n  // just base the default value on the type of the element.\n  var focusableElements = {\n    \"A\": true,\n    \"LINK\": true,\n    \"BUTTON\": true,\n    \"INPUT\": true,\n    \"SELECT\": true,\n    \"TEXTAREA\": true,\n    \"COMMAND\": true\n  };\n  var HTMLFormElement = function (doc, localName, prefix) {\n    HTMLElement.call(this, doc, localName, prefix);\n    this._form = null; // Prevent later deoptimization\n  };\n  var HTMLElement = htmlelts.HTMLElement = define({\n    superclass: Element,\n    name: 'HTMLElement',\n    ctor: function HTMLElement(doc, localName, prefix) {\n      Element.call(this, doc, localName, utils.NAMESPACE.HTML, prefix);\n    },\n    props: {\n      dangerouslySetInnerHTML: {\n        set: function (v) {\n          this._innerHTML = v;\n        }\n      },\n      innerHTML: {\n        get: function () {\n          return this.serialize();\n        },\n        set: function (v) {\n          var parser = this.ownerDocument.implementation.mozHTMLParser(this.ownerDocument._address, this);\n          parser.parse(v === null ? '' : String(v), true);\n\n          // Remove any existing children of this node\n          var target = this instanceof htmlNameToImpl.template ? this.content : this;\n          while (target.hasChildNodes()) target.removeChild(target.firstChild);\n\n          // Now copy newly parsed children to this node\n          target.appendChild(parser._asDocumentFragment());\n        }\n      },\n      style: {\n        get: function () {\n          if (!this._style) this._style = new CSSStyleDeclaration(this);\n          return this._style;\n        },\n        set: function (v) {\n          if (v === null || v === undefined) {\n            v = '';\n          }\n          this._setattr('style', String(v));\n        }\n      },\n      // These can't really be implemented server-side in a reasonable way.\n      blur: {\n        value: function () {}\n      },\n      focus: {\n        value: function () {}\n      },\n      forceSpellCheck: {\n        value: function () {}\n      },\n      click: {\n        value: function () {\n          if (this._click_in_progress) return;\n          this._click_in_progress = true;\n          try {\n            if (this._pre_click_activation_steps) this._pre_click_activation_steps();\n            var event = this.ownerDocument.createEvent(\"MouseEvent\");\n            event.initMouseEvent(\"click\", true, true, this.ownerDocument.defaultView, 1, 0, 0, 0, 0,\n            // These 4 should be initialized with\n            // the actually current keyboard state\n            // somehow...\n            false, false, false, false, 0, null);\n\n            // Dispatch this as an untrusted event since it is synthetic\n            var success = this.dispatchEvent(event);\n            if (success) {\n              if (this._post_click_activation_steps) this._post_click_activation_steps(event);\n            } else {\n              if (this._cancelled_activation_steps) this._cancelled_activation_steps();\n            }\n          } finally {\n            this._click_in_progress = false;\n          }\n        }\n      },\n      submit: {\n        value: utils.nyi\n      }\n    },\n    attributes: {\n      title: String,\n      lang: String,\n      dir: {\n        type: [\"ltr\", \"rtl\", \"auto\"],\n        missing: ''\n      },\n      draggable: {\n        type: [\"true\", \"false\"],\n        treatNullAsEmptyString: true\n      },\n      spellcheck: {\n        type: [\"true\", \"false\"],\n        missing: ''\n      },\n      enterKeyHint: {\n        type: [\"enter\", \"done\", \"go\", \"next\", \"previous\", \"search\", \"send\"],\n        missing: ''\n      },\n      autoCapitalize: {\n        type: [\"off\", \"on\", \"none\", \"sentences\", \"words\", \"characters\"],\n        missing: ''\n      },\n      autoFocus: Boolean,\n      accessKey: String,\n      nonce: String,\n      hidden: Boolean,\n      translate: {\n        type: [\"no\", \"yes\"],\n        missing: ''\n      },\n      tabIndex: {\n        type: \"long\",\n        default: function () {\n          if (this.tagName in focusableElements || this.contentEditable) return 0;else return -1;\n        }\n      }\n    },\n    events: [\"abort\", \"canplay\", \"canplaythrough\", \"change\", \"click\", \"contextmenu\", \"cuechange\", \"dblclick\", \"drag\", \"dragend\", \"dragenter\", \"dragleave\", \"dragover\", \"dragstart\", \"drop\", \"durationchange\", \"emptied\", \"ended\", \"input\", \"invalid\", \"keydown\", \"keypress\", \"keyup\", \"loadeddata\", \"loadedmetadata\", \"loadstart\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"mousewheel\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"readystatechange\", \"reset\", \"seeked\", \"seeking\", \"select\", \"show\", \"stalled\", \"submit\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\",\n    // These last 5 event types will be overriden by HTMLBodyElement\n    \"blur\", \"error\", \"focus\", \"load\", \"scroll\"]\n  });\n\n  // XXX: reflect contextmenu as contextMenu, with element type\n\n  // style: the spec doesn't call this a reflected attribute.\n  //   may want to handle it manually.\n\n  // contentEditable: enumerated, not clear if it is actually\n  // reflected or requires custom getter/setter. Not listed as\n  // \"limited to known values\".  Raises syntax_err on bad setting,\n  // so I think this is custom.\n\n  // contextmenu: content is element id, idl type is an element\n  // draggable: boolean, but not a reflected attribute\n  // dropzone: reflected SettableTokenList, experimental, so don't\n  //   implement it right away.\n\n  // data-* attributes: need special handling in setAttribute?\n  // Or maybe that isn't necessary. Can I just scan the attribute list\n  // when building the dataset?  Liveness and caching issues?\n\n  // microdata attributes: many are simple reflected attributes, but\n  // I'm not going to implement this now.\n\n  var HTMLUnknownElement = define({\n    name: 'HTMLUnknownElement',\n    ctor: function HTMLUnknownElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  var formAssociatedProps = {\n    // See http://www.w3.org/TR/html5/association-of-controls-and-forms.html#form-owner\n    form: {\n      get: function () {\n        return this._form;\n      }\n    }\n  };\n  define({\n    tag: 'a',\n    name: 'HTMLAnchorElement',\n    ctor: function HTMLAnchorElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      _post_click_activation_steps: {\n        value: function (e) {\n          if (this.href) {\n            // Follow the link\n            // XXX: this is just a quick hack\n            // XXX: the HTML spec probably requires more than this\n            this.ownerDocument.defaultView.location = this.href;\n          }\n        }\n      }\n    },\n    attributes: {\n      href: URL,\n      ping: String,\n      download: String,\n      target: String,\n      rel: String,\n      media: String,\n      hreflang: String,\n      type: String,\n      referrerPolicy: REFERRER,\n      // Obsolete\n      coords: String,\n      charset: String,\n      name: String,\n      rev: String,\n      shape: String\n    }\n  });\n  // Latest WhatWG spec says these methods come via HTMLHyperlinkElementUtils\n  URLUtils._inherit(htmlNameToImpl.a.prototype);\n  define({\n    tag: 'area',\n    name: 'HTMLAreaElement',\n    ctor: function HTMLAreaElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      alt: String,\n      target: String,\n      download: String,\n      rel: String,\n      media: String,\n      href: URL,\n      hreflang: String,\n      type: String,\n      shape: String,\n      coords: String,\n      ping: String,\n      // XXX: also reflect relList\n      referrerPolicy: REFERRER,\n      // Obsolete\n      noHref: Boolean\n    }\n  });\n  // Latest WhatWG spec says these methods come via HTMLHyperlinkElementUtils\n  URLUtils._inherit(htmlNameToImpl.area.prototype);\n  define({\n    tag: 'br',\n    name: 'HTMLBRElement',\n    ctor: function HTMLBRElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      clear: String\n    }\n  });\n  define({\n    tag: 'base',\n    name: 'HTMLBaseElement',\n    ctor: function HTMLBaseElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      \"target\": String\n    }\n  });\n  define({\n    tag: 'body',\n    name: 'HTMLBodyElement',\n    ctor: function HTMLBodyElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    // Certain event handler attributes on a <body> tag actually set\n    // handlers for the window rather than just that element.  Define\n    // getters and setters for those here.  Note that some of these override\n    // properties on HTMLElement.prototype.\n    // XXX: If I add support for <frameset>, these have to go there, too\n    // XXX\n    // When the Window object is implemented, these attribute will have\n    // to work with the same-named attributes on the Window.\n    events: [\"afterprint\", \"beforeprint\", \"beforeunload\", \"blur\", \"error\", \"focus\", \"hashchange\", \"load\", \"message\", \"offline\", \"online\", \"pagehide\", \"pageshow\", \"popstate\", \"resize\", \"scroll\", \"storage\", \"unload\"],\n    attributes: {\n      // Obsolete\n      text: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      link: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      vLink: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      aLink: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      bgColor: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      background: String\n    }\n  });\n  define({\n    tag: 'button',\n    name: 'HTMLButtonElement',\n    ctor: function HTMLButtonElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      name: String,\n      value: String,\n      disabled: Boolean,\n      autofocus: Boolean,\n      type: {\n        type: [\"submit\", \"reset\", \"button\", \"menu\"],\n        missing: 'submit'\n      },\n      formTarget: String,\n      formAction: URL,\n      formNoValidate: Boolean,\n      formMethod: {\n        type: [\"get\", \"post\", \"dialog\"],\n        invalid: 'get',\n        missing: ''\n      },\n      formEnctype: {\n        type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"],\n        invalid: \"application/x-www-form-urlencoded\",\n        missing: ''\n      }\n    }\n  });\n  define({\n    tag: 'dl',\n    name: 'HTMLDListElement',\n    ctor: function HTMLDListElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      compact: Boolean\n    }\n  });\n  define({\n    tag: 'data',\n    name: 'HTMLDataElement',\n    ctor: function HTMLDataElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      value: String\n    }\n  });\n  define({\n    tag: 'datalist',\n    name: 'HTMLDataListElement',\n    ctor: function HTMLDataListElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'details',\n    name: 'HTMLDetailsElement',\n    ctor: function HTMLDetailsElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      \"open\": Boolean\n    }\n  });\n  define({\n    tag: 'div',\n    name: 'HTMLDivElement',\n    ctor: function HTMLDivElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String\n    }\n  });\n  define({\n    tag: 'embed',\n    name: 'HTMLEmbedElement',\n    ctor: function HTMLEmbedElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      src: URL,\n      type: String,\n      width: String,\n      height: String,\n      // Obsolete\n      align: String,\n      name: String\n    }\n  });\n  define({\n    tag: 'fieldset',\n    name: 'HTMLFieldSetElement',\n    ctor: function HTMLFieldSetElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      disabled: Boolean,\n      name: String\n    }\n  });\n  define({\n    tag: 'form',\n    name: 'HTMLFormElement',\n    ctor: function HTMLFormElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      action: String,\n      autocomplete: {\n        type: ['on', 'off'],\n        missing: 'on'\n      },\n      name: String,\n      acceptCharset: {\n        name: \"accept-charset\"\n      },\n      target: String,\n      noValidate: Boolean,\n      method: {\n        type: [\"get\", \"post\", \"dialog\"],\n        invalid: 'get',\n        missing: 'get'\n      },\n      // Both enctype and encoding reflect the enctype content attribute\n      enctype: {\n        type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"],\n        invalid: \"application/x-www-form-urlencoded\",\n        missing: \"application/x-www-form-urlencoded\"\n      },\n      encoding: {\n        name: 'enctype',\n        type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"],\n        invalid: \"application/x-www-form-urlencoded\",\n        missing: \"application/x-www-form-urlencoded\"\n      }\n    }\n  });\n  define({\n    tag: 'hr',\n    name: 'HTMLHRElement',\n    ctor: function HTMLHRElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String,\n      color: String,\n      noShade: Boolean,\n      size: String,\n      width: String\n    }\n  });\n  define({\n    tag: 'head',\n    name: 'HTMLHeadElement',\n    ctor: function HTMLHeadElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tags: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n    name: 'HTMLHeadingElement',\n    ctor: function HTMLHeadingElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String\n    }\n  });\n  define({\n    tag: 'html',\n    name: 'HTMLHtmlElement',\n    ctor: function HTMLHtmlElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      xmlns: URL,\n      // Obsolete\n      version: String\n    }\n  });\n  define({\n    tag: 'iframe',\n    name: 'HTMLIFrameElement',\n    ctor: function HTMLIFrameElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      src: URL,\n      srcdoc: String,\n      name: String,\n      width: String,\n      height: String,\n      // XXX: sandbox is a reflected settable token list\n      seamless: Boolean,\n      allow: Boolean,\n      allowFullscreen: Boolean,\n      allowUserMedia: Boolean,\n      allowPaymentRequest: Boolean,\n      referrerPolicy: REFERRER,\n      loading: {\n        type: ['eager', 'lazy'],\n        treatNullAsEmptyString: true\n      },\n      // Obsolete\n      align: String,\n      scrolling: String,\n      frameBorder: String,\n      longDesc: URL,\n      marginHeight: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      marginWidth: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tag: 'img',\n    name: 'HTMLImageElement',\n    ctor: function HTMLImageElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      alt: String,\n      src: URL,\n      srcset: String,\n      crossOrigin: CORS,\n      useMap: String,\n      isMap: Boolean,\n      sizes: String,\n      height: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      width: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      referrerPolicy: REFERRER,\n      loading: {\n        type: ['eager', 'lazy'],\n        missing: ''\n      },\n      // Obsolete:\n      name: String,\n      lowsrc: URL,\n      align: String,\n      hspace: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      vspace: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      longDesc: URL,\n      border: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tag: 'input',\n    name: 'HTMLInputElement',\n    ctor: function HTMLInputElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      form: formAssociatedProps.form,\n      _post_click_activation_steps: {\n        value: function (e) {\n          if (this.type === 'checkbox') {\n            this.checked = !this.checked;\n          } else if (this.type === 'radio') {\n            var group = this.form.getElementsByName(this.name);\n            for (var i = group.length - 1; i >= 0; i--) {\n              var el = group[i];\n              el.checked = el === this;\n            }\n          }\n        }\n      }\n    },\n    attributes: {\n      name: String,\n      disabled: Boolean,\n      autofocus: Boolean,\n      accept: String,\n      alt: String,\n      max: String,\n      min: String,\n      pattern: String,\n      placeholder: String,\n      step: String,\n      dirName: String,\n      defaultValue: {\n        name: 'value'\n      },\n      multiple: Boolean,\n      required: Boolean,\n      readOnly: Boolean,\n      checked: Boolean,\n      value: String,\n      src: URL,\n      defaultChecked: {\n        name: 'checked',\n        type: Boolean\n      },\n      size: {\n        type: 'unsigned long',\n        default: 20,\n        min: 1,\n        setmin: 1\n      },\n      width: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: 0\n      },\n      height: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: 0\n      },\n      minLength: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: -1\n      },\n      maxLength: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: -1\n      },\n      autocomplete: String,\n      // It's complicated\n      type: {\n        type: [\"text\", \"hidden\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"datetime\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\", \"file\", \"submit\", \"image\", \"reset\", \"button\"],\n        missing: 'text'\n      },\n      formTarget: String,\n      formNoValidate: Boolean,\n      formMethod: {\n        type: [\"get\", \"post\"],\n        invalid: 'get',\n        missing: ''\n      },\n      formEnctype: {\n        type: [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"],\n        invalid: \"application/x-www-form-urlencoded\",\n        missing: ''\n      },\n      inputMode: {\n        type: [\"verbatim\", \"latin\", \"latin-name\", \"latin-prose\", \"full-width-latin\", \"kana\", \"kana-name\", \"katakana\", \"numeric\", \"tel\", \"email\", \"url\"],\n        missing: ''\n      },\n      // Obsolete\n      align: String,\n      useMap: String\n    }\n  });\n  define({\n    tag: 'keygen',\n    name: 'HTMLKeygenElement',\n    ctor: function HTMLKeygenElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      name: String,\n      disabled: Boolean,\n      autofocus: Boolean,\n      challenge: String,\n      keytype: {\n        type: [\"rsa\"],\n        missing: ''\n      }\n    }\n  });\n  define({\n    tag: 'li',\n    name: 'HTMLLIElement',\n    ctor: function HTMLLIElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      value: {\n        type: \"long\",\n        default: 0\n      },\n      // Obsolete\n      type: String\n    }\n  });\n  define({\n    tag: 'label',\n    name: 'HTMLLabelElement',\n    ctor: function HTMLLabelElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      htmlFor: {\n        name: 'for',\n        type: String\n      }\n    }\n  });\n  define({\n    tag: 'legend',\n    name: 'HTMLLegendElement',\n    ctor: function HTMLLegendElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String\n    }\n  });\n  define({\n    tag: 'link',\n    name: 'HTMLLinkElement',\n    ctor: function HTMLLinkElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // XXX Reflect DOMSettableTokenList sizes also DOMTokenList relList\n      href: URL,\n      rel: String,\n      media: String,\n      hreflang: String,\n      type: String,\n      crossOrigin: CORS,\n      nonce: String,\n      integrity: String,\n      referrerPolicy: REFERRER,\n      imageSizes: String,\n      imageSrcset: String,\n      // Obsolete\n      charset: String,\n      rev: String,\n      target: String\n    }\n  });\n  define({\n    tag: 'map',\n    name: 'HTMLMapElement',\n    ctor: function HTMLMapElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      name: String\n    }\n  });\n  define({\n    tag: 'menu',\n    name: 'HTMLMenuElement',\n    ctor: function HTMLMenuElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // XXX: not quite right, default should be popup if parent element is\n      // popup.\n      type: {\n        type: ['context', 'popup', 'toolbar'],\n        missing: 'toolbar'\n      },\n      label: String,\n      // Obsolete\n      compact: Boolean\n    }\n  });\n  define({\n    tag: 'meta',\n    name: 'HTMLMetaElement',\n    ctor: function HTMLMetaElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      name: String,\n      content: String,\n      httpEquiv: {\n        name: 'http-equiv',\n        type: String\n      },\n      // Obsolete\n      scheme: String\n    }\n  });\n  define({\n    tag: 'meter',\n    name: 'HTMLMeterElement',\n    ctor: function HTMLMeterElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps\n  });\n  define({\n    tags: ['ins', 'del'],\n    name: 'HTMLModElement',\n    ctor: function HTMLModElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      cite: URL,\n      dateTime: String\n    }\n  });\n  define({\n    tag: 'ol',\n    name: 'HTMLOListElement',\n    ctor: function HTMLOListElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      // Utility function (see the start attribute default value). Returns\n      // the number of <li> children of this element\n      _numitems: {\n        get: function () {\n          var items = 0;\n          this.childNodes.forEach(function (n) {\n            if (n.nodeType === Node.ELEMENT_NODE && n.tagName === \"LI\") items++;\n          });\n          return items;\n        }\n      }\n    },\n    attributes: {\n      type: String,\n      reversed: Boolean,\n      start: {\n        type: \"long\",\n        default: function () {\n          // The default value of the start attribute is 1 unless the list is\n          // reversed. Then it is the # of li children\n          if (this.reversed) return this._numitems;else return 1;\n        }\n      },\n      // Obsolete\n      compact: Boolean\n    }\n  });\n  define({\n    tag: 'object',\n    name: 'HTMLObjectElement',\n    ctor: function HTMLObjectElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      data: URL,\n      type: String,\n      name: String,\n      useMap: String,\n      typeMustMatch: Boolean,\n      width: String,\n      height: String,\n      // Obsolete\n      align: String,\n      archive: String,\n      code: String,\n      declare: Boolean,\n      hspace: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      standby: String,\n      vspace: {\n        type: \"unsigned long\",\n        default: 0\n      },\n      codeBase: URL,\n      codeType: String,\n      border: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tag: 'optgroup',\n    name: 'HTMLOptGroupElement',\n    ctor: function HTMLOptGroupElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      disabled: Boolean,\n      label: String\n    }\n  });\n  define({\n    tag: 'option',\n    name: 'HTMLOptionElement',\n    ctor: function HTMLOptionElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      form: {\n        get: function () {\n          var p = this.parentNode;\n          while (p && p.nodeType === Node.ELEMENT_NODE) {\n            if (p.localName === 'select') return p.form;\n            p = p.parentNode;\n          }\n        }\n      },\n      value: {\n        get: function () {\n          return this._getattr('value') || this.text;\n        },\n        set: function (v) {\n          this._setattr('value', v);\n        }\n      },\n      text: {\n        get: function () {\n          // Strip and collapse whitespace\n          return this.textContent.replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\n        },\n        set: function (v) {\n          this.textContent = v;\n        }\n      }\n      // missing: index\n    },\n    attributes: {\n      disabled: Boolean,\n      defaultSelected: {\n        name: 'selected',\n        type: Boolean\n      },\n      label: String\n    }\n  });\n  define({\n    tag: 'output',\n    name: 'HTMLOutputElement',\n    ctor: function HTMLOutputElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      // XXX Reflect for/htmlFor as a settable token list\n      name: String\n    }\n  });\n  define({\n    tag: 'p',\n    name: 'HTMLParagraphElement',\n    ctor: function HTMLParagraphElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String\n    }\n  });\n  define({\n    tag: 'param',\n    name: 'HTMLParamElement',\n    ctor: function HTMLParamElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      name: String,\n      value: String,\n      // Obsolete\n      type: String,\n      valueType: String\n    }\n  });\n  define({\n    tags: ['pre', /*legacy elements:*/'listing', 'xmp'],\n    name: 'HTMLPreElement',\n    ctor: function HTMLPreElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      width: {\n        type: \"long\",\n        default: 0\n      }\n    }\n  });\n  define({\n    tag: 'progress',\n    name: 'HTMLProgressElement',\n    ctor: function HTMLProgressElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: formAssociatedProps,\n    attributes: {\n      max: {\n        type: Number,\n        float: true,\n        default: 1.0,\n        min: 0\n      }\n    }\n  });\n  define({\n    tags: ['q', 'blockquote'],\n    name: 'HTMLQuoteElement',\n    ctor: function HTMLQuoteElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      cite: URL\n    }\n  });\n  define({\n    tag: 'script',\n    name: 'HTMLScriptElement',\n    ctor: function HTMLScriptElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      text: {\n        get: function () {\n          var s = \"\";\n          for (var i = 0, n = this.childNodes.length; i < n; i++) {\n            var child = this.childNodes[i];\n            if (child.nodeType === Node.TEXT_NODE) s += child._data;\n          }\n          return s;\n        },\n        set: function (value) {\n          this.removeChildren();\n          if (value !== null && value !== \"\") {\n            this.appendChild(this.ownerDocument.createTextNode(value));\n          }\n        }\n      }\n    },\n    attributes: {\n      src: URL,\n      type: String,\n      charset: String,\n      referrerPolicy: REFERRER,\n      defer: Boolean,\n      async: Boolean,\n      nomodule: Boolean,\n      crossOrigin: CORS,\n      nonce: String,\n      integrity: String\n    }\n  });\n  define({\n    tag: 'select',\n    name: 'HTMLSelectElement',\n    ctor: function HTMLSelectElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      form: formAssociatedProps.form,\n      options: {\n        get: function () {\n          return this.getElementsByTagName('option');\n        }\n      }\n    },\n    attributes: {\n      autocomplete: String,\n      // It's complicated\n      name: String,\n      disabled: Boolean,\n      autofocus: Boolean,\n      multiple: Boolean,\n      required: Boolean,\n      size: {\n        type: \"unsigned long\",\n        default: 0\n      }\n    }\n  });\n  define({\n    tag: 'span',\n    name: 'HTMLSpanElement',\n    ctor: function HTMLSpanElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'style',\n    name: 'HTMLStyleElement',\n    ctor: function HTMLStyleElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      media: String,\n      type: String,\n      scoped: Boolean\n    }\n  });\n  define({\n    tag: 'caption',\n    name: 'HTMLTableCaptionElement',\n    ctor: function HTMLTableCaptionElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      // Obsolete\n      align: String\n    }\n  });\n  define({\n    name: 'HTMLTableCellElement',\n    ctor: function HTMLTableCellElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      colSpan: {\n        type: \"unsigned long\",\n        default: 1\n      },\n      rowSpan: {\n        type: \"unsigned long\",\n        default: 1\n      },\n      //XXX Also reflect settable token list headers\n      scope: {\n        type: ['row', 'col', 'rowgroup', 'colgroup'],\n        missing: ''\n      },\n      abbr: String,\n      // Obsolete\n      align: String,\n      axis: String,\n      height: String,\n      width: String,\n      ch: {\n        name: 'char',\n        type: String\n      },\n      chOff: {\n        name: 'charoff',\n        type: String\n      },\n      noWrap: Boolean,\n      vAlign: String,\n      bgColor: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tags: ['col', 'colgroup'],\n    name: 'HTMLTableColElement',\n    ctor: function HTMLTableColElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      span: {\n        type: 'limited unsigned long with fallback',\n        default: 1,\n        min: 1\n      },\n      // Obsolete\n      align: String,\n      ch: {\n        name: 'char',\n        type: String\n      },\n      chOff: {\n        name: 'charoff',\n        type: String\n      },\n      vAlign: String,\n      width: String\n    }\n  });\n  define({\n    tag: 'table',\n    name: 'HTMLTableElement',\n    ctor: function HTMLTableElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      rows: {\n        get: function () {\n          return this.getElementsByTagName('tr');\n        }\n      }\n    },\n    attributes: {\n      // Obsolete\n      align: String,\n      border: String,\n      frame: String,\n      rules: String,\n      summary: String,\n      width: String,\n      bgColor: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      cellPadding: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      cellSpacing: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tag: 'template',\n    name: 'HTMLTemplateElement',\n    ctor: function HTMLTemplateElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n      this._contentFragment = doc._templateDoc.createDocumentFragment();\n    },\n    props: {\n      content: {\n        get: function () {\n          return this._contentFragment;\n        }\n      },\n      serialize: {\n        value: function () {\n          return this.content.serialize();\n        }\n      }\n    }\n  });\n  define({\n    tag: 'tr',\n    name: 'HTMLTableRowElement',\n    ctor: function HTMLTableRowElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      cells: {\n        get: function () {\n          return this.querySelectorAll('td,th');\n        }\n      }\n    },\n    attributes: {\n      // Obsolete\n      align: String,\n      ch: {\n        name: 'char',\n        type: String\n      },\n      chOff: {\n        name: 'charoff',\n        type: String\n      },\n      vAlign: String,\n      bgColor: {\n        type: String,\n        treatNullAsEmptyString: true\n      }\n    }\n  });\n  define({\n    tags: ['thead', 'tfoot', 'tbody'],\n    name: 'HTMLTableSectionElement',\n    ctor: function HTMLTableSectionElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      rows: {\n        get: function () {\n          return this.getElementsByTagName('tr');\n        }\n      }\n    },\n    attributes: {\n      // Obsolete\n      align: String,\n      ch: {\n        name: 'char',\n        type: String\n      },\n      chOff: {\n        name: 'charoff',\n        type: String\n      },\n      vAlign: String\n    }\n  });\n  define({\n    tag: 'textarea',\n    name: 'HTMLTextAreaElement',\n    ctor: function HTMLTextAreaElement(doc, localName, prefix) {\n      HTMLFormElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      form: formAssociatedProps.form,\n      type: {\n        get: function () {\n          return 'textarea';\n        }\n      },\n      defaultValue: {\n        get: function () {\n          return this.textContent;\n        },\n        set: function (v) {\n          this.textContent = v;\n        }\n      },\n      value: {\n        get: function () {\n          return this.defaultValue; /* never dirty */\n        },\n        set: function (v) {\n          // This isn't completely correct: according to the spec, this\n          // should \"dirty\" the API value, and result in\n          // `this.value !== this.defaultValue`.  But for most of what\n          // folks want to do, this implementation should be fine:\n          this.defaultValue = v;\n        }\n      },\n      textLength: {\n        get: function () {\n          return this.value.length;\n        }\n      }\n    },\n    attributes: {\n      autocomplete: String,\n      // It's complicated\n      name: String,\n      disabled: Boolean,\n      autofocus: Boolean,\n      placeholder: String,\n      wrap: String,\n      dirName: String,\n      required: Boolean,\n      readOnly: Boolean,\n      rows: {\n        type: 'limited unsigned long with fallback',\n        default: 2\n      },\n      cols: {\n        type: 'limited unsigned long with fallback',\n        default: 20\n      },\n      maxLength: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: -1\n      },\n      minLength: {\n        type: 'unsigned long',\n        min: 0,\n        setmin: 0,\n        default: -1\n      },\n      inputMode: {\n        type: [\"verbatim\", \"latin\", \"latin-name\", \"latin-prose\", \"full-width-latin\", \"kana\", \"kana-name\", \"katakana\", \"numeric\", \"tel\", \"email\", \"url\"],\n        missing: ''\n      }\n    }\n  });\n  define({\n    tag: 'time',\n    name: 'HTMLTimeElement',\n    ctor: function HTMLTimeElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      dateTime: String,\n      pubDate: Boolean\n    }\n  });\n  define({\n    tag: 'title',\n    name: 'HTMLTitleElement',\n    ctor: function HTMLTitleElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      text: {\n        get: function () {\n          return this.textContent;\n        }\n      }\n    }\n  });\n  define({\n    tag: 'ul',\n    name: 'HTMLUListElement',\n    ctor: function HTMLUListElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      type: String,\n      // Obsolete\n      compact: Boolean\n    }\n  });\n  define({\n    name: 'HTMLMediaElement',\n    ctor: function HTMLMediaElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      src: URL,\n      crossOrigin: CORS,\n      preload: {\n        type: [\"metadata\", \"none\", \"auto\", {\n          value: \"\",\n          alias: \"auto\"\n        }],\n        missing: 'auto'\n      },\n      loop: Boolean,\n      autoplay: Boolean,\n      mediaGroup: String,\n      controls: Boolean,\n      defaultMuted: {\n        name: \"muted\",\n        type: Boolean\n      }\n    }\n  });\n  define({\n    name: 'HTMLAudioElement',\n    tag: 'audio',\n    superclass: htmlElements.HTMLMediaElement,\n    ctor: function HTMLAudioElement(doc, localName, prefix) {\n      htmlElements.HTMLMediaElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    name: 'HTMLVideoElement',\n    tag: 'video',\n    superclass: htmlElements.HTMLMediaElement,\n    ctor: function HTMLVideoElement(doc, localName, prefix) {\n      htmlElements.HTMLMediaElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      poster: URL,\n      width: {\n        type: \"unsigned long\",\n        min: 0,\n        default: 0\n      },\n      height: {\n        type: \"unsigned long\",\n        min: 0,\n        default: 0\n      }\n    }\n  });\n  define({\n    tag: 'td',\n    name: 'HTMLTableDataCellElement',\n    superclass: htmlElements.HTMLTableCellElement,\n    ctor: function HTMLTableDataCellElement(doc, localName, prefix) {\n      htmlElements.HTMLTableCellElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'th',\n    name: 'HTMLTableHeaderCellElement',\n    superclass: htmlElements.HTMLTableCellElement,\n    ctor: function HTMLTableHeaderCellElement(doc, localName, prefix) {\n      htmlElements.HTMLTableCellElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'frameset',\n    name: 'HTMLFrameSetElement',\n    ctor: function HTMLFrameSetElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'frame',\n    name: 'HTMLFrameElement',\n    ctor: function HTMLFrameElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    }\n  });\n  define({\n    tag: 'canvas',\n    name: 'HTMLCanvasElement',\n    ctor: function HTMLCanvasElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      getContext: {\n        value: utils.nyi\n      },\n      probablySupportsContext: {\n        value: utils.nyi\n      },\n      setContext: {\n        value: utils.nyi\n      },\n      transferControlToProxy: {\n        value: utils.nyi\n      },\n      toDataURL: {\n        value: utils.nyi\n      },\n      toBlob: {\n        value: utils.nyi\n      }\n    },\n    attributes: {\n      width: {\n        type: \"unsigned long\",\n        default: 300\n      },\n      height: {\n        type: \"unsigned long\",\n        default: 150\n      }\n    }\n  });\n  define({\n    tag: 'dialog',\n    name: 'HTMLDialogElement',\n    ctor: function HTMLDialogElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      show: {\n        value: utils.nyi\n      },\n      showModal: {\n        value: utils.nyi\n      },\n      close: {\n        value: utils.nyi\n      }\n    },\n    attributes: {\n      open: Boolean,\n      returnValue: String\n    }\n  });\n  define({\n    tag: 'menuitem',\n    name: 'HTMLMenuItemElement',\n    ctor: function HTMLMenuItemElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    props: {\n      // The menuitem's label\n      _label: {\n        get: function () {\n          var val = this._getattr('label');\n          if (val !== null && val !== '') {\n            return val;\n          }\n          val = this.textContent;\n          // Strip and collapse whitespace\n          return val.replace(/[ \\t\\n\\f\\r]+/g, ' ').trim();\n        }\n      },\n      // The menuitem label IDL attribute\n      label: {\n        get: function () {\n          var val = this._getattr('label');\n          if (val !== null) {\n            return val;\n          }\n          return this._label;\n        },\n        set: function (v) {\n          this._setattr('label', v);\n        }\n      }\n    },\n    attributes: {\n      type: {\n        type: [\"command\", \"checkbox\", \"radio\"],\n        missing: 'command'\n      },\n      icon: URL,\n      disabled: Boolean,\n      checked: Boolean,\n      radiogroup: String,\n      default: Boolean\n    }\n  });\n  define({\n    tag: 'source',\n    name: 'HTMLSourceElement',\n    ctor: function HTMLSourceElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      srcset: String,\n      sizes: String,\n      media: String,\n      src: URL,\n      type: String,\n      width: String,\n      height: String\n    }\n  });\n  define({\n    tag: 'track',\n    name: 'HTMLTrackElement',\n    ctor: function HTMLTrackElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      src: URL,\n      srclang: String,\n      label: String,\n      default: Boolean,\n      kind: {\n        type: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"],\n        missing: 'subtitles',\n        invalid: 'metadata'\n      }\n    },\n    props: {\n      NONE: {\n        get: function () {\n          return 0;\n        }\n      },\n      LOADING: {\n        get: function () {\n          return 1;\n        }\n      },\n      LOADED: {\n        get: function () {\n          return 2;\n        }\n      },\n      ERROR: {\n        get: function () {\n          return 3;\n        }\n      },\n      readyState: {\n        get: utils.nyi\n      },\n      track: {\n        get: utils.nyi\n      }\n    }\n  });\n  define({\n    // obsolete\n    tag: 'font',\n    name: 'HTMLFontElement',\n    ctor: function HTMLFontElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      color: {\n        type: String,\n        treatNullAsEmptyString: true\n      },\n      face: {\n        type: String\n      },\n      size: {\n        type: String\n      }\n    }\n  });\n  define({\n    // obsolete\n    tag: 'dir',\n    name: 'HTMLDirectoryElement',\n    ctor: function HTMLDirectoryElement(doc, localName, prefix) {\n      HTMLElement.call(this, doc, localName, prefix);\n    },\n    attributes: {\n      compact: Boolean\n    }\n  });\n  define({\n    tags: [\"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"cite\", \"content\", \"code\", \"dd\", \"dfn\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"i\", \"kbd\", \"main\", \"mark\", \"nav\", \"noscript\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"section\", \"small\", \"strong\", \"sub\", \"summary\", \"sup\", \"u\", \"var\", \"wbr\",\n    // Legacy elements\n    \"acronym\", \"basefont\", \"big\", \"center\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"strike\", \"tt\"]\n  });\n  return htmlelts;\n}\nvar svg = {};\nvar hasRequiredSvg;\nfunction requireSvg() {\n  if (hasRequiredSvg) return svg;\n  hasRequiredSvg = 1;\n  (function (exports) {\n    var Element = requireElement();\n    var defineElement = requireDefineElement();\n    var utils = requireUtils();\n    var CSSStyleDeclaration = requireCSSStyleDeclaration();\n    var svgElements = exports.elements = {};\n    var svgNameToImpl = Object.create(null);\n    exports.createElement = function (doc, localName, prefix) {\n      var impl = svgNameToImpl[localName] || SVGElement;\n      return new impl(doc, localName, prefix);\n    };\n    function define(spec) {\n      return defineElement(spec, SVGElement, svgElements, svgNameToImpl);\n    }\n    var SVGElement = define({\n      superclass: Element,\n      name: 'SVGElement',\n      ctor: function SVGElement(doc, localName, prefix) {\n        Element.call(this, doc, localName, utils.NAMESPACE.SVG, prefix);\n      },\n      props: {\n        style: {\n          get: function () {\n            if (!this._style) this._style = new CSSStyleDeclaration(this);\n            return this._style;\n          }\n        }\n      }\n    });\n    define({\n      name: 'SVGSVGElement',\n      ctor: function SVGSVGElement(doc, localName, prefix) {\n        SVGElement.call(this, doc, localName, prefix);\n      },\n      tag: 'svg',\n      props: {\n        createSVGRect: {\n          value: function () {\n            return exports.createElement(this.ownerDocument, 'rect', null);\n          }\n        }\n      }\n    });\n    define({\n      tags: ['a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateColor', 'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'font', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignObject', 'g', 'glyph', 'glyphRef', 'hkern', 'image', 'line', 'linearGradient', 'marker', 'mask', 'metadata', 'missing-glyph', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'script', 'set', 'stop', 'style', 'switch', 'symbol', 'text', 'textPath', 'title', 'tref', 'tspan', 'use', 'view', 'vkern']\n    });\n  })(svg);\n  return svg;\n}\nvar MutationConstants;\nvar hasRequiredMutationConstants;\nfunction requireMutationConstants() {\n  if (hasRequiredMutationConstants) return MutationConstants;\n  hasRequiredMutationConstants = 1;\n  MutationConstants = {\n    VALUE: 1,\n    // The value of a Text, Comment or PI node changed\n    ATTR: 2,\n    // A new attribute was added or an attribute value and/or prefix changed\n    REMOVE_ATTR: 3,\n    // An attribute was removed\n    REMOVE: 4,\n    // A node was removed\n    MOVE: 5,\n    // A node was moved\n    INSERT: 6 // A node (or a subtree of nodes) was inserted\n  };\n  return MutationConstants;\n}\nvar Document_1;\nvar hasRequiredDocument;\nfunction requireDocument() {\n  if (hasRequiredDocument) return Document_1;\n  hasRequiredDocument = 1;\n  Document_1 = Document;\n  var Node = requireNode();\n  var NodeList = requireNodeList();\n  var ContainerNode = requireContainerNode();\n  var Element = requireElement();\n  var Text = requireText();\n  var Comment = requireComment();\n  var Event = requireEvent();\n  var DocumentFragment = requireDocumentFragment();\n  var ProcessingInstruction = requireProcessingInstruction();\n  var DOMImplementation = requireDOMImplementation();\n  var TreeWalker = requireTreeWalker();\n  var NodeIterator = requireNodeIterator();\n  var NodeFilter = requireNodeFilter();\n  var URL = requireURL();\n  var select = requireSelect();\n  var events = requireEvents();\n  var xml = requireXmlnames();\n  var html = requireHtmlelts();\n  var svg = requireSvg();\n  var utils = requireUtils();\n  var MUTATE = requireMutationConstants();\n  var NAMESPACE = utils.NAMESPACE;\n  var isApiWritable = requireConfig().isApiWritable;\n  function Document(isHTML, address) {\n    ContainerNode.call(this);\n    this.nodeType = Node.DOCUMENT_NODE;\n    this.isHTML = isHTML;\n    this._address = address || 'about:blank';\n    this.readyState = 'loading';\n    this.implementation = new DOMImplementation(this);\n\n    // DOMCore says that documents are always associated with themselves\n    this.ownerDocument = null; // ... but W3C tests expect null\n    this._contentType = isHTML ? 'text/html' : 'application/xml';\n\n    // These will be initialized by our custom versions of\n    // appendChild and insertBefore that override the inherited\n    // Node methods.\n    // XXX: override those methods!\n    this.doctype = null;\n    this.documentElement = null;\n\n    // \"Associated inert template document\"\n    this._templateDocCache = null;\n    // List of active NodeIterators, see NodeIterator#_preremove()\n    this._nodeIterators = null;\n\n    // Documents are always rooted, by definition\n    this._nid = 1;\n    this._nextnid = 2; // For numbering children of the document\n    this._nodes = [null, this]; // nid to node map\n\n    // This maintains the mapping from element ids to element nodes.\n    // We may need to update this mapping every time a node is rooted\n    // or uprooted, and any time an attribute is added, removed or changed\n    // on a rooted element.\n    this.byId = Object.create(null);\n\n    // This property holds a monotonically increasing value akin to\n    // a timestamp used to record the last modification time of nodes\n    // and their subtrees. See the lastModTime attribute and modify()\n    // method of the Node class. And see FilteredElementList for an example\n    // of the use of lastModTime\n    this.modclock = 0;\n  }\n\n  // Map from lowercase event category names (used as arguments to\n  // createEvent()) to the property name in the impl object of the\n  // event constructor.\n  var supportedEvents = {\n    event: 'Event',\n    customevent: 'CustomEvent',\n    uievent: 'UIEvent',\n    mouseevent: 'MouseEvent'\n  };\n\n  // Certain arguments to document.createEvent() must be treated specially\n  var replacementEvent = {\n    events: 'event',\n    htmlevents: 'event',\n    mouseevents: 'mouseevent',\n    mutationevents: 'mutationevent',\n    uievents: 'uievent'\n  };\n  var mirrorAttr = function (f, name, defaultValue) {\n    return {\n      get: function () {\n        var o = f.call(this);\n        if (o) {\n          return o[name];\n        }\n        return defaultValue;\n      },\n      set: function (value) {\n        var o = f.call(this);\n        if (o) {\n          o[name] = value;\n        }\n      }\n    };\n  };\n\n  /** @spec https://dom.spec.whatwg.org/#validate-and-extract */\n  function validateAndExtract(namespace, qualifiedName) {\n    var prefix, localName, pos;\n    if (namespace === '') {\n      namespace = null;\n    }\n    // See https://github.com/whatwg/dom/issues/671\n    // and https://github.com/whatwg/dom/issues/319\n    if (!xml.isValidQName(qualifiedName)) {\n      utils.InvalidCharacterError();\n    }\n    prefix = null;\n    localName = qualifiedName;\n    pos = qualifiedName.indexOf(':');\n    if (pos >= 0) {\n      prefix = qualifiedName.substring(0, pos);\n      localName = qualifiedName.substring(pos + 1);\n    }\n    if (prefix !== null && namespace === null) {\n      utils.NamespaceError();\n    }\n    if (prefix === 'xml' && namespace !== NAMESPACE.XML) {\n      utils.NamespaceError();\n    }\n    if ((prefix === 'xmlns' || qualifiedName === 'xmlns') && namespace !== NAMESPACE.XMLNS) {\n      utils.NamespaceError();\n    }\n    if (namespace === NAMESPACE.XMLNS && !(prefix === 'xmlns' || qualifiedName === 'xmlns')) {\n      utils.NamespaceError();\n    }\n    return {\n      namespace: namespace,\n      prefix: prefix,\n      localName: localName\n    };\n  }\n  Document.prototype = Object.create(ContainerNode.prototype, {\n    // This method allows dom.js to communicate with a renderer\n    // that displays the document in some way\n    // XXX: I should probably move this to the window object\n    _setMutationHandler: {\n      value: function (handler) {\n        this.mutationHandler = handler;\n      }\n    },\n    // This method allows dom.js to receive event notifications\n    // from the renderer.\n    // XXX: I should probably move this to the window object\n    _dispatchRendererEvent: {\n      value: function (targetNid, type, details) {\n        var target = this._nodes[targetNid];\n        if (!target) return;\n        target._dispatchEvent(new Event(type, details), true);\n      }\n    },\n    nodeName: {\n      value: '#document'\n    },\n    nodeValue: {\n      get: function () {\n        return null;\n      },\n      set: function () {}\n    },\n    // XXX: DOMCore may remove documentURI, so it is NYI for now\n    documentURI: {\n      get: function () {\n        return this._address;\n      },\n      set: utils.nyi\n    },\n    compatMode: {\n      get: function () {\n        // The _quirks property is set by the HTML parser\n        return this._quirks ? 'BackCompat' : 'CSS1Compat';\n      }\n    },\n    createTextNode: {\n      value: function (data) {\n        return new Text(this, String(data));\n      }\n    },\n    createComment: {\n      value: function (data) {\n        return new Comment(this, data);\n      }\n    },\n    createDocumentFragment: {\n      value: function () {\n        return new DocumentFragment(this);\n      }\n    },\n    createProcessingInstruction: {\n      value: function (target, data) {\n        if (!xml.isValidName(target) || data.indexOf('?>') !== -1) utils.InvalidCharacterError();\n        return new ProcessingInstruction(this, target, data);\n      }\n    },\n    createAttribute: {\n      value: function (localName) {\n        localName = String(localName);\n        if (!xml.isValidName(localName)) utils.InvalidCharacterError();\n        if (this.isHTML) {\n          localName = utils.toASCIILowerCase(localName);\n        }\n        return new Element._Attr(null, localName, null, null, '');\n      }\n    },\n    createAttributeNS: {\n      value: function (namespace, qualifiedName) {\n        // Convert parameter types according to WebIDL\n        namespace = namespace === null || namespace === undefined || namespace === '' ? null : String(namespace);\n        qualifiedName = String(qualifiedName);\n        var ve = validateAndExtract(namespace, qualifiedName);\n        return new Element._Attr(null, ve.localName, ve.prefix, ve.namespace, '');\n      }\n    },\n    createElement: {\n      value: function (localName) {\n        localName = String(localName);\n        if (!xml.isValidName(localName)) utils.InvalidCharacterError();\n        // Per spec, namespace should be HTML namespace if \"context object is\n        // an HTML document or context object's content type is\n        // \"application/xhtml+xml\", and null otherwise.\n        if (this.isHTML) {\n          if (/[A-Z]/.test(localName)) localName = utils.toASCIILowerCase(localName);\n          return html.createElement(this, localName, null);\n        } else if (this.contentType === 'application/xhtml+xml') {\n          return html.createElement(this, localName, null);\n        } else {\n          return new Element(this, localName, null, null);\n        }\n      },\n      writable: isApiWritable\n    },\n    createElementNS: {\n      value: function (namespace, qualifiedName) {\n        // Convert parameter types according to WebIDL\n        namespace = namespace === null || namespace === undefined || namespace === '' ? null : String(namespace);\n        qualifiedName = String(qualifiedName);\n        var ve = validateAndExtract(namespace, qualifiedName);\n        return this._createElementNS(ve.localName, ve.namespace, ve.prefix);\n      },\n      writable: isApiWritable\n    },\n    // This is used directly by HTML parser, which allows it to create\n    // elements with localNames containing ':' and non-default namespaces\n    _createElementNS: {\n      value: function (localName, namespace, prefix) {\n        if (namespace === NAMESPACE.HTML) {\n          return html.createElement(this, localName, prefix);\n        } else if (namespace === NAMESPACE.SVG) {\n          return svg.createElement(this, localName, prefix);\n        }\n        return new Element(this, localName, namespace, prefix);\n      }\n    },\n    createEvent: {\n      value: function createEvent(interfaceName) {\n        interfaceName = interfaceName.toLowerCase();\n        var name = replacementEvent[interfaceName] || interfaceName;\n        var constructor = events[supportedEvents[name]];\n        if (constructor) {\n          var e = new constructor();\n          e._initialized = false;\n          return e;\n        } else {\n          utils.NotSupportedError();\n        }\n      }\n    },\n    // See: http://www.w3.org/TR/dom/#dom-document-createtreewalker\n    createTreeWalker: {\n      value: function (root, whatToShow, filter) {\n        if (!root) {\n          throw new TypeError(\"root argument is required\");\n        }\n        if (!(root instanceof Node)) {\n          throw new TypeError(\"root not a node\");\n        }\n        whatToShow = whatToShow === undefined ? NodeFilter.SHOW_ALL : +whatToShow;\n        filter = filter === undefined ? null : filter;\n        return new TreeWalker(root, whatToShow, filter);\n      }\n    },\n    // See: http://www.w3.org/TR/dom/#dom-document-createnodeiterator\n    createNodeIterator: {\n      value: function (root, whatToShow, filter) {\n        if (!root) {\n          throw new TypeError(\"root argument is required\");\n        }\n        if (!(root instanceof Node)) {\n          throw new TypeError(\"root not a node\");\n        }\n        whatToShow = whatToShow === undefined ? NodeFilter.SHOW_ALL : +whatToShow;\n        filter = filter === undefined ? null : filter;\n        return new NodeIterator(root, whatToShow, filter);\n      }\n    },\n    _attachNodeIterator: {\n      value: function (ni) {\n        // XXX ideally this should be a weak reference from Document to NodeIterator\n        if (!this._nodeIterators) {\n          this._nodeIterators = [];\n        }\n        this._nodeIterators.push(ni);\n      }\n    },\n    _detachNodeIterator: {\n      value: function (ni) {\n        // ni should always be in list of node iterators\n        var idx = this._nodeIterators.indexOf(ni);\n        this._nodeIterators.splice(idx, 1);\n      }\n    },\n    _preremoveNodeIterators: {\n      value: function (toBeRemoved) {\n        if (this._nodeIterators) {\n          this._nodeIterators.forEach(function (ni) {\n            ni._preremove(toBeRemoved);\n          });\n        }\n      }\n    },\n    // Maintain the documentElement and\n    // doctype properties of the document.  Each of the following\n    // methods chains to the Node implementation of the method\n    // to do the actual inserting, removal or replacement.\n\n    _updateDocTypeElement: {\n      value: function _updateDocTypeElement() {\n        this.doctype = this.documentElement = null;\n        for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n          if (kid.nodeType === Node.DOCUMENT_TYPE_NODE) this.doctype = kid;else if (kid.nodeType === Node.ELEMENT_NODE) this.documentElement = kid;\n        }\n      }\n    },\n    insertBefore: {\n      value: function insertBefore(child, refChild) {\n        Node.prototype.insertBefore.call(this, child, refChild);\n        this._updateDocTypeElement();\n        return child;\n      }\n    },\n    replaceChild: {\n      value: function replaceChild(node, child) {\n        Node.prototype.replaceChild.call(this, node, child);\n        this._updateDocTypeElement();\n        return child;\n      }\n    },\n    removeChild: {\n      value: function removeChild(child) {\n        Node.prototype.removeChild.call(this, child);\n        this._updateDocTypeElement();\n        return child;\n      }\n    },\n    getElementById: {\n      value: function (id) {\n        var n = this.byId[id];\n        if (!n) return null;\n        if (n instanceof MultiId) {\n          // there was more than one element with this id\n          return n.getFirst();\n        }\n        return n;\n      }\n    },\n    _hasMultipleElementsWithId: {\n      value: function (id) {\n        // Used internally by querySelectorAll optimization\n        return this.byId[id] instanceof MultiId;\n      }\n    },\n    // Just copy this method from the Element prototype\n    getElementsByName: {\n      value: Element.prototype.getElementsByName\n    },\n    getElementsByTagName: {\n      value: Element.prototype.getElementsByTagName\n    },\n    getElementsByTagNameNS: {\n      value: Element.prototype.getElementsByTagNameNS\n    },\n    getElementsByClassName: {\n      value: Element.prototype.getElementsByClassName\n    },\n    adoptNode: {\n      value: function adoptNode(node) {\n        if (node.nodeType === Node.DOCUMENT_NODE) utils.NotSupportedError();\n        if (node.nodeType === Node.ATTRIBUTE_NODE) {\n          return node;\n        }\n        if (node.parentNode) node.parentNode.removeChild(node);\n        if (node.ownerDocument !== this) recursivelySetOwner(node, this);\n        return node;\n      }\n    },\n    importNode: {\n      value: function importNode(node, deep) {\n        return this.adoptNode(node.cloneNode(deep));\n      },\n      writable: isApiWritable\n    },\n    // The following attributes and methods are from the HTML spec\n    origin: {\n      get: function origin() {\n        return null;\n      }\n    },\n    characterSet: {\n      get: function characterSet() {\n        return \"UTF-8\";\n      }\n    },\n    contentType: {\n      get: function contentType() {\n        return this._contentType;\n      }\n    },\n    URL: {\n      get: function URL() {\n        return this._address;\n      }\n    },\n    domain: {\n      get: utils.nyi,\n      set: utils.nyi\n    },\n    referrer: {\n      get: utils.nyi\n    },\n    cookie: {\n      get: utils.nyi,\n      set: utils.nyi\n    },\n    lastModified: {\n      get: utils.nyi\n    },\n    location: {\n      get: function () {\n        return this.defaultView ? this.defaultView.location : null; // gh #75\n      },\n      set: utils.nyi\n    },\n    _titleElement: {\n      get: function () {\n        // The title element of a document is the first title element in the\n        // document in tree order, if there is one, or null otherwise.\n        return this.getElementsByTagName('title').item(0) || null;\n      }\n    },\n    title: {\n      get: function () {\n        var elt = this._titleElement;\n        // The child text content of the title element, or '' if null.\n        var value = elt ? elt.textContent : '';\n        // Strip and collapse whitespace in value\n        return value.replace(/[ \\t\\n\\r\\f]+/g, ' ').replace(/(^ )|( $)/g, '');\n      },\n      set: function (value) {\n        var elt = this._titleElement;\n        var head = this.head;\n        if (!elt && !head) {\n          return; /* according to spec */\n        }\n        if (!elt) {\n          elt = this.createElement('title');\n          head.appendChild(elt);\n        }\n        elt.textContent = value;\n      }\n    },\n    dir: mirrorAttr(function () {\n      var htmlElement = this.documentElement;\n      if (htmlElement && htmlElement.tagName === 'HTML') {\n        return htmlElement;\n      }\n    }, 'dir', ''),\n    fgColor: mirrorAttr(function () {\n      return this.body;\n    }, 'text', ''),\n    linkColor: mirrorAttr(function () {\n      return this.body;\n    }, 'link', ''),\n    vlinkColor: mirrorAttr(function () {\n      return this.body;\n    }, 'vLink', ''),\n    alinkColor: mirrorAttr(function () {\n      return this.body;\n    }, 'aLink', ''),\n    bgColor: mirrorAttr(function () {\n      return this.body;\n    }, 'bgColor', ''),\n    // Historical aliases of Document#characterSet\n    charset: {\n      get: function () {\n        return this.characterSet;\n      }\n    },\n    inputEncoding: {\n      get: function () {\n        return this.characterSet;\n      }\n    },\n    scrollingElement: {\n      get: function () {\n        return this._quirks ? this.body : this.documentElement;\n      }\n    },\n    // Return the first <body> child of the document element.\n    // XXX For now, setting this attribute is not implemented.\n    body: {\n      get: function () {\n        return namedHTMLChild(this.documentElement, 'body');\n      },\n      set: utils.nyi\n    },\n    // Return the first <head> child of the document element.\n    head: {\n      get: function () {\n        return namedHTMLChild(this.documentElement, 'head');\n      }\n    },\n    images: {\n      get: utils.nyi\n    },\n    embeds: {\n      get: utils.nyi\n    },\n    plugins: {\n      get: utils.nyi\n    },\n    links: {\n      get: utils.nyi\n    },\n    forms: {\n      get: utils.nyi\n    },\n    scripts: {\n      get: utils.nyi\n    },\n    applets: {\n      get: function () {\n        return [];\n      }\n    },\n    activeElement: {\n      get: function () {\n        return null;\n      }\n    },\n    innerHTML: {\n      get: function () {\n        return this.serialize();\n      },\n      set: utils.nyi\n    },\n    outerHTML: {\n      get: function () {\n        return this.serialize();\n      },\n      set: utils.nyi\n    },\n    write: {\n      value: function (args) {\n        if (!this.isHTML) utils.InvalidStateError();\n\n        // XXX: still have to implement the ignore part\n        if (!this._parser /* && this._ignore_destructive_writes > 0 */) return;\n        var s = arguments.join('');\n\n        // If the Document object's reload override flag is set, then\n        // append the string consisting of the concatenation of all the\n        // arguments to the method to the Document's reload override\n        // buffer.\n        // XXX: don't know what this is about.  Still have to do it\n\n        // If there is no pending parsing-blocking script, have the\n        // tokenizer process the characters that were inserted, one at a\n        // time, processing resulting tokens as they are emitted, and\n        // stopping when the tokenizer reaches the insertion point or when\n        // the processing of the tokenizer is aborted by the tree\n        // construction stage (this can happen if a script end tag token is\n        // emitted by the tokenizer).\n\n        // XXX: still have to do the above. Sounds as if we don't\n        // always call parse() here.  If we're blocked, then we just\n        // insert the text into the stream but don't parse it reentrantly...\n\n        // Invoke the parser reentrantly\n        this._parser.parse(s);\n      }\n    },\n    writeln: {\n      value: function writeln(args) {\n        this.write(Array.prototype.join.call(arguments, '') + '\\n');\n      }\n    },\n    open: {\n      value: function () {\n        this.documentElement = null;\n      }\n    },\n    close: {\n      value: function () {\n        this.readyState = 'interactive';\n        this._dispatchEvent(new Event('readystatechange'), true);\n        this._dispatchEvent(new Event('DOMContentLoaded'), true);\n        this.readyState = 'complete';\n        this._dispatchEvent(new Event('readystatechange'), true);\n        if (this.defaultView) {\n          this.defaultView._dispatchEvent(new Event('load'), true);\n        }\n      }\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        var d = new Document(this.isHTML, this._address);\n        d._quirks = this._quirks;\n        d._contentType = this._contentType;\n        return d;\n      }\n    },\n    // We need to adopt the nodes if we do a deep clone\n    cloneNode: {\n      value: function cloneNode(deep) {\n        var clone = Node.prototype.cloneNode.call(this, false);\n        if (deep) {\n          for (var kid = this.firstChild; kid !== null; kid = kid.nextSibling) {\n            clone._appendChild(clone.importNode(kid, true));\n          }\n        }\n        clone._updateDocTypeElement();\n        return clone;\n      }\n    },\n    isEqual: {\n      value: function isEqual(n) {\n        // Any two documents are shallowly equal.\n        // Node.isEqualNode will also test the children\n        return true;\n      }\n    },\n    // Implementation-specific function.  Called when a text, comment,\n    // or pi value changes.\n    mutateValue: {\n      value: function (node) {\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.VALUE,\n            target: node,\n            data: node.data\n          });\n        }\n      }\n    },\n    // Invoked when an attribute's value changes. Attr holds the new\n    // value.  oldval is the old value.  Attribute mutations can also\n    // involve changes to the prefix (and therefore the qualified name)\n    mutateAttr: {\n      value: function (attr, oldval) {\n        // Manage id->element mapping for getElementsById()\n        // XXX: this special case id handling should not go here,\n        // but in the attribute declaration for the id attribute\n        /*\n        if (attr.localName === 'id' && attr.namespaceURI === null) {\n          if (oldval) delId(oldval, attr.ownerElement);\n          addId(attr.value, attr.ownerElement);\n        }\n        */\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.ATTR,\n            target: attr.ownerElement,\n            attr: attr\n          });\n        }\n      }\n    },\n    // Used by removeAttribute and removeAttributeNS for attributes.\n    mutateRemoveAttr: {\n      value: function (attr) {\n        /*\n        * This is now handled in Attributes.js\n            // Manage id to element mapping\n            if (attr.localName === 'id' && attr.namespaceURI === null) {\n              this.delId(attr.value, attr.ownerElement);\n            }\n        */\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.REMOVE_ATTR,\n            target: attr.ownerElement,\n            attr: attr\n          });\n        }\n      }\n    },\n    // Called by Node.removeChild, etc. to remove a rooted element from\n    // the tree. Only needs to generate a single mutation event when a\n    // node is removed, but must recursively mark all descendants as not\n    // rooted.\n    mutateRemove: {\n      value: function (node) {\n        // Send a single mutation event\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.REMOVE,\n            target: node.parentNode,\n            node: node\n          });\n        }\n\n        // Mark this and all descendants as not rooted\n        recursivelyUproot(node);\n      }\n    },\n    // Called when a new element becomes rooted.  It must recursively\n    // generate mutation events for each of the children, and mark them all\n    // as rooted.\n    mutateInsert: {\n      value: function (node) {\n        // Mark node and its descendants as rooted\n        recursivelyRoot(node);\n\n        // Send a single mutation event\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.INSERT,\n            target: node.parentNode,\n            node: node\n          });\n        }\n      }\n    },\n    // Called when a rooted element is moved within the document\n    mutateMove: {\n      value: function (node) {\n        if (this.mutationHandler) {\n          this.mutationHandler({\n            type: MUTATE.MOVE,\n            target: node\n          });\n        }\n      }\n    },\n    // Add a mapping from  id to n for n.ownerDocument\n    addId: {\n      value: function addId(id, n) {\n        var val = this.byId[id];\n        if (!val) {\n          this.byId[id] = n;\n        } else {\n          // TODO: Add a way to opt-out console warnings\n          //console.warn('Duplicate element id ' + id);\n          if (!(val instanceof MultiId)) {\n            val = new MultiId(val);\n            this.byId[id] = val;\n          }\n          val.add(n);\n        }\n      }\n    },\n    // Delete the mapping from id to n for n.ownerDocument\n    delId: {\n      value: function delId(id, n) {\n        var val = this.byId[id];\n        utils.assert(val);\n        if (val instanceof MultiId) {\n          val.del(n);\n          if (val.length === 1) {\n            // convert back to a single node\n            this.byId[id] = val.downgrade();\n          }\n        } else {\n          this.byId[id] = undefined;\n        }\n      }\n    },\n    _resolve: {\n      value: function (href) {\n        //XXX: Cache the URL\n        return new URL(this._documentBaseURL).resolve(href);\n      }\n    },\n    _documentBaseURL: {\n      get: function () {\n        // XXX: This is not implemented correctly yet\n        var url = this._address;\n        if (url === 'about:blank') url = '/';\n        var base = this.querySelector('base[href]');\n        if (base) {\n          return new URL(url).resolve(base.getAttribute('href'));\n        }\n        return url;\n\n        // The document base URL of a Document object is the\n        // absolute URL obtained by running these substeps:\n\n        //     Let fallback base url be the document's address.\n\n        //     If fallback base url is about:blank, and the\n        //     Document's browsing context has a creator browsing\n        //     context, then let fallback base url be the document\n        //     base URL of the creator Document instead.\n\n        //     If the Document is an iframe srcdoc document, then\n        //     let fallback base url be the document base URL of\n        //     the Document's browsing context's browsing context\n        //     container's Document instead.\n\n        //     If there is no base element that has an href\n        //     attribute, then the document base URL is fallback\n        //     base url; abort these steps. Otherwise, let url be\n        //     the value of the href attribute of the first such\n        //     element.\n\n        //     Resolve url relative to fallback base url (thus,\n        //     the base href attribute isn't affected by xml:base\n        //     attributes).\n\n        //     The document base URL is the result of the previous\n        //     step if it was successful; otherwise it is fallback\n        //     base url.\n      }\n    },\n    _templateDoc: {\n      get: function () {\n        if (!this._templateDocCache) {\n          // \"associated inert template document\"\n          var newDoc = new Document(this.isHTML, this._address);\n          this._templateDocCache = newDoc._templateDocCache = newDoc;\n        }\n        return this._templateDocCache;\n      }\n    },\n    querySelector: {\n      value: function (selector) {\n        return select(selector, this)[0];\n      }\n    },\n    querySelectorAll: {\n      value: function (selector) {\n        var nodes = select(selector, this);\n        return nodes.item ? nodes : new NodeList(nodes);\n      }\n    }\n  });\n  var eventHandlerTypes = ['abort', 'canplay', 'canplaythrough', 'change', 'click', 'contextmenu', 'cuechange', 'dblclick', 'drag', 'dragend', 'dragenter', 'dragleave', 'dragover', 'dragstart', 'drop', 'durationchange', 'emptied', 'ended', 'input', 'invalid', 'keydown', 'keypress', 'keyup', 'loadeddata', 'loadedmetadata', 'loadstart', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mousewheel', 'pause', 'play', 'playing', 'progress', 'ratechange', 'readystatechange', 'reset', 'seeked', 'seeking', 'select', 'show', 'stalled', 'submit', 'suspend', 'timeupdate', 'volumechange', 'waiting', 'blur', 'error', 'focus', 'load', 'scroll'];\n\n  // Add event handler idl attribute getters and setters to Document\n  eventHandlerTypes.forEach(function (type) {\n    // Define the event handler registration IDL attribute for this type\n    Object.defineProperty(Document.prototype, 'on' + type, {\n      get: function () {\n        return this._getEventHandler(type);\n      },\n      set: function (v) {\n        this._setEventHandler(type, v);\n      }\n    });\n  });\n  function namedHTMLChild(parent, name) {\n    if (parent && parent.isHTML) {\n      for (var kid = parent.firstChild; kid !== null; kid = kid.nextSibling) {\n        if (kid.nodeType === Node.ELEMENT_NODE && kid.localName === name && kid.namespaceURI === NAMESPACE.HTML) {\n          return kid;\n        }\n      }\n    }\n    return null;\n  }\n  function root(n) {\n    n._nid = n.ownerDocument._nextnid++;\n    n.ownerDocument._nodes[n._nid] = n;\n    // Manage id to element mapping\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      var id = n.getAttribute('id');\n      if (id) n.ownerDocument.addId(id, n);\n\n      // Script elements need to know when they're inserted\n      // into the document\n      if (n._roothook) n._roothook();\n    }\n  }\n  function uproot(n) {\n    // Manage id to element mapping\n    if (n.nodeType === Node.ELEMENT_NODE) {\n      var id = n.getAttribute('id');\n      if (id) n.ownerDocument.delId(id, n);\n    }\n    n.ownerDocument._nodes[n._nid] = undefined;\n    n._nid = undefined;\n  }\n  function recursivelyRoot(node) {\n    root(node);\n    // XXX:\n    // accessing childNodes on a leaf node creates a new array the\n    // first time, so be careful to write this loop so that it\n    // doesn't do that. node is polymorphic, so maybe this is hard to\n    // optimize?  Try switching on nodeType?\n    /*\n      if (node.hasChildNodes()) {\n        var kids = node.childNodes;\n        for(var i = 0, n = kids.length;  i < n; i++)\n          recursivelyRoot(kids[i]);\n      }\n    */\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling) recursivelyRoot(kid);\n    }\n  }\n  function recursivelyUproot(node) {\n    uproot(node);\n    for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling) recursivelyUproot(kid);\n  }\n  function recursivelySetOwner(node, owner) {\n    node.ownerDocument = owner;\n    node._lastModTime = undefined; // mod times are document-based\n    if (Object.prototype.hasOwnProperty.call(node, '_tagName')) {\n      node._tagName = undefined; // Element subclasses might need to change case\n    }\n    for (var kid = node.firstChild; kid !== null; kid = kid.nextSibling) recursivelySetOwner(kid, owner);\n  }\n\n  // A class for storing multiple nodes with the same ID\n  function MultiId(node) {\n    this.nodes = Object.create(null);\n    this.nodes[node._nid] = node;\n    this.length = 1;\n    this.firstNode = undefined;\n  }\n\n  // Add a node to the list, with O(1) time\n  MultiId.prototype.add = function (node) {\n    if (!this.nodes[node._nid]) {\n      this.nodes[node._nid] = node;\n      this.length++;\n      this.firstNode = undefined;\n    }\n  };\n\n  // Remove a node from the list, with O(1) time\n  MultiId.prototype.del = function (node) {\n    if (this.nodes[node._nid]) {\n      delete this.nodes[node._nid];\n      this.length--;\n      this.firstNode = undefined;\n    }\n  };\n\n  // Get the first node from the list, in the document order\n  // Takes O(N) time in the size of the list, with a cache that is invalidated\n  // when the list is modified.\n  MultiId.prototype.getFirst = function () {\n    /* jshint bitwise: false */\n    if (!this.firstNode) {\n      var nid;\n      for (nid in this.nodes) {\n        if (this.firstNode === undefined || this.firstNode.compareDocumentPosition(this.nodes[nid]) & Node.DOCUMENT_POSITION_PRECEDING) {\n          this.firstNode = this.nodes[nid];\n        }\n      }\n    }\n    return this.firstNode;\n  };\n\n  // If there is only one node left, return it. Otherwise return \"this\".\n  MultiId.prototype.downgrade = function () {\n    if (this.length === 1) {\n      var nid;\n      for (nid in this.nodes) {\n        return this.nodes[nid];\n      }\n    }\n    return this;\n  };\n  return Document_1;\n}\nvar DocumentType_1;\nvar hasRequiredDocumentType;\nfunction requireDocumentType() {\n  if (hasRequiredDocumentType) return DocumentType_1;\n  hasRequiredDocumentType = 1;\n  DocumentType_1 = DocumentType;\n  var Node = requireNode();\n  var Leaf = requireLeaf();\n  var ChildNode = requireChildNode();\n  function DocumentType(ownerDocument, name, publicId, systemId) {\n    Leaf.call(this);\n    this.nodeType = Node.DOCUMENT_TYPE_NODE;\n    this.ownerDocument = ownerDocument || null;\n    this.name = name;\n    this.publicId = publicId || \"\";\n    this.systemId = systemId || \"\";\n  }\n  DocumentType.prototype = Object.create(Leaf.prototype, {\n    nodeName: {\n      get: function () {\n        return this.name;\n      }\n    },\n    nodeValue: {\n      get: function () {\n        return null;\n      },\n      set: function () {}\n    },\n    // Utility methods\n    clone: {\n      value: function clone() {\n        return new DocumentType(this.ownerDocument, this.name, this.publicId, this.systemId);\n      }\n    },\n    isEqual: {\n      value: function isEqual(n) {\n        return this.name === n.name && this.publicId === n.publicId && this.systemId === n.systemId;\n      }\n    }\n  });\n  Object.defineProperties(DocumentType.prototype, ChildNode);\n  return DocumentType_1;\n}\nvar HTMLParser_1;\nvar hasRequiredHTMLParser;\nfunction requireHTMLParser() {\n  if (hasRequiredHTMLParser) return HTMLParser_1;\n  hasRequiredHTMLParser = 1;\n  HTMLParser_1 = HTMLParser;\n  var Document = requireDocument();\n  var DocumentType = requireDocumentType();\n  var Node = requireNode();\n  var NAMESPACE = requireUtils().NAMESPACE;\n  var html = requireHtmlelts();\n  var impl = html.elements;\n  var pushAll = Function.prototype.apply.bind(Array.prototype.push);\n\n  /*\n   * This file contains an implementation of the HTML parsing algorithm.\n   * The algorithm and the implementation are complex because HTML\n   * explicitly defines how the parser should behave for all possible\n   * valid and invalid inputs.\n   *\n   * Usage:\n   *\n   * The file defines a single HTMLParser() function, which dom.js exposes\n   * publicly as document.implementation.mozHTMLParser(). This is a\n   * factory function, not a constructor.\n   *\n   * When you call document.implementation.mozHTMLParser(), it returns\n   * an object that has parse() and document() methods. To parse HTML text,\n   * pass the text (in one or more chunks) to the parse() method.  When\n   * you've passed all the text (on the last chunk, or afterward) pass\n   * true as the second argument to parse() to tell the parser that there\n   * is no more coming. Call document() to get the document object that\n   * the parser is parsing into.  You can call this at any time, before\n   * or after calling parse().\n   *\n   * The first argument to mozHTMLParser is the absolute URL of the document.\n   *\n   * The second argument is optional and is for internal use only.  Pass an\n   * element as the fragmentContext to do innerHTML parsing for the\n   * element.  To do innerHTML parsing on a document, pass null. Otherwise,\n   * omit the 2nd argument. See HTMLElement.innerHTML for an example.  Note\n   * that if you pass a context element, the end() method will return an\n   * unwrapped document instead of a wrapped one.\n   *\n   * Implementation details:\n   *\n   * This is a long file of almost 7000 lines. It is structured as one\n   * big function nested within another big function.  The outer\n   * function defines a bunch of constant data, utility functions\n   * that use that data, and a couple of classes used by the parser.\n   * The outer function also defines and returns the\n   * inner function. This inner function is the HTMLParser factory\n   * function that implements the parser and holds all the parser state\n   * as local variables.  The HTMLParser function is quite big because\n   * it defines many nested functions that use those local variables.\n   *\n   * There are three tightly coupled parser stages: a scanner, a\n   * tokenizer and a tree builder. In a (possibly misguided) attempt at\n   * efficiency, the stages are not implemented as separate classes:\n   * everything shares state and is (mostly) implemented in imperative\n   * (rather than OO) style.\n   *\n   * The stages of the parser work like this: When the client code calls\n   * the parser's parse() method, the specified string is passed to\n   * scanChars(). The scanner loops through that string and passes characters\n   * (sometimes one at a time, sometimes in chunks) to the tokenizer stage.\n   * The tokenizer groups the characters into tokens: tags, endtags, runs\n   * of text, comments, doctype declarations, and the end-of-file (EOF)\n   * token.  These tokens are then passed to the tree building stage via\n   * the insertToken() function.  The tree building stage builds up the\n   * document tree.\n   *\n   * The tokenizer stage is a finite state machine.  Each state is\n   * implemented as a function with a name that ends in \"_state\".  The\n   * initial state is data_state(). The current tokenizer state is stored\n   * in the variable 'tokenizer'.  Most state functions expect a single\n   * integer argument which represents a single UTF-16 codepoint.  Some\n   * states want more characters and set a lookahead property on\n   * themselves.  The scanChars() function in the scanner checks for this\n   * lookahead property.  If it doesn't exist, then scanChars() just passes\n   * the next input character to the current tokenizer state function.\n   * Otherwise, scanChars() looks ahead (a given # of characters, or for a\n   * matching string, or for a matching regexp) and passes a string of\n   * characters to the current tokenizer state function.\n   *\n   * As a shortcut, certain states of the tokenizer use regular expressions\n   * to look ahead in the scanner's input buffer for runs of text, simple\n   * tags and attributes.  For well-formed input, these shortcuts skip a\n   * lot of state transitions and speed things up a bit.\n   *\n   * When a tokenizer state function has consumed a complete token, it\n   * emits that token, by calling insertToken(), or by calling a utility\n   * function that itself calls insertToken().  These tokens are passed to\n   * the tree building stage, which is also a state machine.  Like the\n   * tokenizer, the tree building states are implemented as functions, and\n   * these functions have names that end with _mode (because the HTML spec\n   * refers to them as insertion modes). The current insertion mode is held\n   * by the 'parser' variable.  Each insertion mode function takes up to 4\n   * arguments.  The first is a token type, represented by the constants\n   * TAG, ENDTAG, TEXT, COMMENT, DOCTYPE and EOF.  The second argument is\n   * the value of the token: the text or comment data, or tagname or\n   * doctype.  For tags, the 3rd argument is an array of attributes.  For\n   * DOCTYPES it is the optional public id.  For tags, the 4th argument is\n   * true if the tag is self-closing. For doctypes, the 4th argument is the\n   * optional system id.\n   *\n   * Search for \"***\" to find the major sub-divisions in the code.\n   */\n\n  /***\n   * Data prolog.  Lots of constants declared here, including some\n   * very large objects.  They're used throughout the code that follows\n   */\n  // Token types for the tree builder.\n  var EOF = -1;\n  var TEXT = 1;\n  var TAG = 2;\n  var ENDTAG = 3;\n  var COMMENT = 4;\n  var DOCTYPE = 5;\n\n  // A re-usable empty array\n  var NOATTRS = [];\n\n  // These DTD public ids put the browser in quirks mode\n  var quirkyPublicIds = /^HTML$|^-\\/\\/W3O\\/\\/DTD W3 HTML Strict 3\\.0\\/\\/EN\\/\\/$|^-\\/W3C\\/DTD HTML 4\\.0 Transitional\\/EN$|^\\+\\/\\/Silmaril\\/\\/dtd html Pro v0r11 19970101\\/\\/|^-\\/\\/AdvaSoft Ltd\\/\\/DTD HTML 3\\.0 asWedit \\+ extensions\\/\\/|^-\\/\\/AS\\/\\/DTD HTML 3\\.0 asWedit \\+ extensions\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0 Strict\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 2\\.1E\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.2 Final\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\.2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Level 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 0\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 1\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 2\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict Level 3\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML Strict\\/\\/|^-\\/\\/IETF\\/\\/DTD HTML\\/\\/|^-\\/\\/Metrius\\/\\/DTD Metrius Presentational\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 HTML Strict\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 HTML\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 2\\.0 Tables\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 HTML Strict\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 HTML\\/\\/|^-\\/\\/Microsoft\\/\\/DTD Internet Explorer 3\\.0 Tables\\/\\/|^-\\/\\/Netscape Comm\\. Corp\\.\\/\\/DTD HTML\\/\\/|^-\\/\\/Netscape Comm\\. Corp\\.\\/\\/DTD Strict HTML\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML 2\\.0\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML Extended 1\\.0\\/\\/|^-\\/\\/O'Reilly and Associates\\/\\/DTD HTML Extended Relaxed 1\\.0\\/\\/|^-\\/\\/SoftQuad Software\\/\\/DTD HoTMetaL PRO 6\\.0::19990601::extensions to HTML 4\\.0\\/\\/|^-\\/\\/SoftQuad\\/\\/DTD HoTMetaL PRO 4\\.0::19971010::extensions to HTML 4\\.0\\/\\/|^-\\/\\/Spyglass\\/\\/DTD HTML 2\\.0 Extended\\/\\/|^-\\/\\/SQ\\/\\/DTD HTML 2\\.0 HoTMetaL \\+ extensions\\/\\/|^-\\/\\/Sun Microsystems Corp\\.\\/\\/DTD HotJava HTML\\/\\/|^-\\/\\/Sun Microsystems Corp\\.\\/\\/DTD HotJava Strict HTML\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3 1995-03-24\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2 Draft\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2 Final\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 3\\.2S Draft\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.0 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.0 Transitional\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML Experimental 19960712\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML Experimental 970421\\/\\/|^-\\/\\/W3C\\/\\/DTD W3 HTML\\/\\/|^-\\/\\/W3O\\/\\/DTD W3 HTML 3\\.0\\/\\/|^-\\/\\/WebTechs\\/\\/DTD Mozilla HTML 2\\.0\\/\\/|^-\\/\\/WebTechs\\/\\/DTD Mozilla HTML\\/\\//i;\n  var quirkySystemId = \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\";\n  var conditionallyQuirkyPublicIds = /^-\\/\\/W3C\\/\\/DTD HTML 4\\.01 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD HTML 4\\.01 Transitional\\/\\//i;\n\n  // These DTD public ids put the browser in limited quirks mode\n  var limitedQuirkyPublicIds = /^-\\/\\/W3C\\/\\/DTD XHTML 1\\.0 Frameset\\/\\/|^-\\/\\/W3C\\/\\/DTD XHTML 1\\.0 Transitional\\/\\//i;\n\n  // Element sets below. See the isA() function for a way to test\n  // whether an element is a member of a set\n  var specialSet = Object.create(null);\n  specialSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"address\": true,\n    \"applet\": true,\n    \"area\": true,\n    \"article\": true,\n    \"aside\": true,\n    \"base\": true,\n    \"basefont\": true,\n    \"bgsound\": true,\n    \"blockquote\": true,\n    \"body\": true,\n    \"br\": true,\n    \"button\": true,\n    \"caption\": true,\n    \"center\": true,\n    \"col\": true,\n    \"colgroup\": true,\n    \"dd\": true,\n    \"details\": true,\n    \"dir\": true,\n    \"div\": true,\n    \"dl\": true,\n    \"dt\": true,\n    \"embed\": true,\n    \"fieldset\": true,\n    \"figcaption\": true,\n    \"figure\": true,\n    \"footer\": true,\n    \"form\": true,\n    \"frame\": true,\n    \"frameset\": true,\n    \"h1\": true,\n    \"h2\": true,\n    \"h3\": true,\n    \"h4\": true,\n    \"h5\": true,\n    \"h6\": true,\n    \"head\": true,\n    \"header\": true,\n    \"hgroup\": true,\n    \"hr\": true,\n    \"html\": true,\n    \"iframe\": true,\n    \"img\": true,\n    \"input\": true,\n    \"li\": true,\n    \"link\": true,\n    \"listing\": true,\n    \"main\": true,\n    \"marquee\": true,\n    \"menu\": true,\n    \"meta\": true,\n    \"nav\": true,\n    \"noembed\": true,\n    \"noframes\": true,\n    \"noscript\": true,\n    \"object\": true,\n    \"ol\": true,\n    \"p\": true,\n    \"param\": true,\n    \"plaintext\": true,\n    \"pre\": true,\n    \"script\": true,\n    \"section\": true,\n    \"select\": true,\n    \"source\": true,\n    \"style\": true,\n    \"summary\": true,\n    \"table\": true,\n    \"tbody\": true,\n    \"td\": true,\n    \"template\": true,\n    \"textarea\": true,\n    \"tfoot\": true,\n    \"th\": true,\n    \"thead\": true,\n    \"title\": true,\n    \"tr\": true,\n    \"track\": true,\n    // Note that \"xmp\" was removed from the \"special\" set in the latest\n    // spec, apparently by accident; see\n    // https://github.com/whatwg/html/pull/1919\n    \"ul\": true,\n    \"wbr\": true,\n    \"xmp\": true\n  };\n  specialSet[NAMESPACE.SVG] = {\n    __proto__: null,\n    \"foreignObject\": true,\n    \"desc\": true,\n    \"title\": true\n  };\n  specialSet[NAMESPACE.MATHML] = {\n    __proto__: null,\n    \"mi\": true,\n    \"mo\": true,\n    \"mn\": true,\n    \"ms\": true,\n    \"mtext\": true,\n    \"annotation-xml\": true\n  };\n\n  // The set of address, div, and p HTML tags\n  var addressdivpSet = Object.create(null);\n  addressdivpSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"address\": true,\n    \"div\": true,\n    \"p\": true\n  };\n  var dddtSet = Object.create(null);\n  dddtSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"dd\": true,\n    \"dt\": true\n  };\n  var tablesectionrowSet = Object.create(null);\n  tablesectionrowSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"table\": true,\n    \"thead\": true,\n    \"tbody\": true,\n    \"tfoot\": true,\n    \"tr\": true\n  };\n  var impliedEndTagsSet = Object.create(null);\n  impliedEndTagsSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"dd\": true,\n    \"dt\": true,\n    \"li\": true,\n    \"menuitem\": true,\n    \"optgroup\": true,\n    \"option\": true,\n    \"p\": true,\n    \"rb\": true,\n    \"rp\": true,\n    \"rt\": true,\n    \"rtc\": true\n  };\n  var thoroughImpliedEndTagsSet = Object.create(null);\n  thoroughImpliedEndTagsSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"caption\": true,\n    \"colgroup\": true,\n    \"dd\": true,\n    \"dt\": true,\n    \"li\": true,\n    \"optgroup\": true,\n    \"option\": true,\n    \"p\": true,\n    \"rb\": true,\n    \"rp\": true,\n    \"rt\": true,\n    \"rtc\": true,\n    \"tbody\": true,\n    \"td\": true,\n    \"tfoot\": true,\n    \"th\": true,\n    \"thead\": true,\n    \"tr\": true\n  };\n  var tableContextSet = Object.create(null);\n  tableContextSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"table\": true,\n    \"template\": true,\n    \"html\": true\n  };\n  var tableBodyContextSet = Object.create(null);\n  tableBodyContextSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"tbody\": true,\n    \"tfoot\": true,\n    \"thead\": true,\n    \"template\": true,\n    \"html\": true\n  };\n  var tableRowContextSet = Object.create(null);\n  tableRowContextSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"tr\": true,\n    \"template\": true,\n    \"html\": true\n  };\n\n  // See http://www.w3.org/TR/html5/forms.html#form-associated-element\n  var formassociatedSet = Object.create(null);\n  formassociatedSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"button\": true,\n    \"fieldset\": true,\n    \"input\": true,\n    \"keygen\": true,\n    \"object\": true,\n    \"output\": true,\n    \"select\": true,\n    \"textarea\": true,\n    \"img\": true\n  };\n  var inScopeSet = Object.create(null);\n  inScopeSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"applet\": true,\n    \"caption\": true,\n    \"html\": true,\n    \"table\": true,\n    \"td\": true,\n    \"th\": true,\n    \"marquee\": true,\n    \"object\": true,\n    \"template\": true\n  };\n  inScopeSet[NAMESPACE.MATHML] = {\n    __proto__: null,\n    \"mi\": true,\n    \"mo\": true,\n    \"mn\": true,\n    \"ms\": true,\n    \"mtext\": true,\n    \"annotation-xml\": true\n  };\n  inScopeSet[NAMESPACE.SVG] = {\n    __proto__: null,\n    \"foreignObject\": true,\n    \"desc\": true,\n    \"title\": true\n  };\n  var inListItemScopeSet = Object.create(inScopeSet);\n  inListItemScopeSet[NAMESPACE.HTML] = Object.create(inScopeSet[NAMESPACE.HTML]);\n  inListItemScopeSet[NAMESPACE.HTML].ol = true;\n  inListItemScopeSet[NAMESPACE.HTML].ul = true;\n  var inButtonScopeSet = Object.create(inScopeSet);\n  inButtonScopeSet[NAMESPACE.HTML] = Object.create(inScopeSet[NAMESPACE.HTML]);\n  inButtonScopeSet[NAMESPACE.HTML].button = true;\n  var inTableScopeSet = Object.create(null);\n  inTableScopeSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"html\": true,\n    \"table\": true,\n    \"template\": true\n  };\n\n  // The set of elements for select scope is the everything *except* these\n  var invertedSelectScopeSet = Object.create(null);\n  invertedSelectScopeSet[NAMESPACE.HTML] = {\n    __proto__: null,\n    \"optgroup\": true,\n    \"option\": true\n  };\n  var mathmlTextIntegrationPointSet = Object.create(null);\n  mathmlTextIntegrationPointSet[NAMESPACE.MATHML] = {\n    __proto__: null,\n    mi: true,\n    mo: true,\n    mn: true,\n    ms: true,\n    mtext: true\n  };\n  var htmlIntegrationPointSet = Object.create(null);\n  htmlIntegrationPointSet[NAMESPACE.SVG] = {\n    __proto__: null,\n    foreignObject: true,\n    desc: true,\n    title: true\n  };\n  var foreignAttributes = {\n    __proto__: null,\n    \"xlink:actuate\": NAMESPACE.XLINK,\n    \"xlink:arcrole\": NAMESPACE.XLINK,\n    \"xlink:href\": NAMESPACE.XLINK,\n    \"xlink:role\": NAMESPACE.XLINK,\n    \"xlink:show\": NAMESPACE.XLINK,\n    \"xlink:title\": NAMESPACE.XLINK,\n    \"xlink:type\": NAMESPACE.XLINK,\n    \"xml:base\": NAMESPACE.XML,\n    \"xml:lang\": NAMESPACE.XML,\n    \"xml:space\": NAMESPACE.XML,\n    \"xmlns\": NAMESPACE.XMLNS,\n    \"xmlns:xlink\": NAMESPACE.XMLNS\n  };\n\n  // Lowercase to mixed case mapping for SVG attributes and tagnames\n  var svgAttrAdjustments = {\n    __proto__: null,\n    attributename: \"attributeName\",\n    attributetype: \"attributeType\",\n    basefrequency: \"baseFrequency\",\n    baseprofile: \"baseProfile\",\n    calcmode: \"calcMode\",\n    clippathunits: \"clipPathUnits\",\n    diffuseconstant: \"diffuseConstant\",\n    edgemode: \"edgeMode\",\n    filterunits: \"filterUnits\",\n    glyphref: \"glyphRef\",\n    gradienttransform: \"gradientTransform\",\n    gradientunits: \"gradientUnits\",\n    kernelmatrix: \"kernelMatrix\",\n    kernelunitlength: \"kernelUnitLength\",\n    keypoints: \"keyPoints\",\n    keysplines: \"keySplines\",\n    keytimes: \"keyTimes\",\n    lengthadjust: \"lengthAdjust\",\n    limitingconeangle: \"limitingConeAngle\",\n    markerheight: \"markerHeight\",\n    markerunits: \"markerUnits\",\n    markerwidth: \"markerWidth\",\n    maskcontentunits: \"maskContentUnits\",\n    maskunits: \"maskUnits\",\n    numoctaves: \"numOctaves\",\n    pathlength: \"pathLength\",\n    patterncontentunits: \"patternContentUnits\",\n    patterntransform: \"patternTransform\",\n    patternunits: \"patternUnits\",\n    pointsatx: \"pointsAtX\",\n    pointsaty: \"pointsAtY\",\n    pointsatz: \"pointsAtZ\",\n    preservealpha: \"preserveAlpha\",\n    preserveaspectratio: \"preserveAspectRatio\",\n    primitiveunits: \"primitiveUnits\",\n    refx: \"refX\",\n    refy: \"refY\",\n    repeatcount: \"repeatCount\",\n    repeatdur: \"repeatDur\",\n    requiredextensions: \"requiredExtensions\",\n    requiredfeatures: \"requiredFeatures\",\n    specularconstant: \"specularConstant\",\n    specularexponent: \"specularExponent\",\n    spreadmethod: \"spreadMethod\",\n    startoffset: \"startOffset\",\n    stddeviation: \"stdDeviation\",\n    stitchtiles: \"stitchTiles\",\n    surfacescale: \"surfaceScale\",\n    systemlanguage: \"systemLanguage\",\n    tablevalues: \"tableValues\",\n    targetx: \"targetX\",\n    targety: \"targetY\",\n    textlength: \"textLength\",\n    viewbox: \"viewBox\",\n    viewtarget: \"viewTarget\",\n    xchannelselector: \"xChannelSelector\",\n    ychannelselector: \"yChannelSelector\",\n    zoomandpan: \"zoomAndPan\"\n  };\n  var svgTagNameAdjustments = {\n    __proto__: null,\n    altglyph: \"altGlyph\",\n    altglyphdef: \"altGlyphDef\",\n    altglyphitem: \"altGlyphItem\",\n    animatecolor: \"animateColor\",\n    animatemotion: \"animateMotion\",\n    animatetransform: \"animateTransform\",\n    clippath: \"clipPath\",\n    feblend: \"feBlend\",\n    fecolormatrix: \"feColorMatrix\",\n    fecomponenttransfer: \"feComponentTransfer\",\n    fecomposite: \"feComposite\",\n    feconvolvematrix: \"feConvolveMatrix\",\n    fediffuselighting: \"feDiffuseLighting\",\n    fedisplacementmap: \"feDisplacementMap\",\n    fedistantlight: \"feDistantLight\",\n    feflood: \"feFlood\",\n    fefunca: \"feFuncA\",\n    fefuncb: \"feFuncB\",\n    fefuncg: \"feFuncG\",\n    fefuncr: \"feFuncR\",\n    fegaussianblur: \"feGaussianBlur\",\n    feimage: \"feImage\",\n    femerge: \"feMerge\",\n    femergenode: \"feMergeNode\",\n    femorphology: \"feMorphology\",\n    feoffset: \"feOffset\",\n    fepointlight: \"fePointLight\",\n    fespecularlighting: \"feSpecularLighting\",\n    fespotlight: \"feSpotLight\",\n    fetile: \"feTile\",\n    feturbulence: \"feTurbulence\",\n    foreignobject: \"foreignObject\",\n    glyphref: \"glyphRef\",\n    lineargradient: \"linearGradient\",\n    radialgradient: \"radialGradient\",\n    textpath: \"textPath\"\n  };\n\n  // Data for parsing numeric and named character references\n  // These next 3 objects are direct translations of tables\n  // in the HTML spec into JavaScript object format\n  var numericCharRefReplacements = {\n    __proto__: null,\n    0x00: 0xFFFD,\n    0x80: 0x20AC,\n    0x82: 0x201A,\n    0x83: 0x0192,\n    0x84: 0x201E,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02C6,\n    0x89: 0x2030,\n    0x8A: 0x0160,\n    0x8B: 0x2039,\n    0x8C: 0x0152,\n    0x8E: 0x017D,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201C,\n    0x94: 0x201D,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02DC,\n    0x99: 0x2122,\n    0x9A: 0x0161,\n    0x9B: 0x203A,\n    0x9C: 0x0153,\n    0x9E: 0x017E,\n    0x9F: 0x0178\n  };\n\n  /*\n   * This table is generated with test/tools/update-entities.js\n   */\n  var namedCharRefs = {\n    __proto__: null,\n    \"AElig\": 0xc6,\n    \"AElig;\": 0xc6,\n    \"AMP\": 0x26,\n    \"AMP;\": 0x26,\n    \"Aacute\": 0xc1,\n    \"Aacute;\": 0xc1,\n    \"Abreve;\": 0x102,\n    \"Acirc\": 0xc2,\n    \"Acirc;\": 0xc2,\n    \"Acy;\": 0x410,\n    \"Afr;\": [0xd835, 0xdd04],\n    \"Agrave\": 0xc0,\n    \"Agrave;\": 0xc0,\n    \"Alpha;\": 0x391,\n    \"Amacr;\": 0x100,\n    \"And;\": 0x2a53,\n    \"Aogon;\": 0x104,\n    \"Aopf;\": [0xd835, 0xdd38],\n    \"ApplyFunction;\": 0x2061,\n    \"Aring\": 0xc5,\n    \"Aring;\": 0xc5,\n    \"Ascr;\": [0xd835, 0xdc9c],\n    \"Assign;\": 0x2254,\n    \"Atilde\": 0xc3,\n    \"Atilde;\": 0xc3,\n    \"Auml\": 0xc4,\n    \"Auml;\": 0xc4,\n    \"Backslash;\": 0x2216,\n    \"Barv;\": 0x2ae7,\n    \"Barwed;\": 0x2306,\n    \"Bcy;\": 0x411,\n    \"Because;\": 0x2235,\n    \"Bernoullis;\": 0x212c,\n    \"Beta;\": 0x392,\n    \"Bfr;\": [0xd835, 0xdd05],\n    \"Bopf;\": [0xd835, 0xdd39],\n    \"Breve;\": 0x2d8,\n    \"Bscr;\": 0x212c,\n    \"Bumpeq;\": 0x224e,\n    \"CHcy;\": 0x427,\n    \"COPY\": 0xa9,\n    \"COPY;\": 0xa9,\n    \"Cacute;\": 0x106,\n    \"Cap;\": 0x22d2,\n    \"CapitalDifferentialD;\": 0x2145,\n    \"Cayleys;\": 0x212d,\n    \"Ccaron;\": 0x10c,\n    \"Ccedil\": 0xc7,\n    \"Ccedil;\": 0xc7,\n    \"Ccirc;\": 0x108,\n    \"Cconint;\": 0x2230,\n    \"Cdot;\": 0x10a,\n    \"Cedilla;\": 0xb8,\n    \"CenterDot;\": 0xb7,\n    \"Cfr;\": 0x212d,\n    \"Chi;\": 0x3a7,\n    \"CircleDot;\": 0x2299,\n    \"CircleMinus;\": 0x2296,\n    \"CirclePlus;\": 0x2295,\n    \"CircleTimes;\": 0x2297,\n    \"ClockwiseContourIntegral;\": 0x2232,\n    \"CloseCurlyDoubleQuote;\": 0x201d,\n    \"CloseCurlyQuote;\": 0x2019,\n    \"Colon;\": 0x2237,\n    \"Colone;\": 0x2a74,\n    \"Congruent;\": 0x2261,\n    \"Conint;\": 0x222f,\n    \"ContourIntegral;\": 0x222e,\n    \"Copf;\": 0x2102,\n    \"Coproduct;\": 0x2210,\n    \"CounterClockwiseContourIntegral;\": 0x2233,\n    \"Cross;\": 0x2a2f,\n    \"Cscr;\": [0xd835, 0xdc9e],\n    \"Cup;\": 0x22d3,\n    \"CupCap;\": 0x224d,\n    \"DD;\": 0x2145,\n    \"DDotrahd;\": 0x2911,\n    \"DJcy;\": 0x402,\n    \"DScy;\": 0x405,\n    \"DZcy;\": 0x40f,\n    \"Dagger;\": 0x2021,\n    \"Darr;\": 0x21a1,\n    \"Dashv;\": 0x2ae4,\n    \"Dcaron;\": 0x10e,\n    \"Dcy;\": 0x414,\n    \"Del;\": 0x2207,\n    \"Delta;\": 0x394,\n    \"Dfr;\": [0xd835, 0xdd07],\n    \"DiacriticalAcute;\": 0xb4,\n    \"DiacriticalDot;\": 0x2d9,\n    \"DiacriticalDoubleAcute;\": 0x2dd,\n    \"DiacriticalGrave;\": 0x60,\n    \"DiacriticalTilde;\": 0x2dc,\n    \"Diamond;\": 0x22c4,\n    \"DifferentialD;\": 0x2146,\n    \"Dopf;\": [0xd835, 0xdd3b],\n    \"Dot;\": 0xa8,\n    \"DotDot;\": 0x20dc,\n    \"DotEqual;\": 0x2250,\n    \"DoubleContourIntegral;\": 0x222f,\n    \"DoubleDot;\": 0xa8,\n    \"DoubleDownArrow;\": 0x21d3,\n    \"DoubleLeftArrow;\": 0x21d0,\n    \"DoubleLeftRightArrow;\": 0x21d4,\n    \"DoubleLeftTee;\": 0x2ae4,\n    \"DoubleLongLeftArrow;\": 0x27f8,\n    \"DoubleLongLeftRightArrow;\": 0x27fa,\n    \"DoubleLongRightArrow;\": 0x27f9,\n    \"DoubleRightArrow;\": 0x21d2,\n    \"DoubleRightTee;\": 0x22a8,\n    \"DoubleUpArrow;\": 0x21d1,\n    \"DoubleUpDownArrow;\": 0x21d5,\n    \"DoubleVerticalBar;\": 0x2225,\n    \"DownArrow;\": 0x2193,\n    \"DownArrowBar;\": 0x2913,\n    \"DownArrowUpArrow;\": 0x21f5,\n    \"DownBreve;\": 0x311,\n    \"DownLeftRightVector;\": 0x2950,\n    \"DownLeftTeeVector;\": 0x295e,\n    \"DownLeftVector;\": 0x21bd,\n    \"DownLeftVectorBar;\": 0x2956,\n    \"DownRightTeeVector;\": 0x295f,\n    \"DownRightVector;\": 0x21c1,\n    \"DownRightVectorBar;\": 0x2957,\n    \"DownTee;\": 0x22a4,\n    \"DownTeeArrow;\": 0x21a7,\n    \"Downarrow;\": 0x21d3,\n    \"Dscr;\": [0xd835, 0xdc9f],\n    \"Dstrok;\": 0x110,\n    \"ENG;\": 0x14a,\n    \"ETH\": 0xd0,\n    \"ETH;\": 0xd0,\n    \"Eacute\": 0xc9,\n    \"Eacute;\": 0xc9,\n    \"Ecaron;\": 0x11a,\n    \"Ecirc\": 0xca,\n    \"Ecirc;\": 0xca,\n    \"Ecy;\": 0x42d,\n    \"Edot;\": 0x116,\n    \"Efr;\": [0xd835, 0xdd08],\n    \"Egrave\": 0xc8,\n    \"Egrave;\": 0xc8,\n    \"Element;\": 0x2208,\n    \"Emacr;\": 0x112,\n    \"EmptySmallSquare;\": 0x25fb,\n    \"EmptyVerySmallSquare;\": 0x25ab,\n    \"Eogon;\": 0x118,\n    \"Eopf;\": [0xd835, 0xdd3c],\n    \"Epsilon;\": 0x395,\n    \"Equal;\": 0x2a75,\n    \"EqualTilde;\": 0x2242,\n    \"Equilibrium;\": 0x21cc,\n    \"Escr;\": 0x2130,\n    \"Esim;\": 0x2a73,\n    \"Eta;\": 0x397,\n    \"Euml\": 0xcb,\n    \"Euml;\": 0xcb,\n    \"Exists;\": 0x2203,\n    \"ExponentialE;\": 0x2147,\n    \"Fcy;\": 0x424,\n    \"Ffr;\": [0xd835, 0xdd09],\n    \"FilledSmallSquare;\": 0x25fc,\n    \"FilledVerySmallSquare;\": 0x25aa,\n    \"Fopf;\": [0xd835, 0xdd3d],\n    \"ForAll;\": 0x2200,\n    \"Fouriertrf;\": 0x2131,\n    \"Fscr;\": 0x2131,\n    \"GJcy;\": 0x403,\n    \"GT\": 0x3e,\n    \"GT;\": 0x3e,\n    \"Gamma;\": 0x393,\n    \"Gammad;\": 0x3dc,\n    \"Gbreve;\": 0x11e,\n    \"Gcedil;\": 0x122,\n    \"Gcirc;\": 0x11c,\n    \"Gcy;\": 0x413,\n    \"Gdot;\": 0x120,\n    \"Gfr;\": [0xd835, 0xdd0a],\n    \"Gg;\": 0x22d9,\n    \"Gopf;\": [0xd835, 0xdd3e],\n    \"GreaterEqual;\": 0x2265,\n    \"GreaterEqualLess;\": 0x22db,\n    \"GreaterFullEqual;\": 0x2267,\n    \"GreaterGreater;\": 0x2aa2,\n    \"GreaterLess;\": 0x2277,\n    \"GreaterSlantEqual;\": 0x2a7e,\n    \"GreaterTilde;\": 0x2273,\n    \"Gscr;\": [0xd835, 0xdca2],\n    \"Gt;\": 0x226b,\n    \"HARDcy;\": 0x42a,\n    \"Hacek;\": 0x2c7,\n    \"Hat;\": 0x5e,\n    \"Hcirc;\": 0x124,\n    \"Hfr;\": 0x210c,\n    \"HilbertSpace;\": 0x210b,\n    \"Hopf;\": 0x210d,\n    \"HorizontalLine;\": 0x2500,\n    \"Hscr;\": 0x210b,\n    \"Hstrok;\": 0x126,\n    \"HumpDownHump;\": 0x224e,\n    \"HumpEqual;\": 0x224f,\n    \"IEcy;\": 0x415,\n    \"IJlig;\": 0x132,\n    \"IOcy;\": 0x401,\n    \"Iacute\": 0xcd,\n    \"Iacute;\": 0xcd,\n    \"Icirc\": 0xce,\n    \"Icirc;\": 0xce,\n    \"Icy;\": 0x418,\n    \"Idot;\": 0x130,\n    \"Ifr;\": 0x2111,\n    \"Igrave\": 0xcc,\n    \"Igrave;\": 0xcc,\n    \"Im;\": 0x2111,\n    \"Imacr;\": 0x12a,\n    \"ImaginaryI;\": 0x2148,\n    \"Implies;\": 0x21d2,\n    \"Int;\": 0x222c,\n    \"Integral;\": 0x222b,\n    \"Intersection;\": 0x22c2,\n    \"InvisibleComma;\": 0x2063,\n    \"InvisibleTimes;\": 0x2062,\n    \"Iogon;\": 0x12e,\n    \"Iopf;\": [0xd835, 0xdd40],\n    \"Iota;\": 0x399,\n    \"Iscr;\": 0x2110,\n    \"Itilde;\": 0x128,\n    \"Iukcy;\": 0x406,\n    \"Iuml\": 0xcf,\n    \"Iuml;\": 0xcf,\n    \"Jcirc;\": 0x134,\n    \"Jcy;\": 0x419,\n    \"Jfr;\": [0xd835, 0xdd0d],\n    \"Jopf;\": [0xd835, 0xdd41],\n    \"Jscr;\": [0xd835, 0xdca5],\n    \"Jsercy;\": 0x408,\n    \"Jukcy;\": 0x404,\n    \"KHcy;\": 0x425,\n    \"KJcy;\": 0x40c,\n    \"Kappa;\": 0x39a,\n    \"Kcedil;\": 0x136,\n    \"Kcy;\": 0x41a,\n    \"Kfr;\": [0xd835, 0xdd0e],\n    \"Kopf;\": [0xd835, 0xdd42],\n    \"Kscr;\": [0xd835, 0xdca6],\n    \"LJcy;\": 0x409,\n    \"LT\": 0x3c,\n    \"LT;\": 0x3c,\n    \"Lacute;\": 0x139,\n    \"Lambda;\": 0x39b,\n    \"Lang;\": 0x27ea,\n    \"Laplacetrf;\": 0x2112,\n    \"Larr;\": 0x219e,\n    \"Lcaron;\": 0x13d,\n    \"Lcedil;\": 0x13b,\n    \"Lcy;\": 0x41b,\n    \"LeftAngleBracket;\": 0x27e8,\n    \"LeftArrow;\": 0x2190,\n    \"LeftArrowBar;\": 0x21e4,\n    \"LeftArrowRightArrow;\": 0x21c6,\n    \"LeftCeiling;\": 0x2308,\n    \"LeftDoubleBracket;\": 0x27e6,\n    \"LeftDownTeeVector;\": 0x2961,\n    \"LeftDownVector;\": 0x21c3,\n    \"LeftDownVectorBar;\": 0x2959,\n    \"LeftFloor;\": 0x230a,\n    \"LeftRightArrow;\": 0x2194,\n    \"LeftRightVector;\": 0x294e,\n    \"LeftTee;\": 0x22a3,\n    \"LeftTeeArrow;\": 0x21a4,\n    \"LeftTeeVector;\": 0x295a,\n    \"LeftTriangle;\": 0x22b2,\n    \"LeftTriangleBar;\": 0x29cf,\n    \"LeftTriangleEqual;\": 0x22b4,\n    \"LeftUpDownVector;\": 0x2951,\n    \"LeftUpTeeVector;\": 0x2960,\n    \"LeftUpVector;\": 0x21bf,\n    \"LeftUpVectorBar;\": 0x2958,\n    \"LeftVector;\": 0x21bc,\n    \"LeftVectorBar;\": 0x2952,\n    \"Leftarrow;\": 0x21d0,\n    \"Leftrightarrow;\": 0x21d4,\n    \"LessEqualGreater;\": 0x22da,\n    \"LessFullEqual;\": 0x2266,\n    \"LessGreater;\": 0x2276,\n    \"LessLess;\": 0x2aa1,\n    \"LessSlantEqual;\": 0x2a7d,\n    \"LessTilde;\": 0x2272,\n    \"Lfr;\": [0xd835, 0xdd0f],\n    \"Ll;\": 0x22d8,\n    \"Lleftarrow;\": 0x21da,\n    \"Lmidot;\": 0x13f,\n    \"LongLeftArrow;\": 0x27f5,\n    \"LongLeftRightArrow;\": 0x27f7,\n    \"LongRightArrow;\": 0x27f6,\n    \"Longleftarrow;\": 0x27f8,\n    \"Longleftrightarrow;\": 0x27fa,\n    \"Longrightarrow;\": 0x27f9,\n    \"Lopf;\": [0xd835, 0xdd43],\n    \"LowerLeftArrow;\": 0x2199,\n    \"LowerRightArrow;\": 0x2198,\n    \"Lscr;\": 0x2112,\n    \"Lsh;\": 0x21b0,\n    \"Lstrok;\": 0x141,\n    \"Lt;\": 0x226a,\n    \"Map;\": 0x2905,\n    \"Mcy;\": 0x41c,\n    \"MediumSpace;\": 0x205f,\n    \"Mellintrf;\": 0x2133,\n    \"Mfr;\": [0xd835, 0xdd10],\n    \"MinusPlus;\": 0x2213,\n    \"Mopf;\": [0xd835, 0xdd44],\n    \"Mscr;\": 0x2133,\n    \"Mu;\": 0x39c,\n    \"NJcy;\": 0x40a,\n    \"Nacute;\": 0x143,\n    \"Ncaron;\": 0x147,\n    \"Ncedil;\": 0x145,\n    \"Ncy;\": 0x41d,\n    \"NegativeMediumSpace;\": 0x200b,\n    \"NegativeThickSpace;\": 0x200b,\n    \"NegativeThinSpace;\": 0x200b,\n    \"NegativeVeryThinSpace;\": 0x200b,\n    \"NestedGreaterGreater;\": 0x226b,\n    \"NestedLessLess;\": 0x226a,\n    \"NewLine;\": 0xa,\n    \"Nfr;\": [0xd835, 0xdd11],\n    \"NoBreak;\": 0x2060,\n    \"NonBreakingSpace;\": 0xa0,\n    \"Nopf;\": 0x2115,\n    \"Not;\": 0x2aec,\n    \"NotCongruent;\": 0x2262,\n    \"NotCupCap;\": 0x226d,\n    \"NotDoubleVerticalBar;\": 0x2226,\n    \"NotElement;\": 0x2209,\n    \"NotEqual;\": 0x2260,\n    \"NotEqualTilde;\": [0x2242, 0x338],\n    \"NotExists;\": 0x2204,\n    \"NotGreater;\": 0x226f,\n    \"NotGreaterEqual;\": 0x2271,\n    \"NotGreaterFullEqual;\": [0x2267, 0x338],\n    \"NotGreaterGreater;\": [0x226b, 0x338],\n    \"NotGreaterLess;\": 0x2279,\n    \"NotGreaterSlantEqual;\": [0x2a7e, 0x338],\n    \"NotGreaterTilde;\": 0x2275,\n    \"NotHumpDownHump;\": [0x224e, 0x338],\n    \"NotHumpEqual;\": [0x224f, 0x338],\n    \"NotLeftTriangle;\": 0x22ea,\n    \"NotLeftTriangleBar;\": [0x29cf, 0x338],\n    \"NotLeftTriangleEqual;\": 0x22ec,\n    \"NotLess;\": 0x226e,\n    \"NotLessEqual;\": 0x2270,\n    \"NotLessGreater;\": 0x2278,\n    \"NotLessLess;\": [0x226a, 0x338],\n    \"NotLessSlantEqual;\": [0x2a7d, 0x338],\n    \"NotLessTilde;\": 0x2274,\n    \"NotNestedGreaterGreater;\": [0x2aa2, 0x338],\n    \"NotNestedLessLess;\": [0x2aa1, 0x338],\n    \"NotPrecedes;\": 0x2280,\n    \"NotPrecedesEqual;\": [0x2aaf, 0x338],\n    \"NotPrecedesSlantEqual;\": 0x22e0,\n    \"NotReverseElement;\": 0x220c,\n    \"NotRightTriangle;\": 0x22eb,\n    \"NotRightTriangleBar;\": [0x29d0, 0x338],\n    \"NotRightTriangleEqual;\": 0x22ed,\n    \"NotSquareSubset;\": [0x228f, 0x338],\n    \"NotSquareSubsetEqual;\": 0x22e2,\n    \"NotSquareSuperset;\": [0x2290, 0x338],\n    \"NotSquareSupersetEqual;\": 0x22e3,\n    \"NotSubset;\": [0x2282, 0x20d2],\n    \"NotSubsetEqual;\": 0x2288,\n    \"NotSucceeds;\": 0x2281,\n    \"NotSucceedsEqual;\": [0x2ab0, 0x338],\n    \"NotSucceedsSlantEqual;\": 0x22e1,\n    \"NotSucceedsTilde;\": [0x227f, 0x338],\n    \"NotSuperset;\": [0x2283, 0x20d2],\n    \"NotSupersetEqual;\": 0x2289,\n    \"NotTilde;\": 0x2241,\n    \"NotTildeEqual;\": 0x2244,\n    \"NotTildeFullEqual;\": 0x2247,\n    \"NotTildeTilde;\": 0x2249,\n    \"NotVerticalBar;\": 0x2224,\n    \"Nscr;\": [0xd835, 0xdca9],\n    \"Ntilde\": 0xd1,\n    \"Ntilde;\": 0xd1,\n    \"Nu;\": 0x39d,\n    \"OElig;\": 0x152,\n    \"Oacute\": 0xd3,\n    \"Oacute;\": 0xd3,\n    \"Ocirc\": 0xd4,\n    \"Ocirc;\": 0xd4,\n    \"Ocy;\": 0x41e,\n    \"Odblac;\": 0x150,\n    \"Ofr;\": [0xd835, 0xdd12],\n    \"Ograve\": 0xd2,\n    \"Ograve;\": 0xd2,\n    \"Omacr;\": 0x14c,\n    \"Omega;\": 0x3a9,\n    \"Omicron;\": 0x39f,\n    \"Oopf;\": [0xd835, 0xdd46],\n    \"OpenCurlyDoubleQuote;\": 0x201c,\n    \"OpenCurlyQuote;\": 0x2018,\n    \"Or;\": 0x2a54,\n    \"Oscr;\": [0xd835, 0xdcaa],\n    \"Oslash\": 0xd8,\n    \"Oslash;\": 0xd8,\n    \"Otilde\": 0xd5,\n    \"Otilde;\": 0xd5,\n    \"Otimes;\": 0x2a37,\n    \"Ouml\": 0xd6,\n    \"Ouml;\": 0xd6,\n    \"OverBar;\": 0x203e,\n    \"OverBrace;\": 0x23de,\n    \"OverBracket;\": 0x23b4,\n    \"OverParenthesis;\": 0x23dc,\n    \"PartialD;\": 0x2202,\n    \"Pcy;\": 0x41f,\n    \"Pfr;\": [0xd835, 0xdd13],\n    \"Phi;\": 0x3a6,\n    \"Pi;\": 0x3a0,\n    \"PlusMinus;\": 0xb1,\n    \"Poincareplane;\": 0x210c,\n    \"Popf;\": 0x2119,\n    \"Pr;\": 0x2abb,\n    \"Precedes;\": 0x227a,\n    \"PrecedesEqual;\": 0x2aaf,\n    \"PrecedesSlantEqual;\": 0x227c,\n    \"PrecedesTilde;\": 0x227e,\n    \"Prime;\": 0x2033,\n    \"Product;\": 0x220f,\n    \"Proportion;\": 0x2237,\n    \"Proportional;\": 0x221d,\n    \"Pscr;\": [0xd835, 0xdcab],\n    \"Psi;\": 0x3a8,\n    \"QUOT\": 0x22,\n    \"QUOT;\": 0x22,\n    \"Qfr;\": [0xd835, 0xdd14],\n    \"Qopf;\": 0x211a,\n    \"Qscr;\": [0xd835, 0xdcac],\n    \"RBarr;\": 0x2910,\n    \"REG\": 0xae,\n    \"REG;\": 0xae,\n    \"Racute;\": 0x154,\n    \"Rang;\": 0x27eb,\n    \"Rarr;\": 0x21a0,\n    \"Rarrtl;\": 0x2916,\n    \"Rcaron;\": 0x158,\n    \"Rcedil;\": 0x156,\n    \"Rcy;\": 0x420,\n    \"Re;\": 0x211c,\n    \"ReverseElement;\": 0x220b,\n    \"ReverseEquilibrium;\": 0x21cb,\n    \"ReverseUpEquilibrium;\": 0x296f,\n    \"Rfr;\": 0x211c,\n    \"Rho;\": 0x3a1,\n    \"RightAngleBracket;\": 0x27e9,\n    \"RightArrow;\": 0x2192,\n    \"RightArrowBar;\": 0x21e5,\n    \"RightArrowLeftArrow;\": 0x21c4,\n    \"RightCeiling;\": 0x2309,\n    \"RightDoubleBracket;\": 0x27e7,\n    \"RightDownTeeVector;\": 0x295d,\n    \"RightDownVector;\": 0x21c2,\n    \"RightDownVectorBar;\": 0x2955,\n    \"RightFloor;\": 0x230b,\n    \"RightTee;\": 0x22a2,\n    \"RightTeeArrow;\": 0x21a6,\n    \"RightTeeVector;\": 0x295b,\n    \"RightTriangle;\": 0x22b3,\n    \"RightTriangleBar;\": 0x29d0,\n    \"RightTriangleEqual;\": 0x22b5,\n    \"RightUpDownVector;\": 0x294f,\n    \"RightUpTeeVector;\": 0x295c,\n    \"RightUpVector;\": 0x21be,\n    \"RightUpVectorBar;\": 0x2954,\n    \"RightVector;\": 0x21c0,\n    \"RightVectorBar;\": 0x2953,\n    \"Rightarrow;\": 0x21d2,\n    \"Ropf;\": 0x211d,\n    \"RoundImplies;\": 0x2970,\n    \"Rrightarrow;\": 0x21db,\n    \"Rscr;\": 0x211b,\n    \"Rsh;\": 0x21b1,\n    \"RuleDelayed;\": 0x29f4,\n    \"SHCHcy;\": 0x429,\n    \"SHcy;\": 0x428,\n    \"SOFTcy;\": 0x42c,\n    \"Sacute;\": 0x15a,\n    \"Sc;\": 0x2abc,\n    \"Scaron;\": 0x160,\n    \"Scedil;\": 0x15e,\n    \"Scirc;\": 0x15c,\n    \"Scy;\": 0x421,\n    \"Sfr;\": [0xd835, 0xdd16],\n    \"ShortDownArrow;\": 0x2193,\n    \"ShortLeftArrow;\": 0x2190,\n    \"ShortRightArrow;\": 0x2192,\n    \"ShortUpArrow;\": 0x2191,\n    \"Sigma;\": 0x3a3,\n    \"SmallCircle;\": 0x2218,\n    \"Sopf;\": [0xd835, 0xdd4a],\n    \"Sqrt;\": 0x221a,\n    \"Square;\": 0x25a1,\n    \"SquareIntersection;\": 0x2293,\n    \"SquareSubset;\": 0x228f,\n    \"SquareSubsetEqual;\": 0x2291,\n    \"SquareSuperset;\": 0x2290,\n    \"SquareSupersetEqual;\": 0x2292,\n    \"SquareUnion;\": 0x2294,\n    \"Sscr;\": [0xd835, 0xdcae],\n    \"Star;\": 0x22c6,\n    \"Sub;\": 0x22d0,\n    \"Subset;\": 0x22d0,\n    \"SubsetEqual;\": 0x2286,\n    \"Succeeds;\": 0x227b,\n    \"SucceedsEqual;\": 0x2ab0,\n    \"SucceedsSlantEqual;\": 0x227d,\n    \"SucceedsTilde;\": 0x227f,\n    \"SuchThat;\": 0x220b,\n    \"Sum;\": 0x2211,\n    \"Sup;\": 0x22d1,\n    \"Superset;\": 0x2283,\n    \"SupersetEqual;\": 0x2287,\n    \"Supset;\": 0x22d1,\n    \"THORN\": 0xde,\n    \"THORN;\": 0xde,\n    \"TRADE;\": 0x2122,\n    \"TSHcy;\": 0x40b,\n    \"TScy;\": 0x426,\n    \"Tab;\": 0x9,\n    \"Tau;\": 0x3a4,\n    \"Tcaron;\": 0x164,\n    \"Tcedil;\": 0x162,\n    \"Tcy;\": 0x422,\n    \"Tfr;\": [0xd835, 0xdd17],\n    \"Therefore;\": 0x2234,\n    \"Theta;\": 0x398,\n    \"ThickSpace;\": [0x205f, 0x200a],\n    \"ThinSpace;\": 0x2009,\n    \"Tilde;\": 0x223c,\n    \"TildeEqual;\": 0x2243,\n    \"TildeFullEqual;\": 0x2245,\n    \"TildeTilde;\": 0x2248,\n    \"Topf;\": [0xd835, 0xdd4b],\n    \"TripleDot;\": 0x20db,\n    \"Tscr;\": [0xd835, 0xdcaf],\n    \"Tstrok;\": 0x166,\n    \"Uacute\": 0xda,\n    \"Uacute;\": 0xda,\n    \"Uarr;\": 0x219f,\n    \"Uarrocir;\": 0x2949,\n    \"Ubrcy;\": 0x40e,\n    \"Ubreve;\": 0x16c,\n    \"Ucirc\": 0xdb,\n    \"Ucirc;\": 0xdb,\n    \"Ucy;\": 0x423,\n    \"Udblac;\": 0x170,\n    \"Ufr;\": [0xd835, 0xdd18],\n    \"Ugrave\": 0xd9,\n    \"Ugrave;\": 0xd9,\n    \"Umacr;\": 0x16a,\n    \"UnderBar;\": 0x5f,\n    \"UnderBrace;\": 0x23df,\n    \"UnderBracket;\": 0x23b5,\n    \"UnderParenthesis;\": 0x23dd,\n    \"Union;\": 0x22c3,\n    \"UnionPlus;\": 0x228e,\n    \"Uogon;\": 0x172,\n    \"Uopf;\": [0xd835, 0xdd4c],\n    \"UpArrow;\": 0x2191,\n    \"UpArrowBar;\": 0x2912,\n    \"UpArrowDownArrow;\": 0x21c5,\n    \"UpDownArrow;\": 0x2195,\n    \"UpEquilibrium;\": 0x296e,\n    \"UpTee;\": 0x22a5,\n    \"UpTeeArrow;\": 0x21a5,\n    \"Uparrow;\": 0x21d1,\n    \"Updownarrow;\": 0x21d5,\n    \"UpperLeftArrow;\": 0x2196,\n    \"UpperRightArrow;\": 0x2197,\n    \"Upsi;\": 0x3d2,\n    \"Upsilon;\": 0x3a5,\n    \"Uring;\": 0x16e,\n    \"Uscr;\": [0xd835, 0xdcb0],\n    \"Utilde;\": 0x168,\n    \"Uuml\": 0xdc,\n    \"Uuml;\": 0xdc,\n    \"VDash;\": 0x22ab,\n    \"Vbar;\": 0x2aeb,\n    \"Vcy;\": 0x412,\n    \"Vdash;\": 0x22a9,\n    \"Vdashl;\": 0x2ae6,\n    \"Vee;\": 0x22c1,\n    \"Verbar;\": 0x2016,\n    \"Vert;\": 0x2016,\n    \"VerticalBar;\": 0x2223,\n    \"VerticalLine;\": 0x7c,\n    \"VerticalSeparator;\": 0x2758,\n    \"VerticalTilde;\": 0x2240,\n    \"VeryThinSpace;\": 0x200a,\n    \"Vfr;\": [0xd835, 0xdd19],\n    \"Vopf;\": [0xd835, 0xdd4d],\n    \"Vscr;\": [0xd835, 0xdcb1],\n    \"Vvdash;\": 0x22aa,\n    \"Wcirc;\": 0x174,\n    \"Wedge;\": 0x22c0,\n    \"Wfr;\": [0xd835, 0xdd1a],\n    \"Wopf;\": [0xd835, 0xdd4e],\n    \"Wscr;\": [0xd835, 0xdcb2],\n    \"Xfr;\": [0xd835, 0xdd1b],\n    \"Xi;\": 0x39e,\n    \"Xopf;\": [0xd835, 0xdd4f],\n    \"Xscr;\": [0xd835, 0xdcb3],\n    \"YAcy;\": 0x42f,\n    \"YIcy;\": 0x407,\n    \"YUcy;\": 0x42e,\n    \"Yacute\": 0xdd,\n    \"Yacute;\": 0xdd,\n    \"Ycirc;\": 0x176,\n    \"Ycy;\": 0x42b,\n    \"Yfr;\": [0xd835, 0xdd1c],\n    \"Yopf;\": [0xd835, 0xdd50],\n    \"Yscr;\": [0xd835, 0xdcb4],\n    \"Yuml;\": 0x178,\n    \"ZHcy;\": 0x416,\n    \"Zacute;\": 0x179,\n    \"Zcaron;\": 0x17d,\n    \"Zcy;\": 0x417,\n    \"Zdot;\": 0x17b,\n    \"ZeroWidthSpace;\": 0x200b,\n    \"Zeta;\": 0x396,\n    \"Zfr;\": 0x2128,\n    \"Zopf;\": 0x2124,\n    \"Zscr;\": [0xd835, 0xdcb5],\n    \"aacute\": 0xe1,\n    \"aacute;\": 0xe1,\n    \"abreve;\": 0x103,\n    \"ac;\": 0x223e,\n    \"acE;\": [0x223e, 0x333],\n    \"acd;\": 0x223f,\n    \"acirc\": 0xe2,\n    \"acirc;\": 0xe2,\n    \"acute\": 0xb4,\n    \"acute;\": 0xb4,\n    \"acy;\": 0x430,\n    \"aelig\": 0xe6,\n    \"aelig;\": 0xe6,\n    \"af;\": 0x2061,\n    \"afr;\": [0xd835, 0xdd1e],\n    \"agrave\": 0xe0,\n    \"agrave;\": 0xe0,\n    \"alefsym;\": 0x2135,\n    \"aleph;\": 0x2135,\n    \"alpha;\": 0x3b1,\n    \"amacr;\": 0x101,\n    \"amalg;\": 0x2a3f,\n    \"amp\": 0x26,\n    \"amp;\": 0x26,\n    \"and;\": 0x2227,\n    \"andand;\": 0x2a55,\n    \"andd;\": 0x2a5c,\n    \"andslope;\": 0x2a58,\n    \"andv;\": 0x2a5a,\n    \"ang;\": 0x2220,\n    \"ange;\": 0x29a4,\n    \"angle;\": 0x2220,\n    \"angmsd;\": 0x2221,\n    \"angmsdaa;\": 0x29a8,\n    \"angmsdab;\": 0x29a9,\n    \"angmsdac;\": 0x29aa,\n    \"angmsdad;\": 0x29ab,\n    \"angmsdae;\": 0x29ac,\n    \"angmsdaf;\": 0x29ad,\n    \"angmsdag;\": 0x29ae,\n    \"angmsdah;\": 0x29af,\n    \"angrt;\": 0x221f,\n    \"angrtvb;\": 0x22be,\n    \"angrtvbd;\": 0x299d,\n    \"angsph;\": 0x2222,\n    \"angst;\": 0xc5,\n    \"angzarr;\": 0x237c,\n    \"aogon;\": 0x105,\n    \"aopf;\": [0xd835, 0xdd52],\n    \"ap;\": 0x2248,\n    \"apE;\": 0x2a70,\n    \"apacir;\": 0x2a6f,\n    \"ape;\": 0x224a,\n    \"apid;\": 0x224b,\n    \"apos;\": 0x27,\n    \"approx;\": 0x2248,\n    \"approxeq;\": 0x224a,\n    \"aring\": 0xe5,\n    \"aring;\": 0xe5,\n    \"ascr;\": [0xd835, 0xdcb6],\n    \"ast;\": 0x2a,\n    \"asymp;\": 0x2248,\n    \"asympeq;\": 0x224d,\n    \"atilde\": 0xe3,\n    \"atilde;\": 0xe3,\n    \"auml\": 0xe4,\n    \"auml;\": 0xe4,\n    \"awconint;\": 0x2233,\n    \"awint;\": 0x2a11,\n    \"bNot;\": 0x2aed,\n    \"backcong;\": 0x224c,\n    \"backepsilon;\": 0x3f6,\n    \"backprime;\": 0x2035,\n    \"backsim;\": 0x223d,\n    \"backsimeq;\": 0x22cd,\n    \"barvee;\": 0x22bd,\n    \"barwed;\": 0x2305,\n    \"barwedge;\": 0x2305,\n    \"bbrk;\": 0x23b5,\n    \"bbrktbrk;\": 0x23b6,\n    \"bcong;\": 0x224c,\n    \"bcy;\": 0x431,\n    \"bdquo;\": 0x201e,\n    \"becaus;\": 0x2235,\n    \"because;\": 0x2235,\n    \"bemptyv;\": 0x29b0,\n    \"bepsi;\": 0x3f6,\n    \"bernou;\": 0x212c,\n    \"beta;\": 0x3b2,\n    \"beth;\": 0x2136,\n    \"between;\": 0x226c,\n    \"bfr;\": [0xd835, 0xdd1f],\n    \"bigcap;\": 0x22c2,\n    \"bigcirc;\": 0x25ef,\n    \"bigcup;\": 0x22c3,\n    \"bigodot;\": 0x2a00,\n    \"bigoplus;\": 0x2a01,\n    \"bigotimes;\": 0x2a02,\n    \"bigsqcup;\": 0x2a06,\n    \"bigstar;\": 0x2605,\n    \"bigtriangledown;\": 0x25bd,\n    \"bigtriangleup;\": 0x25b3,\n    \"biguplus;\": 0x2a04,\n    \"bigvee;\": 0x22c1,\n    \"bigwedge;\": 0x22c0,\n    \"bkarow;\": 0x290d,\n    \"blacklozenge;\": 0x29eb,\n    \"blacksquare;\": 0x25aa,\n    \"blacktriangle;\": 0x25b4,\n    \"blacktriangledown;\": 0x25be,\n    \"blacktriangleleft;\": 0x25c2,\n    \"blacktriangleright;\": 0x25b8,\n    \"blank;\": 0x2423,\n    \"blk12;\": 0x2592,\n    \"blk14;\": 0x2591,\n    \"blk34;\": 0x2593,\n    \"block;\": 0x2588,\n    \"bne;\": [0x3d, 0x20e5],\n    \"bnequiv;\": [0x2261, 0x20e5],\n    \"bnot;\": 0x2310,\n    \"bopf;\": [0xd835, 0xdd53],\n    \"bot;\": 0x22a5,\n    \"bottom;\": 0x22a5,\n    \"bowtie;\": 0x22c8,\n    \"boxDL;\": 0x2557,\n    \"boxDR;\": 0x2554,\n    \"boxDl;\": 0x2556,\n    \"boxDr;\": 0x2553,\n    \"boxH;\": 0x2550,\n    \"boxHD;\": 0x2566,\n    \"boxHU;\": 0x2569,\n    \"boxHd;\": 0x2564,\n    \"boxHu;\": 0x2567,\n    \"boxUL;\": 0x255d,\n    \"boxUR;\": 0x255a,\n    \"boxUl;\": 0x255c,\n    \"boxUr;\": 0x2559,\n    \"boxV;\": 0x2551,\n    \"boxVH;\": 0x256c,\n    \"boxVL;\": 0x2563,\n    \"boxVR;\": 0x2560,\n    \"boxVh;\": 0x256b,\n    \"boxVl;\": 0x2562,\n    \"boxVr;\": 0x255f,\n    \"boxbox;\": 0x29c9,\n    \"boxdL;\": 0x2555,\n    \"boxdR;\": 0x2552,\n    \"boxdl;\": 0x2510,\n    \"boxdr;\": 0x250c,\n    \"boxh;\": 0x2500,\n    \"boxhD;\": 0x2565,\n    \"boxhU;\": 0x2568,\n    \"boxhd;\": 0x252c,\n    \"boxhu;\": 0x2534,\n    \"boxminus;\": 0x229f,\n    \"boxplus;\": 0x229e,\n    \"boxtimes;\": 0x22a0,\n    \"boxuL;\": 0x255b,\n    \"boxuR;\": 0x2558,\n    \"boxul;\": 0x2518,\n    \"boxur;\": 0x2514,\n    \"boxv;\": 0x2502,\n    \"boxvH;\": 0x256a,\n    \"boxvL;\": 0x2561,\n    \"boxvR;\": 0x255e,\n    \"boxvh;\": 0x253c,\n    \"boxvl;\": 0x2524,\n    \"boxvr;\": 0x251c,\n    \"bprime;\": 0x2035,\n    \"breve;\": 0x2d8,\n    \"brvbar\": 0xa6,\n    \"brvbar;\": 0xa6,\n    \"bscr;\": [0xd835, 0xdcb7],\n    \"bsemi;\": 0x204f,\n    \"bsim;\": 0x223d,\n    \"bsime;\": 0x22cd,\n    \"bsol;\": 0x5c,\n    \"bsolb;\": 0x29c5,\n    \"bsolhsub;\": 0x27c8,\n    \"bull;\": 0x2022,\n    \"bullet;\": 0x2022,\n    \"bump;\": 0x224e,\n    \"bumpE;\": 0x2aae,\n    \"bumpe;\": 0x224f,\n    \"bumpeq;\": 0x224f,\n    \"cacute;\": 0x107,\n    \"cap;\": 0x2229,\n    \"capand;\": 0x2a44,\n    \"capbrcup;\": 0x2a49,\n    \"capcap;\": 0x2a4b,\n    \"capcup;\": 0x2a47,\n    \"capdot;\": 0x2a40,\n    \"caps;\": [0x2229, 0xfe00],\n    \"caret;\": 0x2041,\n    \"caron;\": 0x2c7,\n    \"ccaps;\": 0x2a4d,\n    \"ccaron;\": 0x10d,\n    \"ccedil\": 0xe7,\n    \"ccedil;\": 0xe7,\n    \"ccirc;\": 0x109,\n    \"ccups;\": 0x2a4c,\n    \"ccupssm;\": 0x2a50,\n    \"cdot;\": 0x10b,\n    \"cedil\": 0xb8,\n    \"cedil;\": 0xb8,\n    \"cemptyv;\": 0x29b2,\n    \"cent\": 0xa2,\n    \"cent;\": 0xa2,\n    \"centerdot;\": 0xb7,\n    \"cfr;\": [0xd835, 0xdd20],\n    \"chcy;\": 0x447,\n    \"check;\": 0x2713,\n    \"checkmark;\": 0x2713,\n    \"chi;\": 0x3c7,\n    \"cir;\": 0x25cb,\n    \"cirE;\": 0x29c3,\n    \"circ;\": 0x2c6,\n    \"circeq;\": 0x2257,\n    \"circlearrowleft;\": 0x21ba,\n    \"circlearrowright;\": 0x21bb,\n    \"circledR;\": 0xae,\n    \"circledS;\": 0x24c8,\n    \"circledast;\": 0x229b,\n    \"circledcirc;\": 0x229a,\n    \"circleddash;\": 0x229d,\n    \"cire;\": 0x2257,\n    \"cirfnint;\": 0x2a10,\n    \"cirmid;\": 0x2aef,\n    \"cirscir;\": 0x29c2,\n    \"clubs;\": 0x2663,\n    \"clubsuit;\": 0x2663,\n    \"colon;\": 0x3a,\n    \"colone;\": 0x2254,\n    \"coloneq;\": 0x2254,\n    \"comma;\": 0x2c,\n    \"commat;\": 0x40,\n    \"comp;\": 0x2201,\n    \"compfn;\": 0x2218,\n    \"complement;\": 0x2201,\n    \"complexes;\": 0x2102,\n    \"cong;\": 0x2245,\n    \"congdot;\": 0x2a6d,\n    \"conint;\": 0x222e,\n    \"copf;\": [0xd835, 0xdd54],\n    \"coprod;\": 0x2210,\n    \"copy\": 0xa9,\n    \"copy;\": 0xa9,\n    \"copysr;\": 0x2117,\n    \"crarr;\": 0x21b5,\n    \"cross;\": 0x2717,\n    \"cscr;\": [0xd835, 0xdcb8],\n    \"csub;\": 0x2acf,\n    \"csube;\": 0x2ad1,\n    \"csup;\": 0x2ad0,\n    \"csupe;\": 0x2ad2,\n    \"ctdot;\": 0x22ef,\n    \"cudarrl;\": 0x2938,\n    \"cudarrr;\": 0x2935,\n    \"cuepr;\": 0x22de,\n    \"cuesc;\": 0x22df,\n    \"cularr;\": 0x21b6,\n    \"cularrp;\": 0x293d,\n    \"cup;\": 0x222a,\n    \"cupbrcap;\": 0x2a48,\n    \"cupcap;\": 0x2a46,\n    \"cupcup;\": 0x2a4a,\n    \"cupdot;\": 0x228d,\n    \"cupor;\": 0x2a45,\n    \"cups;\": [0x222a, 0xfe00],\n    \"curarr;\": 0x21b7,\n    \"curarrm;\": 0x293c,\n    \"curlyeqprec;\": 0x22de,\n    \"curlyeqsucc;\": 0x22df,\n    \"curlyvee;\": 0x22ce,\n    \"curlywedge;\": 0x22cf,\n    \"curren\": 0xa4,\n    \"curren;\": 0xa4,\n    \"curvearrowleft;\": 0x21b6,\n    \"curvearrowright;\": 0x21b7,\n    \"cuvee;\": 0x22ce,\n    \"cuwed;\": 0x22cf,\n    \"cwconint;\": 0x2232,\n    \"cwint;\": 0x2231,\n    \"cylcty;\": 0x232d,\n    \"dArr;\": 0x21d3,\n    \"dHar;\": 0x2965,\n    \"dagger;\": 0x2020,\n    \"daleth;\": 0x2138,\n    \"darr;\": 0x2193,\n    \"dash;\": 0x2010,\n    \"dashv;\": 0x22a3,\n    \"dbkarow;\": 0x290f,\n    \"dblac;\": 0x2dd,\n    \"dcaron;\": 0x10f,\n    \"dcy;\": 0x434,\n    \"dd;\": 0x2146,\n    \"ddagger;\": 0x2021,\n    \"ddarr;\": 0x21ca,\n    \"ddotseq;\": 0x2a77,\n    \"deg\": 0xb0,\n    \"deg;\": 0xb0,\n    \"delta;\": 0x3b4,\n    \"demptyv;\": 0x29b1,\n    \"dfisht;\": 0x297f,\n    \"dfr;\": [0xd835, 0xdd21],\n    \"dharl;\": 0x21c3,\n    \"dharr;\": 0x21c2,\n    \"diam;\": 0x22c4,\n    \"diamond;\": 0x22c4,\n    \"diamondsuit;\": 0x2666,\n    \"diams;\": 0x2666,\n    \"die;\": 0xa8,\n    \"digamma;\": 0x3dd,\n    \"disin;\": 0x22f2,\n    \"div;\": 0xf7,\n    \"divide\": 0xf7,\n    \"divide;\": 0xf7,\n    \"divideontimes;\": 0x22c7,\n    \"divonx;\": 0x22c7,\n    \"djcy;\": 0x452,\n    \"dlcorn;\": 0x231e,\n    \"dlcrop;\": 0x230d,\n    \"dollar;\": 0x24,\n    \"dopf;\": [0xd835, 0xdd55],\n    \"dot;\": 0x2d9,\n    \"doteq;\": 0x2250,\n    \"doteqdot;\": 0x2251,\n    \"dotminus;\": 0x2238,\n    \"dotplus;\": 0x2214,\n    \"dotsquare;\": 0x22a1,\n    \"doublebarwedge;\": 0x2306,\n    \"downarrow;\": 0x2193,\n    \"downdownarrows;\": 0x21ca,\n    \"downharpoonleft;\": 0x21c3,\n    \"downharpoonright;\": 0x21c2,\n    \"drbkarow;\": 0x2910,\n    \"drcorn;\": 0x231f,\n    \"drcrop;\": 0x230c,\n    \"dscr;\": [0xd835, 0xdcb9],\n    \"dscy;\": 0x455,\n    \"dsol;\": 0x29f6,\n    \"dstrok;\": 0x111,\n    \"dtdot;\": 0x22f1,\n    \"dtri;\": 0x25bf,\n    \"dtrif;\": 0x25be,\n    \"duarr;\": 0x21f5,\n    \"duhar;\": 0x296f,\n    \"dwangle;\": 0x29a6,\n    \"dzcy;\": 0x45f,\n    \"dzigrarr;\": 0x27ff,\n    \"eDDot;\": 0x2a77,\n    \"eDot;\": 0x2251,\n    \"eacute\": 0xe9,\n    \"eacute;\": 0xe9,\n    \"easter;\": 0x2a6e,\n    \"ecaron;\": 0x11b,\n    \"ecir;\": 0x2256,\n    \"ecirc\": 0xea,\n    \"ecirc;\": 0xea,\n    \"ecolon;\": 0x2255,\n    \"ecy;\": 0x44d,\n    \"edot;\": 0x117,\n    \"ee;\": 0x2147,\n    \"efDot;\": 0x2252,\n    \"efr;\": [0xd835, 0xdd22],\n    \"eg;\": 0x2a9a,\n    \"egrave\": 0xe8,\n    \"egrave;\": 0xe8,\n    \"egs;\": 0x2a96,\n    \"egsdot;\": 0x2a98,\n    \"el;\": 0x2a99,\n    \"elinters;\": 0x23e7,\n    \"ell;\": 0x2113,\n    \"els;\": 0x2a95,\n    \"elsdot;\": 0x2a97,\n    \"emacr;\": 0x113,\n    \"empty;\": 0x2205,\n    \"emptyset;\": 0x2205,\n    \"emptyv;\": 0x2205,\n    \"emsp13;\": 0x2004,\n    \"emsp14;\": 0x2005,\n    \"emsp;\": 0x2003,\n    \"eng;\": 0x14b,\n    \"ensp;\": 0x2002,\n    \"eogon;\": 0x119,\n    \"eopf;\": [0xd835, 0xdd56],\n    \"epar;\": 0x22d5,\n    \"eparsl;\": 0x29e3,\n    \"eplus;\": 0x2a71,\n    \"epsi;\": 0x3b5,\n    \"epsilon;\": 0x3b5,\n    \"epsiv;\": 0x3f5,\n    \"eqcirc;\": 0x2256,\n    \"eqcolon;\": 0x2255,\n    \"eqsim;\": 0x2242,\n    \"eqslantgtr;\": 0x2a96,\n    \"eqslantless;\": 0x2a95,\n    \"equals;\": 0x3d,\n    \"equest;\": 0x225f,\n    \"equiv;\": 0x2261,\n    \"equivDD;\": 0x2a78,\n    \"eqvparsl;\": 0x29e5,\n    \"erDot;\": 0x2253,\n    \"erarr;\": 0x2971,\n    \"escr;\": 0x212f,\n    \"esdot;\": 0x2250,\n    \"esim;\": 0x2242,\n    \"eta;\": 0x3b7,\n    \"eth\": 0xf0,\n    \"eth;\": 0xf0,\n    \"euml\": 0xeb,\n    \"euml;\": 0xeb,\n    \"euro;\": 0x20ac,\n    \"excl;\": 0x21,\n    \"exist;\": 0x2203,\n    \"expectation;\": 0x2130,\n    \"exponentiale;\": 0x2147,\n    \"fallingdotseq;\": 0x2252,\n    \"fcy;\": 0x444,\n    \"female;\": 0x2640,\n    \"ffilig;\": 0xfb03,\n    \"fflig;\": 0xfb00,\n    \"ffllig;\": 0xfb04,\n    \"ffr;\": [0xd835, 0xdd23],\n    \"filig;\": 0xfb01,\n    \"fjlig;\": [0x66, 0x6a],\n    \"flat;\": 0x266d,\n    \"fllig;\": 0xfb02,\n    \"fltns;\": 0x25b1,\n    \"fnof;\": 0x192,\n    \"fopf;\": [0xd835, 0xdd57],\n    \"forall;\": 0x2200,\n    \"fork;\": 0x22d4,\n    \"forkv;\": 0x2ad9,\n    \"fpartint;\": 0x2a0d,\n    \"frac12\": 0xbd,\n    \"frac12;\": 0xbd,\n    \"frac13;\": 0x2153,\n    \"frac14\": 0xbc,\n    \"frac14;\": 0xbc,\n    \"frac15;\": 0x2155,\n    \"frac16;\": 0x2159,\n    \"frac18;\": 0x215b,\n    \"frac23;\": 0x2154,\n    \"frac25;\": 0x2156,\n    \"frac34\": 0xbe,\n    \"frac34;\": 0xbe,\n    \"frac35;\": 0x2157,\n    \"frac38;\": 0x215c,\n    \"frac45;\": 0x2158,\n    \"frac56;\": 0x215a,\n    \"frac58;\": 0x215d,\n    \"frac78;\": 0x215e,\n    \"frasl;\": 0x2044,\n    \"frown;\": 0x2322,\n    \"fscr;\": [0xd835, 0xdcbb],\n    \"gE;\": 0x2267,\n    \"gEl;\": 0x2a8c,\n    \"gacute;\": 0x1f5,\n    \"gamma;\": 0x3b3,\n    \"gammad;\": 0x3dd,\n    \"gap;\": 0x2a86,\n    \"gbreve;\": 0x11f,\n    \"gcirc;\": 0x11d,\n    \"gcy;\": 0x433,\n    \"gdot;\": 0x121,\n    \"ge;\": 0x2265,\n    \"gel;\": 0x22db,\n    \"geq;\": 0x2265,\n    \"geqq;\": 0x2267,\n    \"geqslant;\": 0x2a7e,\n    \"ges;\": 0x2a7e,\n    \"gescc;\": 0x2aa9,\n    \"gesdot;\": 0x2a80,\n    \"gesdoto;\": 0x2a82,\n    \"gesdotol;\": 0x2a84,\n    \"gesl;\": [0x22db, 0xfe00],\n    \"gesles;\": 0x2a94,\n    \"gfr;\": [0xd835, 0xdd24],\n    \"gg;\": 0x226b,\n    \"ggg;\": 0x22d9,\n    \"gimel;\": 0x2137,\n    \"gjcy;\": 0x453,\n    \"gl;\": 0x2277,\n    \"glE;\": 0x2a92,\n    \"gla;\": 0x2aa5,\n    \"glj;\": 0x2aa4,\n    \"gnE;\": 0x2269,\n    \"gnap;\": 0x2a8a,\n    \"gnapprox;\": 0x2a8a,\n    \"gne;\": 0x2a88,\n    \"gneq;\": 0x2a88,\n    \"gneqq;\": 0x2269,\n    \"gnsim;\": 0x22e7,\n    \"gopf;\": [0xd835, 0xdd58],\n    \"grave;\": 0x60,\n    \"gscr;\": 0x210a,\n    \"gsim;\": 0x2273,\n    \"gsime;\": 0x2a8e,\n    \"gsiml;\": 0x2a90,\n    \"gt\": 0x3e,\n    \"gt;\": 0x3e,\n    \"gtcc;\": 0x2aa7,\n    \"gtcir;\": 0x2a7a,\n    \"gtdot;\": 0x22d7,\n    \"gtlPar;\": 0x2995,\n    \"gtquest;\": 0x2a7c,\n    \"gtrapprox;\": 0x2a86,\n    \"gtrarr;\": 0x2978,\n    \"gtrdot;\": 0x22d7,\n    \"gtreqless;\": 0x22db,\n    \"gtreqqless;\": 0x2a8c,\n    \"gtrless;\": 0x2277,\n    \"gtrsim;\": 0x2273,\n    \"gvertneqq;\": [0x2269, 0xfe00],\n    \"gvnE;\": [0x2269, 0xfe00],\n    \"hArr;\": 0x21d4,\n    \"hairsp;\": 0x200a,\n    \"half;\": 0xbd,\n    \"hamilt;\": 0x210b,\n    \"hardcy;\": 0x44a,\n    \"harr;\": 0x2194,\n    \"harrcir;\": 0x2948,\n    \"harrw;\": 0x21ad,\n    \"hbar;\": 0x210f,\n    \"hcirc;\": 0x125,\n    \"hearts;\": 0x2665,\n    \"heartsuit;\": 0x2665,\n    \"hellip;\": 0x2026,\n    \"hercon;\": 0x22b9,\n    \"hfr;\": [0xd835, 0xdd25],\n    \"hksearow;\": 0x2925,\n    \"hkswarow;\": 0x2926,\n    \"hoarr;\": 0x21ff,\n    \"homtht;\": 0x223b,\n    \"hookleftarrow;\": 0x21a9,\n    \"hookrightarrow;\": 0x21aa,\n    \"hopf;\": [0xd835, 0xdd59],\n    \"horbar;\": 0x2015,\n    \"hscr;\": [0xd835, 0xdcbd],\n    \"hslash;\": 0x210f,\n    \"hstrok;\": 0x127,\n    \"hybull;\": 0x2043,\n    \"hyphen;\": 0x2010,\n    \"iacute\": 0xed,\n    \"iacute;\": 0xed,\n    \"ic;\": 0x2063,\n    \"icirc\": 0xee,\n    \"icirc;\": 0xee,\n    \"icy;\": 0x438,\n    \"iecy;\": 0x435,\n    \"iexcl\": 0xa1,\n    \"iexcl;\": 0xa1,\n    \"iff;\": 0x21d4,\n    \"ifr;\": [0xd835, 0xdd26],\n    \"igrave\": 0xec,\n    \"igrave;\": 0xec,\n    \"ii;\": 0x2148,\n    \"iiiint;\": 0x2a0c,\n    \"iiint;\": 0x222d,\n    \"iinfin;\": 0x29dc,\n    \"iiota;\": 0x2129,\n    \"ijlig;\": 0x133,\n    \"imacr;\": 0x12b,\n    \"image;\": 0x2111,\n    \"imagline;\": 0x2110,\n    \"imagpart;\": 0x2111,\n    \"imath;\": 0x131,\n    \"imof;\": 0x22b7,\n    \"imped;\": 0x1b5,\n    \"in;\": 0x2208,\n    \"incare;\": 0x2105,\n    \"infin;\": 0x221e,\n    \"infintie;\": 0x29dd,\n    \"inodot;\": 0x131,\n    \"int;\": 0x222b,\n    \"intcal;\": 0x22ba,\n    \"integers;\": 0x2124,\n    \"intercal;\": 0x22ba,\n    \"intlarhk;\": 0x2a17,\n    \"intprod;\": 0x2a3c,\n    \"iocy;\": 0x451,\n    \"iogon;\": 0x12f,\n    \"iopf;\": [0xd835, 0xdd5a],\n    \"iota;\": 0x3b9,\n    \"iprod;\": 0x2a3c,\n    \"iquest\": 0xbf,\n    \"iquest;\": 0xbf,\n    \"iscr;\": [0xd835, 0xdcbe],\n    \"isin;\": 0x2208,\n    \"isinE;\": 0x22f9,\n    \"isindot;\": 0x22f5,\n    \"isins;\": 0x22f4,\n    \"isinsv;\": 0x22f3,\n    \"isinv;\": 0x2208,\n    \"it;\": 0x2062,\n    \"itilde;\": 0x129,\n    \"iukcy;\": 0x456,\n    \"iuml\": 0xef,\n    \"iuml;\": 0xef,\n    \"jcirc;\": 0x135,\n    \"jcy;\": 0x439,\n    \"jfr;\": [0xd835, 0xdd27],\n    \"jmath;\": 0x237,\n    \"jopf;\": [0xd835, 0xdd5b],\n    \"jscr;\": [0xd835, 0xdcbf],\n    \"jsercy;\": 0x458,\n    \"jukcy;\": 0x454,\n    \"kappa;\": 0x3ba,\n    \"kappav;\": 0x3f0,\n    \"kcedil;\": 0x137,\n    \"kcy;\": 0x43a,\n    \"kfr;\": [0xd835, 0xdd28],\n    \"kgreen;\": 0x138,\n    \"khcy;\": 0x445,\n    \"kjcy;\": 0x45c,\n    \"kopf;\": [0xd835, 0xdd5c],\n    \"kscr;\": [0xd835, 0xdcc0],\n    \"lAarr;\": 0x21da,\n    \"lArr;\": 0x21d0,\n    \"lAtail;\": 0x291b,\n    \"lBarr;\": 0x290e,\n    \"lE;\": 0x2266,\n    \"lEg;\": 0x2a8b,\n    \"lHar;\": 0x2962,\n    \"lacute;\": 0x13a,\n    \"laemptyv;\": 0x29b4,\n    \"lagran;\": 0x2112,\n    \"lambda;\": 0x3bb,\n    \"lang;\": 0x27e8,\n    \"langd;\": 0x2991,\n    \"langle;\": 0x27e8,\n    \"lap;\": 0x2a85,\n    \"laquo\": 0xab,\n    \"laquo;\": 0xab,\n    \"larr;\": 0x2190,\n    \"larrb;\": 0x21e4,\n    \"larrbfs;\": 0x291f,\n    \"larrfs;\": 0x291d,\n    \"larrhk;\": 0x21a9,\n    \"larrlp;\": 0x21ab,\n    \"larrpl;\": 0x2939,\n    \"larrsim;\": 0x2973,\n    \"larrtl;\": 0x21a2,\n    \"lat;\": 0x2aab,\n    \"latail;\": 0x2919,\n    \"late;\": 0x2aad,\n    \"lates;\": [0x2aad, 0xfe00],\n    \"lbarr;\": 0x290c,\n    \"lbbrk;\": 0x2772,\n    \"lbrace;\": 0x7b,\n    \"lbrack;\": 0x5b,\n    \"lbrke;\": 0x298b,\n    \"lbrksld;\": 0x298f,\n    \"lbrkslu;\": 0x298d,\n    \"lcaron;\": 0x13e,\n    \"lcedil;\": 0x13c,\n    \"lceil;\": 0x2308,\n    \"lcub;\": 0x7b,\n    \"lcy;\": 0x43b,\n    \"ldca;\": 0x2936,\n    \"ldquo;\": 0x201c,\n    \"ldquor;\": 0x201e,\n    \"ldrdhar;\": 0x2967,\n    \"ldrushar;\": 0x294b,\n    \"ldsh;\": 0x21b2,\n    \"le;\": 0x2264,\n    \"leftarrow;\": 0x2190,\n    \"leftarrowtail;\": 0x21a2,\n    \"leftharpoondown;\": 0x21bd,\n    \"leftharpoonup;\": 0x21bc,\n    \"leftleftarrows;\": 0x21c7,\n    \"leftrightarrow;\": 0x2194,\n    \"leftrightarrows;\": 0x21c6,\n    \"leftrightharpoons;\": 0x21cb,\n    \"leftrightsquigarrow;\": 0x21ad,\n    \"leftthreetimes;\": 0x22cb,\n    \"leg;\": 0x22da,\n    \"leq;\": 0x2264,\n    \"leqq;\": 0x2266,\n    \"leqslant;\": 0x2a7d,\n    \"les;\": 0x2a7d,\n    \"lescc;\": 0x2aa8,\n    \"lesdot;\": 0x2a7f,\n    \"lesdoto;\": 0x2a81,\n    \"lesdotor;\": 0x2a83,\n    \"lesg;\": [0x22da, 0xfe00],\n    \"lesges;\": 0x2a93,\n    \"lessapprox;\": 0x2a85,\n    \"lessdot;\": 0x22d6,\n    \"lesseqgtr;\": 0x22da,\n    \"lesseqqgtr;\": 0x2a8b,\n    \"lessgtr;\": 0x2276,\n    \"lesssim;\": 0x2272,\n    \"lfisht;\": 0x297c,\n    \"lfloor;\": 0x230a,\n    \"lfr;\": [0xd835, 0xdd29],\n    \"lg;\": 0x2276,\n    \"lgE;\": 0x2a91,\n    \"lhard;\": 0x21bd,\n    \"lharu;\": 0x21bc,\n    \"lharul;\": 0x296a,\n    \"lhblk;\": 0x2584,\n    \"ljcy;\": 0x459,\n    \"ll;\": 0x226a,\n    \"llarr;\": 0x21c7,\n    \"llcorner;\": 0x231e,\n    \"llhard;\": 0x296b,\n    \"lltri;\": 0x25fa,\n    \"lmidot;\": 0x140,\n    \"lmoust;\": 0x23b0,\n    \"lmoustache;\": 0x23b0,\n    \"lnE;\": 0x2268,\n    \"lnap;\": 0x2a89,\n    \"lnapprox;\": 0x2a89,\n    \"lne;\": 0x2a87,\n    \"lneq;\": 0x2a87,\n    \"lneqq;\": 0x2268,\n    \"lnsim;\": 0x22e6,\n    \"loang;\": 0x27ec,\n    \"loarr;\": 0x21fd,\n    \"lobrk;\": 0x27e6,\n    \"longleftarrow;\": 0x27f5,\n    \"longleftrightarrow;\": 0x27f7,\n    \"longmapsto;\": 0x27fc,\n    \"longrightarrow;\": 0x27f6,\n    \"looparrowleft;\": 0x21ab,\n    \"looparrowright;\": 0x21ac,\n    \"lopar;\": 0x2985,\n    \"lopf;\": [0xd835, 0xdd5d],\n    \"loplus;\": 0x2a2d,\n    \"lotimes;\": 0x2a34,\n    \"lowast;\": 0x2217,\n    \"lowbar;\": 0x5f,\n    \"loz;\": 0x25ca,\n    \"lozenge;\": 0x25ca,\n    \"lozf;\": 0x29eb,\n    \"lpar;\": 0x28,\n    \"lparlt;\": 0x2993,\n    \"lrarr;\": 0x21c6,\n    \"lrcorner;\": 0x231f,\n    \"lrhar;\": 0x21cb,\n    \"lrhard;\": 0x296d,\n    \"lrm;\": 0x200e,\n    \"lrtri;\": 0x22bf,\n    \"lsaquo;\": 0x2039,\n    \"lscr;\": [0xd835, 0xdcc1],\n    \"lsh;\": 0x21b0,\n    \"lsim;\": 0x2272,\n    \"lsime;\": 0x2a8d,\n    \"lsimg;\": 0x2a8f,\n    \"lsqb;\": 0x5b,\n    \"lsquo;\": 0x2018,\n    \"lsquor;\": 0x201a,\n    \"lstrok;\": 0x142,\n    \"lt\": 0x3c,\n    \"lt;\": 0x3c,\n    \"ltcc;\": 0x2aa6,\n    \"ltcir;\": 0x2a79,\n    \"ltdot;\": 0x22d6,\n    \"lthree;\": 0x22cb,\n    \"ltimes;\": 0x22c9,\n    \"ltlarr;\": 0x2976,\n    \"ltquest;\": 0x2a7b,\n    \"ltrPar;\": 0x2996,\n    \"ltri;\": 0x25c3,\n    \"ltrie;\": 0x22b4,\n    \"ltrif;\": 0x25c2,\n    \"lurdshar;\": 0x294a,\n    \"luruhar;\": 0x2966,\n    \"lvertneqq;\": [0x2268, 0xfe00],\n    \"lvnE;\": [0x2268, 0xfe00],\n    \"mDDot;\": 0x223a,\n    \"macr\": 0xaf,\n    \"macr;\": 0xaf,\n    \"male;\": 0x2642,\n    \"malt;\": 0x2720,\n    \"maltese;\": 0x2720,\n    \"map;\": 0x21a6,\n    \"mapsto;\": 0x21a6,\n    \"mapstodown;\": 0x21a7,\n    \"mapstoleft;\": 0x21a4,\n    \"mapstoup;\": 0x21a5,\n    \"marker;\": 0x25ae,\n    \"mcomma;\": 0x2a29,\n    \"mcy;\": 0x43c,\n    \"mdash;\": 0x2014,\n    \"measuredangle;\": 0x2221,\n    \"mfr;\": [0xd835, 0xdd2a],\n    \"mho;\": 0x2127,\n    \"micro\": 0xb5,\n    \"micro;\": 0xb5,\n    \"mid;\": 0x2223,\n    \"midast;\": 0x2a,\n    \"midcir;\": 0x2af0,\n    \"middot\": 0xb7,\n    \"middot;\": 0xb7,\n    \"minus;\": 0x2212,\n    \"minusb;\": 0x229f,\n    \"minusd;\": 0x2238,\n    \"minusdu;\": 0x2a2a,\n    \"mlcp;\": 0x2adb,\n    \"mldr;\": 0x2026,\n    \"mnplus;\": 0x2213,\n    \"models;\": 0x22a7,\n    \"mopf;\": [0xd835, 0xdd5e],\n    \"mp;\": 0x2213,\n    \"mscr;\": [0xd835, 0xdcc2],\n    \"mstpos;\": 0x223e,\n    \"mu;\": 0x3bc,\n    \"multimap;\": 0x22b8,\n    \"mumap;\": 0x22b8,\n    \"nGg;\": [0x22d9, 0x338],\n    \"nGt;\": [0x226b, 0x20d2],\n    \"nGtv;\": [0x226b, 0x338],\n    \"nLeftarrow;\": 0x21cd,\n    \"nLeftrightarrow;\": 0x21ce,\n    \"nLl;\": [0x22d8, 0x338],\n    \"nLt;\": [0x226a, 0x20d2],\n    \"nLtv;\": [0x226a, 0x338],\n    \"nRightarrow;\": 0x21cf,\n    \"nVDash;\": 0x22af,\n    \"nVdash;\": 0x22ae,\n    \"nabla;\": 0x2207,\n    \"nacute;\": 0x144,\n    \"nang;\": [0x2220, 0x20d2],\n    \"nap;\": 0x2249,\n    \"napE;\": [0x2a70, 0x338],\n    \"napid;\": [0x224b, 0x338],\n    \"napos;\": 0x149,\n    \"napprox;\": 0x2249,\n    \"natur;\": 0x266e,\n    \"natural;\": 0x266e,\n    \"naturals;\": 0x2115,\n    \"nbsp\": 0xa0,\n    \"nbsp;\": 0xa0,\n    \"nbump;\": [0x224e, 0x338],\n    \"nbumpe;\": [0x224f, 0x338],\n    \"ncap;\": 0x2a43,\n    \"ncaron;\": 0x148,\n    \"ncedil;\": 0x146,\n    \"ncong;\": 0x2247,\n    \"ncongdot;\": [0x2a6d, 0x338],\n    \"ncup;\": 0x2a42,\n    \"ncy;\": 0x43d,\n    \"ndash;\": 0x2013,\n    \"ne;\": 0x2260,\n    \"neArr;\": 0x21d7,\n    \"nearhk;\": 0x2924,\n    \"nearr;\": 0x2197,\n    \"nearrow;\": 0x2197,\n    \"nedot;\": [0x2250, 0x338],\n    \"nequiv;\": 0x2262,\n    \"nesear;\": 0x2928,\n    \"nesim;\": [0x2242, 0x338],\n    \"nexist;\": 0x2204,\n    \"nexists;\": 0x2204,\n    \"nfr;\": [0xd835, 0xdd2b],\n    \"ngE;\": [0x2267, 0x338],\n    \"nge;\": 0x2271,\n    \"ngeq;\": 0x2271,\n    \"ngeqq;\": [0x2267, 0x338],\n    \"ngeqslant;\": [0x2a7e, 0x338],\n    \"nges;\": [0x2a7e, 0x338],\n    \"ngsim;\": 0x2275,\n    \"ngt;\": 0x226f,\n    \"ngtr;\": 0x226f,\n    \"nhArr;\": 0x21ce,\n    \"nharr;\": 0x21ae,\n    \"nhpar;\": 0x2af2,\n    \"ni;\": 0x220b,\n    \"nis;\": 0x22fc,\n    \"nisd;\": 0x22fa,\n    \"niv;\": 0x220b,\n    \"njcy;\": 0x45a,\n    \"nlArr;\": 0x21cd,\n    \"nlE;\": [0x2266, 0x338],\n    \"nlarr;\": 0x219a,\n    \"nldr;\": 0x2025,\n    \"nle;\": 0x2270,\n    \"nleftarrow;\": 0x219a,\n    \"nleftrightarrow;\": 0x21ae,\n    \"nleq;\": 0x2270,\n    \"nleqq;\": [0x2266, 0x338],\n    \"nleqslant;\": [0x2a7d, 0x338],\n    \"nles;\": [0x2a7d, 0x338],\n    \"nless;\": 0x226e,\n    \"nlsim;\": 0x2274,\n    \"nlt;\": 0x226e,\n    \"nltri;\": 0x22ea,\n    \"nltrie;\": 0x22ec,\n    \"nmid;\": 0x2224,\n    \"nopf;\": [0xd835, 0xdd5f],\n    \"not\": 0xac,\n    \"not;\": 0xac,\n    \"notin;\": 0x2209,\n    \"notinE;\": [0x22f9, 0x338],\n    \"notindot;\": [0x22f5, 0x338],\n    \"notinva;\": 0x2209,\n    \"notinvb;\": 0x22f7,\n    \"notinvc;\": 0x22f6,\n    \"notni;\": 0x220c,\n    \"notniva;\": 0x220c,\n    \"notnivb;\": 0x22fe,\n    \"notnivc;\": 0x22fd,\n    \"npar;\": 0x2226,\n    \"nparallel;\": 0x2226,\n    \"nparsl;\": [0x2afd, 0x20e5],\n    \"npart;\": [0x2202, 0x338],\n    \"npolint;\": 0x2a14,\n    \"npr;\": 0x2280,\n    \"nprcue;\": 0x22e0,\n    \"npre;\": [0x2aaf, 0x338],\n    \"nprec;\": 0x2280,\n    \"npreceq;\": [0x2aaf, 0x338],\n    \"nrArr;\": 0x21cf,\n    \"nrarr;\": 0x219b,\n    \"nrarrc;\": [0x2933, 0x338],\n    \"nrarrw;\": [0x219d, 0x338],\n    \"nrightarrow;\": 0x219b,\n    \"nrtri;\": 0x22eb,\n    \"nrtrie;\": 0x22ed,\n    \"nsc;\": 0x2281,\n    \"nsccue;\": 0x22e1,\n    \"nsce;\": [0x2ab0, 0x338],\n    \"nscr;\": [0xd835, 0xdcc3],\n    \"nshortmid;\": 0x2224,\n    \"nshortparallel;\": 0x2226,\n    \"nsim;\": 0x2241,\n    \"nsime;\": 0x2244,\n    \"nsimeq;\": 0x2244,\n    \"nsmid;\": 0x2224,\n    \"nspar;\": 0x2226,\n    \"nsqsube;\": 0x22e2,\n    \"nsqsupe;\": 0x22e3,\n    \"nsub;\": 0x2284,\n    \"nsubE;\": [0x2ac5, 0x338],\n    \"nsube;\": 0x2288,\n    \"nsubset;\": [0x2282, 0x20d2],\n    \"nsubseteq;\": 0x2288,\n    \"nsubseteqq;\": [0x2ac5, 0x338],\n    \"nsucc;\": 0x2281,\n    \"nsucceq;\": [0x2ab0, 0x338],\n    \"nsup;\": 0x2285,\n    \"nsupE;\": [0x2ac6, 0x338],\n    \"nsupe;\": 0x2289,\n    \"nsupset;\": [0x2283, 0x20d2],\n    \"nsupseteq;\": 0x2289,\n    \"nsupseteqq;\": [0x2ac6, 0x338],\n    \"ntgl;\": 0x2279,\n    \"ntilde\": 0xf1,\n    \"ntilde;\": 0xf1,\n    \"ntlg;\": 0x2278,\n    \"ntriangleleft;\": 0x22ea,\n    \"ntrianglelefteq;\": 0x22ec,\n    \"ntriangleright;\": 0x22eb,\n    \"ntrianglerighteq;\": 0x22ed,\n    \"nu;\": 0x3bd,\n    \"num;\": 0x23,\n    \"numero;\": 0x2116,\n    \"numsp;\": 0x2007,\n    \"nvDash;\": 0x22ad,\n    \"nvHarr;\": 0x2904,\n    \"nvap;\": [0x224d, 0x20d2],\n    \"nvdash;\": 0x22ac,\n    \"nvge;\": [0x2265, 0x20d2],\n    \"nvgt;\": [0x3e, 0x20d2],\n    \"nvinfin;\": 0x29de,\n    \"nvlArr;\": 0x2902,\n    \"nvle;\": [0x2264, 0x20d2],\n    \"nvlt;\": [0x3c, 0x20d2],\n    \"nvltrie;\": [0x22b4, 0x20d2],\n    \"nvrArr;\": 0x2903,\n    \"nvrtrie;\": [0x22b5, 0x20d2],\n    \"nvsim;\": [0x223c, 0x20d2],\n    \"nwArr;\": 0x21d6,\n    \"nwarhk;\": 0x2923,\n    \"nwarr;\": 0x2196,\n    \"nwarrow;\": 0x2196,\n    \"nwnear;\": 0x2927,\n    \"oS;\": 0x24c8,\n    \"oacute\": 0xf3,\n    \"oacute;\": 0xf3,\n    \"oast;\": 0x229b,\n    \"ocir;\": 0x229a,\n    \"ocirc\": 0xf4,\n    \"ocirc;\": 0xf4,\n    \"ocy;\": 0x43e,\n    \"odash;\": 0x229d,\n    \"odblac;\": 0x151,\n    \"odiv;\": 0x2a38,\n    \"odot;\": 0x2299,\n    \"odsold;\": 0x29bc,\n    \"oelig;\": 0x153,\n    \"ofcir;\": 0x29bf,\n    \"ofr;\": [0xd835, 0xdd2c],\n    \"ogon;\": 0x2db,\n    \"ograve\": 0xf2,\n    \"ograve;\": 0xf2,\n    \"ogt;\": 0x29c1,\n    \"ohbar;\": 0x29b5,\n    \"ohm;\": 0x3a9,\n    \"oint;\": 0x222e,\n    \"olarr;\": 0x21ba,\n    \"olcir;\": 0x29be,\n    \"olcross;\": 0x29bb,\n    \"oline;\": 0x203e,\n    \"olt;\": 0x29c0,\n    \"omacr;\": 0x14d,\n    \"omega;\": 0x3c9,\n    \"omicron;\": 0x3bf,\n    \"omid;\": 0x29b6,\n    \"ominus;\": 0x2296,\n    \"oopf;\": [0xd835, 0xdd60],\n    \"opar;\": 0x29b7,\n    \"operp;\": 0x29b9,\n    \"oplus;\": 0x2295,\n    \"or;\": 0x2228,\n    \"orarr;\": 0x21bb,\n    \"ord;\": 0x2a5d,\n    \"order;\": 0x2134,\n    \"orderof;\": 0x2134,\n    \"ordf\": 0xaa,\n    \"ordf;\": 0xaa,\n    \"ordm\": 0xba,\n    \"ordm;\": 0xba,\n    \"origof;\": 0x22b6,\n    \"oror;\": 0x2a56,\n    \"orslope;\": 0x2a57,\n    \"orv;\": 0x2a5b,\n    \"oscr;\": 0x2134,\n    \"oslash\": 0xf8,\n    \"oslash;\": 0xf8,\n    \"osol;\": 0x2298,\n    \"otilde\": 0xf5,\n    \"otilde;\": 0xf5,\n    \"otimes;\": 0x2297,\n    \"otimesas;\": 0x2a36,\n    \"ouml\": 0xf6,\n    \"ouml;\": 0xf6,\n    \"ovbar;\": 0x233d,\n    \"par;\": 0x2225,\n    \"para\": 0xb6,\n    \"para;\": 0xb6,\n    \"parallel;\": 0x2225,\n    \"parsim;\": 0x2af3,\n    \"parsl;\": 0x2afd,\n    \"part;\": 0x2202,\n    \"pcy;\": 0x43f,\n    \"percnt;\": 0x25,\n    \"period;\": 0x2e,\n    \"permil;\": 0x2030,\n    \"perp;\": 0x22a5,\n    \"pertenk;\": 0x2031,\n    \"pfr;\": [0xd835, 0xdd2d],\n    \"phi;\": 0x3c6,\n    \"phiv;\": 0x3d5,\n    \"phmmat;\": 0x2133,\n    \"phone;\": 0x260e,\n    \"pi;\": 0x3c0,\n    \"pitchfork;\": 0x22d4,\n    \"piv;\": 0x3d6,\n    \"planck;\": 0x210f,\n    \"planckh;\": 0x210e,\n    \"plankv;\": 0x210f,\n    \"plus;\": 0x2b,\n    \"plusacir;\": 0x2a23,\n    \"plusb;\": 0x229e,\n    \"pluscir;\": 0x2a22,\n    \"plusdo;\": 0x2214,\n    \"plusdu;\": 0x2a25,\n    \"pluse;\": 0x2a72,\n    \"plusmn\": 0xb1,\n    \"plusmn;\": 0xb1,\n    \"plussim;\": 0x2a26,\n    \"plustwo;\": 0x2a27,\n    \"pm;\": 0xb1,\n    \"pointint;\": 0x2a15,\n    \"popf;\": [0xd835, 0xdd61],\n    \"pound\": 0xa3,\n    \"pound;\": 0xa3,\n    \"pr;\": 0x227a,\n    \"prE;\": 0x2ab3,\n    \"prap;\": 0x2ab7,\n    \"prcue;\": 0x227c,\n    \"pre;\": 0x2aaf,\n    \"prec;\": 0x227a,\n    \"precapprox;\": 0x2ab7,\n    \"preccurlyeq;\": 0x227c,\n    \"preceq;\": 0x2aaf,\n    \"precnapprox;\": 0x2ab9,\n    \"precneqq;\": 0x2ab5,\n    \"precnsim;\": 0x22e8,\n    \"precsim;\": 0x227e,\n    \"prime;\": 0x2032,\n    \"primes;\": 0x2119,\n    \"prnE;\": 0x2ab5,\n    \"prnap;\": 0x2ab9,\n    \"prnsim;\": 0x22e8,\n    \"prod;\": 0x220f,\n    \"profalar;\": 0x232e,\n    \"profline;\": 0x2312,\n    \"profsurf;\": 0x2313,\n    \"prop;\": 0x221d,\n    \"propto;\": 0x221d,\n    \"prsim;\": 0x227e,\n    \"prurel;\": 0x22b0,\n    \"pscr;\": [0xd835, 0xdcc5],\n    \"psi;\": 0x3c8,\n    \"puncsp;\": 0x2008,\n    \"qfr;\": [0xd835, 0xdd2e],\n    \"qint;\": 0x2a0c,\n    \"qopf;\": [0xd835, 0xdd62],\n    \"qprime;\": 0x2057,\n    \"qscr;\": [0xd835, 0xdcc6],\n    \"quaternions;\": 0x210d,\n    \"quatint;\": 0x2a16,\n    \"quest;\": 0x3f,\n    \"questeq;\": 0x225f,\n    \"quot\": 0x22,\n    \"quot;\": 0x22,\n    \"rAarr;\": 0x21db,\n    \"rArr;\": 0x21d2,\n    \"rAtail;\": 0x291c,\n    \"rBarr;\": 0x290f,\n    \"rHar;\": 0x2964,\n    \"race;\": [0x223d, 0x331],\n    \"racute;\": 0x155,\n    \"radic;\": 0x221a,\n    \"raemptyv;\": 0x29b3,\n    \"rang;\": 0x27e9,\n    \"rangd;\": 0x2992,\n    \"range;\": 0x29a5,\n    \"rangle;\": 0x27e9,\n    \"raquo\": 0xbb,\n    \"raquo;\": 0xbb,\n    \"rarr;\": 0x2192,\n    \"rarrap;\": 0x2975,\n    \"rarrb;\": 0x21e5,\n    \"rarrbfs;\": 0x2920,\n    \"rarrc;\": 0x2933,\n    \"rarrfs;\": 0x291e,\n    \"rarrhk;\": 0x21aa,\n    \"rarrlp;\": 0x21ac,\n    \"rarrpl;\": 0x2945,\n    \"rarrsim;\": 0x2974,\n    \"rarrtl;\": 0x21a3,\n    \"rarrw;\": 0x219d,\n    \"ratail;\": 0x291a,\n    \"ratio;\": 0x2236,\n    \"rationals;\": 0x211a,\n    \"rbarr;\": 0x290d,\n    \"rbbrk;\": 0x2773,\n    \"rbrace;\": 0x7d,\n    \"rbrack;\": 0x5d,\n    \"rbrke;\": 0x298c,\n    \"rbrksld;\": 0x298e,\n    \"rbrkslu;\": 0x2990,\n    \"rcaron;\": 0x159,\n    \"rcedil;\": 0x157,\n    \"rceil;\": 0x2309,\n    \"rcub;\": 0x7d,\n    \"rcy;\": 0x440,\n    \"rdca;\": 0x2937,\n    \"rdldhar;\": 0x2969,\n    \"rdquo;\": 0x201d,\n    \"rdquor;\": 0x201d,\n    \"rdsh;\": 0x21b3,\n    \"real;\": 0x211c,\n    \"realine;\": 0x211b,\n    \"realpart;\": 0x211c,\n    \"reals;\": 0x211d,\n    \"rect;\": 0x25ad,\n    \"reg\": 0xae,\n    \"reg;\": 0xae,\n    \"rfisht;\": 0x297d,\n    \"rfloor;\": 0x230b,\n    \"rfr;\": [0xd835, 0xdd2f],\n    \"rhard;\": 0x21c1,\n    \"rharu;\": 0x21c0,\n    \"rharul;\": 0x296c,\n    \"rho;\": 0x3c1,\n    \"rhov;\": 0x3f1,\n    \"rightarrow;\": 0x2192,\n    \"rightarrowtail;\": 0x21a3,\n    \"rightharpoondown;\": 0x21c1,\n    \"rightharpoonup;\": 0x21c0,\n    \"rightleftarrows;\": 0x21c4,\n    \"rightleftharpoons;\": 0x21cc,\n    \"rightrightarrows;\": 0x21c9,\n    \"rightsquigarrow;\": 0x219d,\n    \"rightthreetimes;\": 0x22cc,\n    \"ring;\": 0x2da,\n    \"risingdotseq;\": 0x2253,\n    \"rlarr;\": 0x21c4,\n    \"rlhar;\": 0x21cc,\n    \"rlm;\": 0x200f,\n    \"rmoust;\": 0x23b1,\n    \"rmoustache;\": 0x23b1,\n    \"rnmid;\": 0x2aee,\n    \"roang;\": 0x27ed,\n    \"roarr;\": 0x21fe,\n    \"robrk;\": 0x27e7,\n    \"ropar;\": 0x2986,\n    \"ropf;\": [0xd835, 0xdd63],\n    \"roplus;\": 0x2a2e,\n    \"rotimes;\": 0x2a35,\n    \"rpar;\": 0x29,\n    \"rpargt;\": 0x2994,\n    \"rppolint;\": 0x2a12,\n    \"rrarr;\": 0x21c9,\n    \"rsaquo;\": 0x203a,\n    \"rscr;\": [0xd835, 0xdcc7],\n    \"rsh;\": 0x21b1,\n    \"rsqb;\": 0x5d,\n    \"rsquo;\": 0x2019,\n    \"rsquor;\": 0x2019,\n    \"rthree;\": 0x22cc,\n    \"rtimes;\": 0x22ca,\n    \"rtri;\": 0x25b9,\n    \"rtrie;\": 0x22b5,\n    \"rtrif;\": 0x25b8,\n    \"rtriltri;\": 0x29ce,\n    \"ruluhar;\": 0x2968,\n    \"rx;\": 0x211e,\n    \"sacute;\": 0x15b,\n    \"sbquo;\": 0x201a,\n    \"sc;\": 0x227b,\n    \"scE;\": 0x2ab4,\n    \"scap;\": 0x2ab8,\n    \"scaron;\": 0x161,\n    \"sccue;\": 0x227d,\n    \"sce;\": 0x2ab0,\n    \"scedil;\": 0x15f,\n    \"scirc;\": 0x15d,\n    \"scnE;\": 0x2ab6,\n    \"scnap;\": 0x2aba,\n    \"scnsim;\": 0x22e9,\n    \"scpolint;\": 0x2a13,\n    \"scsim;\": 0x227f,\n    \"scy;\": 0x441,\n    \"sdot;\": 0x22c5,\n    \"sdotb;\": 0x22a1,\n    \"sdote;\": 0x2a66,\n    \"seArr;\": 0x21d8,\n    \"searhk;\": 0x2925,\n    \"searr;\": 0x2198,\n    \"searrow;\": 0x2198,\n    \"sect\": 0xa7,\n    \"sect;\": 0xa7,\n    \"semi;\": 0x3b,\n    \"seswar;\": 0x2929,\n    \"setminus;\": 0x2216,\n    \"setmn;\": 0x2216,\n    \"sext;\": 0x2736,\n    \"sfr;\": [0xd835, 0xdd30],\n    \"sfrown;\": 0x2322,\n    \"sharp;\": 0x266f,\n    \"shchcy;\": 0x449,\n    \"shcy;\": 0x448,\n    \"shortmid;\": 0x2223,\n    \"shortparallel;\": 0x2225,\n    \"shy\": 0xad,\n    \"shy;\": 0xad,\n    \"sigma;\": 0x3c3,\n    \"sigmaf;\": 0x3c2,\n    \"sigmav;\": 0x3c2,\n    \"sim;\": 0x223c,\n    \"simdot;\": 0x2a6a,\n    \"sime;\": 0x2243,\n    \"simeq;\": 0x2243,\n    \"simg;\": 0x2a9e,\n    \"simgE;\": 0x2aa0,\n    \"siml;\": 0x2a9d,\n    \"simlE;\": 0x2a9f,\n    \"simne;\": 0x2246,\n    \"simplus;\": 0x2a24,\n    \"simrarr;\": 0x2972,\n    \"slarr;\": 0x2190,\n    \"smallsetminus;\": 0x2216,\n    \"smashp;\": 0x2a33,\n    \"smeparsl;\": 0x29e4,\n    \"smid;\": 0x2223,\n    \"smile;\": 0x2323,\n    \"smt;\": 0x2aaa,\n    \"smte;\": 0x2aac,\n    \"smtes;\": [0x2aac, 0xfe00],\n    \"softcy;\": 0x44c,\n    \"sol;\": 0x2f,\n    \"solb;\": 0x29c4,\n    \"solbar;\": 0x233f,\n    \"sopf;\": [0xd835, 0xdd64],\n    \"spades;\": 0x2660,\n    \"spadesuit;\": 0x2660,\n    \"spar;\": 0x2225,\n    \"sqcap;\": 0x2293,\n    \"sqcaps;\": [0x2293, 0xfe00],\n    \"sqcup;\": 0x2294,\n    \"sqcups;\": [0x2294, 0xfe00],\n    \"sqsub;\": 0x228f,\n    \"sqsube;\": 0x2291,\n    \"sqsubset;\": 0x228f,\n    \"sqsubseteq;\": 0x2291,\n    \"sqsup;\": 0x2290,\n    \"sqsupe;\": 0x2292,\n    \"sqsupset;\": 0x2290,\n    \"sqsupseteq;\": 0x2292,\n    \"squ;\": 0x25a1,\n    \"square;\": 0x25a1,\n    \"squarf;\": 0x25aa,\n    \"squf;\": 0x25aa,\n    \"srarr;\": 0x2192,\n    \"sscr;\": [0xd835, 0xdcc8],\n    \"ssetmn;\": 0x2216,\n    \"ssmile;\": 0x2323,\n    \"sstarf;\": 0x22c6,\n    \"star;\": 0x2606,\n    \"starf;\": 0x2605,\n    \"straightepsilon;\": 0x3f5,\n    \"straightphi;\": 0x3d5,\n    \"strns;\": 0xaf,\n    \"sub;\": 0x2282,\n    \"subE;\": 0x2ac5,\n    \"subdot;\": 0x2abd,\n    \"sube;\": 0x2286,\n    \"subedot;\": 0x2ac3,\n    \"submult;\": 0x2ac1,\n    \"subnE;\": 0x2acb,\n    \"subne;\": 0x228a,\n    \"subplus;\": 0x2abf,\n    \"subrarr;\": 0x2979,\n    \"subset;\": 0x2282,\n    \"subseteq;\": 0x2286,\n    \"subseteqq;\": 0x2ac5,\n    \"subsetneq;\": 0x228a,\n    \"subsetneqq;\": 0x2acb,\n    \"subsim;\": 0x2ac7,\n    \"subsub;\": 0x2ad5,\n    \"subsup;\": 0x2ad3,\n    \"succ;\": 0x227b,\n    \"succapprox;\": 0x2ab8,\n    \"succcurlyeq;\": 0x227d,\n    \"succeq;\": 0x2ab0,\n    \"succnapprox;\": 0x2aba,\n    \"succneqq;\": 0x2ab6,\n    \"succnsim;\": 0x22e9,\n    \"succsim;\": 0x227f,\n    \"sum;\": 0x2211,\n    \"sung;\": 0x266a,\n    \"sup1\": 0xb9,\n    \"sup1;\": 0xb9,\n    \"sup2\": 0xb2,\n    \"sup2;\": 0xb2,\n    \"sup3\": 0xb3,\n    \"sup3;\": 0xb3,\n    \"sup;\": 0x2283,\n    \"supE;\": 0x2ac6,\n    \"supdot;\": 0x2abe,\n    \"supdsub;\": 0x2ad8,\n    \"supe;\": 0x2287,\n    \"supedot;\": 0x2ac4,\n    \"suphsol;\": 0x27c9,\n    \"suphsub;\": 0x2ad7,\n    \"suplarr;\": 0x297b,\n    \"supmult;\": 0x2ac2,\n    \"supnE;\": 0x2acc,\n    \"supne;\": 0x228b,\n    \"supplus;\": 0x2ac0,\n    \"supset;\": 0x2283,\n    \"supseteq;\": 0x2287,\n    \"supseteqq;\": 0x2ac6,\n    \"supsetneq;\": 0x228b,\n    \"supsetneqq;\": 0x2acc,\n    \"supsim;\": 0x2ac8,\n    \"supsub;\": 0x2ad4,\n    \"supsup;\": 0x2ad6,\n    \"swArr;\": 0x21d9,\n    \"swarhk;\": 0x2926,\n    \"swarr;\": 0x2199,\n    \"swarrow;\": 0x2199,\n    \"swnwar;\": 0x292a,\n    \"szlig\": 0xdf,\n    \"szlig;\": 0xdf,\n    \"target;\": 0x2316,\n    \"tau;\": 0x3c4,\n    \"tbrk;\": 0x23b4,\n    \"tcaron;\": 0x165,\n    \"tcedil;\": 0x163,\n    \"tcy;\": 0x442,\n    \"tdot;\": 0x20db,\n    \"telrec;\": 0x2315,\n    \"tfr;\": [0xd835, 0xdd31],\n    \"there4;\": 0x2234,\n    \"therefore;\": 0x2234,\n    \"theta;\": 0x3b8,\n    \"thetasym;\": 0x3d1,\n    \"thetav;\": 0x3d1,\n    \"thickapprox;\": 0x2248,\n    \"thicksim;\": 0x223c,\n    \"thinsp;\": 0x2009,\n    \"thkap;\": 0x2248,\n    \"thksim;\": 0x223c,\n    \"thorn\": 0xfe,\n    \"thorn;\": 0xfe,\n    \"tilde;\": 0x2dc,\n    \"times\": 0xd7,\n    \"times;\": 0xd7,\n    \"timesb;\": 0x22a0,\n    \"timesbar;\": 0x2a31,\n    \"timesd;\": 0x2a30,\n    \"tint;\": 0x222d,\n    \"toea;\": 0x2928,\n    \"top;\": 0x22a4,\n    \"topbot;\": 0x2336,\n    \"topcir;\": 0x2af1,\n    \"topf;\": [0xd835, 0xdd65],\n    \"topfork;\": 0x2ada,\n    \"tosa;\": 0x2929,\n    \"tprime;\": 0x2034,\n    \"trade;\": 0x2122,\n    \"triangle;\": 0x25b5,\n    \"triangledown;\": 0x25bf,\n    \"triangleleft;\": 0x25c3,\n    \"trianglelefteq;\": 0x22b4,\n    \"triangleq;\": 0x225c,\n    \"triangleright;\": 0x25b9,\n    \"trianglerighteq;\": 0x22b5,\n    \"tridot;\": 0x25ec,\n    \"trie;\": 0x225c,\n    \"triminus;\": 0x2a3a,\n    \"triplus;\": 0x2a39,\n    \"trisb;\": 0x29cd,\n    \"tritime;\": 0x2a3b,\n    \"trpezium;\": 0x23e2,\n    \"tscr;\": [0xd835, 0xdcc9],\n    \"tscy;\": 0x446,\n    \"tshcy;\": 0x45b,\n    \"tstrok;\": 0x167,\n    \"twixt;\": 0x226c,\n    \"twoheadleftarrow;\": 0x219e,\n    \"twoheadrightarrow;\": 0x21a0,\n    \"uArr;\": 0x21d1,\n    \"uHar;\": 0x2963,\n    \"uacute\": 0xfa,\n    \"uacute;\": 0xfa,\n    \"uarr;\": 0x2191,\n    \"ubrcy;\": 0x45e,\n    \"ubreve;\": 0x16d,\n    \"ucirc\": 0xfb,\n    \"ucirc;\": 0xfb,\n    \"ucy;\": 0x443,\n    \"udarr;\": 0x21c5,\n    \"udblac;\": 0x171,\n    \"udhar;\": 0x296e,\n    \"ufisht;\": 0x297e,\n    \"ufr;\": [0xd835, 0xdd32],\n    \"ugrave\": 0xf9,\n    \"ugrave;\": 0xf9,\n    \"uharl;\": 0x21bf,\n    \"uharr;\": 0x21be,\n    \"uhblk;\": 0x2580,\n    \"ulcorn;\": 0x231c,\n    \"ulcorner;\": 0x231c,\n    \"ulcrop;\": 0x230f,\n    \"ultri;\": 0x25f8,\n    \"umacr;\": 0x16b,\n    \"uml\": 0xa8,\n    \"uml;\": 0xa8,\n    \"uogon;\": 0x173,\n    \"uopf;\": [0xd835, 0xdd66],\n    \"uparrow;\": 0x2191,\n    \"updownarrow;\": 0x2195,\n    \"upharpoonleft;\": 0x21bf,\n    \"upharpoonright;\": 0x21be,\n    \"uplus;\": 0x228e,\n    \"upsi;\": 0x3c5,\n    \"upsih;\": 0x3d2,\n    \"upsilon;\": 0x3c5,\n    \"upuparrows;\": 0x21c8,\n    \"urcorn;\": 0x231d,\n    \"urcorner;\": 0x231d,\n    \"urcrop;\": 0x230e,\n    \"uring;\": 0x16f,\n    \"urtri;\": 0x25f9,\n    \"uscr;\": [0xd835, 0xdcca],\n    \"utdot;\": 0x22f0,\n    \"utilde;\": 0x169,\n    \"utri;\": 0x25b5,\n    \"utrif;\": 0x25b4,\n    \"uuarr;\": 0x21c8,\n    \"uuml\": 0xfc,\n    \"uuml;\": 0xfc,\n    \"uwangle;\": 0x29a7,\n    \"vArr;\": 0x21d5,\n    \"vBar;\": 0x2ae8,\n    \"vBarv;\": 0x2ae9,\n    \"vDash;\": 0x22a8,\n    \"vangrt;\": 0x299c,\n    \"varepsilon;\": 0x3f5,\n    \"varkappa;\": 0x3f0,\n    \"varnothing;\": 0x2205,\n    \"varphi;\": 0x3d5,\n    \"varpi;\": 0x3d6,\n    \"varpropto;\": 0x221d,\n    \"varr;\": 0x2195,\n    \"varrho;\": 0x3f1,\n    \"varsigma;\": 0x3c2,\n    \"varsubsetneq;\": [0x228a, 0xfe00],\n    \"varsubsetneqq;\": [0x2acb, 0xfe00],\n    \"varsupsetneq;\": [0x228b, 0xfe00],\n    \"varsupsetneqq;\": [0x2acc, 0xfe00],\n    \"vartheta;\": 0x3d1,\n    \"vartriangleleft;\": 0x22b2,\n    \"vartriangleright;\": 0x22b3,\n    \"vcy;\": 0x432,\n    \"vdash;\": 0x22a2,\n    \"vee;\": 0x2228,\n    \"veebar;\": 0x22bb,\n    \"veeeq;\": 0x225a,\n    \"vellip;\": 0x22ee,\n    \"verbar;\": 0x7c,\n    \"vert;\": 0x7c,\n    \"vfr;\": [0xd835, 0xdd33],\n    \"vltri;\": 0x22b2,\n    \"vnsub;\": [0x2282, 0x20d2],\n    \"vnsup;\": [0x2283, 0x20d2],\n    \"vopf;\": [0xd835, 0xdd67],\n    \"vprop;\": 0x221d,\n    \"vrtri;\": 0x22b3,\n    \"vscr;\": [0xd835, 0xdccb],\n    \"vsubnE;\": [0x2acb, 0xfe00],\n    \"vsubne;\": [0x228a, 0xfe00],\n    \"vsupnE;\": [0x2acc, 0xfe00],\n    \"vsupne;\": [0x228b, 0xfe00],\n    \"vzigzag;\": 0x299a,\n    \"wcirc;\": 0x175,\n    \"wedbar;\": 0x2a5f,\n    \"wedge;\": 0x2227,\n    \"wedgeq;\": 0x2259,\n    \"weierp;\": 0x2118,\n    \"wfr;\": [0xd835, 0xdd34],\n    \"wopf;\": [0xd835, 0xdd68],\n    \"wp;\": 0x2118,\n    \"wr;\": 0x2240,\n    \"wreath;\": 0x2240,\n    \"wscr;\": [0xd835, 0xdccc],\n    \"xcap;\": 0x22c2,\n    \"xcirc;\": 0x25ef,\n    \"xcup;\": 0x22c3,\n    \"xdtri;\": 0x25bd,\n    \"xfr;\": [0xd835, 0xdd35],\n    \"xhArr;\": 0x27fa,\n    \"xharr;\": 0x27f7,\n    \"xi;\": 0x3be,\n    \"xlArr;\": 0x27f8,\n    \"xlarr;\": 0x27f5,\n    \"xmap;\": 0x27fc,\n    \"xnis;\": 0x22fb,\n    \"xodot;\": 0x2a00,\n    \"xopf;\": [0xd835, 0xdd69],\n    \"xoplus;\": 0x2a01,\n    \"xotime;\": 0x2a02,\n    \"xrArr;\": 0x27f9,\n    \"xrarr;\": 0x27f6,\n    \"xscr;\": [0xd835, 0xdccd],\n    \"xsqcup;\": 0x2a06,\n    \"xuplus;\": 0x2a04,\n    \"xutri;\": 0x25b3,\n    \"xvee;\": 0x22c1,\n    \"xwedge;\": 0x22c0,\n    \"yacute\": 0xfd,\n    \"yacute;\": 0xfd,\n    \"yacy;\": 0x44f,\n    \"ycirc;\": 0x177,\n    \"ycy;\": 0x44b,\n    \"yen\": 0xa5,\n    \"yen;\": 0xa5,\n    \"yfr;\": [0xd835, 0xdd36],\n    \"yicy;\": 0x457,\n    \"yopf;\": [0xd835, 0xdd6a],\n    \"yscr;\": [0xd835, 0xdcce],\n    \"yucy;\": 0x44e,\n    \"yuml\": 0xff,\n    \"yuml;\": 0xff,\n    \"zacute;\": 0x17a,\n    \"zcaron;\": 0x17e,\n    \"zcy;\": 0x437,\n    \"zdot;\": 0x17c,\n    \"zeetrf;\": 0x2128,\n    \"zeta;\": 0x3b6,\n    \"zfr;\": [0xd835, 0xdd37],\n    \"zhcy;\": 0x436,\n    \"zigrarr;\": 0x21dd,\n    \"zopf;\": [0xd835, 0xdd6b],\n    \"zscr;\": [0xd835, 0xdccf],\n    \"zwj;\": 0x200d,\n    \"zwnj;\": 0x200c\n  };\n  /*\n   * This regexp is generated with test/tools/update-entities.js\n   * It will always match at least one character -- but note that there\n   * are no entities whose names are a single character long.\n   */\n  var NAMEDCHARREF = /(A(?:Elig;?|MP;?|acute;?|breve;|c(?:irc;?|y;)|fr;|grave;?|lpha;|macr;|nd;|o(?:gon;|pf;)|pplyFunction;|ring;?|s(?:cr;|sign;)|tilde;?|uml;?)|B(?:a(?:ckslash;|r(?:v;|wed;))|cy;|e(?:cause;|rnoullis;|ta;)|fr;|opf;|reve;|scr;|umpeq;)|C(?:Hcy;|OPY;?|a(?:cute;|p(?:;|italDifferentialD;)|yleys;)|c(?:aron;|edil;?|irc;|onint;)|dot;|e(?:dilla;|nterDot;)|fr;|hi;|ircle(?:Dot;|Minus;|Plus;|Times;)|lo(?:ckwiseContourIntegral;|seCurly(?:DoubleQuote;|Quote;))|o(?:lon(?:;|e;)|n(?:gruent;|int;|tourIntegral;)|p(?:f;|roduct;)|unterClockwiseContourIntegral;)|ross;|scr;|up(?:;|Cap;))|D(?:D(?:;|otrahd;)|Jcy;|Scy;|Zcy;|a(?:gger;|rr;|shv;)|c(?:aron;|y;)|el(?:;|ta;)|fr;|i(?:a(?:critical(?:Acute;|Do(?:t;|ubleAcute;)|Grave;|Tilde;)|mond;)|fferentialD;)|o(?:pf;|t(?:;|Dot;|Equal;)|uble(?:ContourIntegral;|Do(?:t;|wnArrow;)|L(?:eft(?:Arrow;|RightArrow;|Tee;)|ong(?:Left(?:Arrow;|RightArrow;)|RightArrow;))|Right(?:Arrow;|Tee;)|Up(?:Arrow;|DownArrow;)|VerticalBar;)|wn(?:Arrow(?:;|Bar;|UpArrow;)|Breve;|Left(?:RightVector;|TeeVector;|Vector(?:;|Bar;))|Right(?:TeeVector;|Vector(?:;|Bar;))|Tee(?:;|Arrow;)|arrow;))|s(?:cr;|trok;))|E(?:NG;|TH;?|acute;?|c(?:aron;|irc;?|y;)|dot;|fr;|grave;?|lement;|m(?:acr;|pty(?:SmallSquare;|VerySmallSquare;))|o(?:gon;|pf;)|psilon;|qu(?:al(?:;|Tilde;)|ilibrium;)|s(?:cr;|im;)|ta;|uml;?|x(?:ists;|ponentialE;))|F(?:cy;|fr;|illed(?:SmallSquare;|VerySmallSquare;)|o(?:pf;|rAll;|uriertrf;)|scr;)|G(?:Jcy;|T;?|amma(?:;|d;)|breve;|c(?:edil;|irc;|y;)|dot;|fr;|g;|opf;|reater(?:Equal(?:;|Less;)|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;)|scr;|t;)|H(?:ARDcy;|a(?:cek;|t;)|circ;|fr;|ilbertSpace;|o(?:pf;|rizontalLine;)|s(?:cr;|trok;)|ump(?:DownHump;|Equal;))|I(?:Ecy;|Jlig;|Ocy;|acute;?|c(?:irc;?|y;)|dot;|fr;|grave;?|m(?:;|a(?:cr;|ginaryI;)|plies;)|n(?:t(?:;|e(?:gral;|rsection;))|visible(?:Comma;|Times;))|o(?:gon;|pf;|ta;)|scr;|tilde;|u(?:kcy;|ml;?))|J(?:c(?:irc;|y;)|fr;|opf;|s(?:cr;|ercy;)|ukcy;)|K(?:Hcy;|Jcy;|appa;|c(?:edil;|y;)|fr;|opf;|scr;)|L(?:Jcy;|T;?|a(?:cute;|mbda;|ng;|placetrf;|rr;)|c(?:aron;|edil;|y;)|e(?:ft(?:A(?:ngleBracket;|rrow(?:;|Bar;|RightArrow;))|Ceiling;|Do(?:ubleBracket;|wn(?:TeeVector;|Vector(?:;|Bar;)))|Floor;|Right(?:Arrow;|Vector;)|T(?:ee(?:;|Arrow;|Vector;)|riangle(?:;|Bar;|Equal;))|Up(?:DownVector;|TeeVector;|Vector(?:;|Bar;))|Vector(?:;|Bar;)|arrow;|rightarrow;)|ss(?:EqualGreater;|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;))|fr;|l(?:;|eftarrow;)|midot;|o(?:ng(?:Left(?:Arrow;|RightArrow;)|RightArrow;|left(?:arrow;|rightarrow;)|rightarrow;)|pf;|wer(?:LeftArrow;|RightArrow;))|s(?:cr;|h;|trok;)|t;)|M(?:ap;|cy;|e(?:diumSpace;|llintrf;)|fr;|inusPlus;|opf;|scr;|u;)|N(?:Jcy;|acute;|c(?:aron;|edil;|y;)|e(?:gative(?:MediumSpace;|Thi(?:ckSpace;|nSpace;)|VeryThinSpace;)|sted(?:GreaterGreater;|LessLess;)|wLine;)|fr;|o(?:Break;|nBreakingSpace;|pf;|t(?:;|C(?:ongruent;|upCap;)|DoubleVerticalBar;|E(?:lement;|qual(?:;|Tilde;)|xists;)|Greater(?:;|Equal;|FullEqual;|Greater;|Less;|SlantEqual;|Tilde;)|Hump(?:DownHump;|Equal;)|Le(?:ftTriangle(?:;|Bar;|Equal;)|ss(?:;|Equal;|Greater;|Less;|SlantEqual;|Tilde;))|Nested(?:GreaterGreater;|LessLess;)|Precedes(?:;|Equal;|SlantEqual;)|R(?:everseElement;|ightTriangle(?:;|Bar;|Equal;))|S(?:quareSu(?:bset(?:;|Equal;)|perset(?:;|Equal;))|u(?:bset(?:;|Equal;)|cceeds(?:;|Equal;|SlantEqual;|Tilde;)|perset(?:;|Equal;)))|Tilde(?:;|Equal;|FullEqual;|Tilde;)|VerticalBar;))|scr;|tilde;?|u;)|O(?:Elig;|acute;?|c(?:irc;?|y;)|dblac;|fr;|grave;?|m(?:acr;|ega;|icron;)|opf;|penCurly(?:DoubleQuote;|Quote;)|r;|s(?:cr;|lash;?)|ti(?:lde;?|mes;)|uml;?|ver(?:B(?:ar;|rac(?:e;|ket;))|Parenthesis;))|P(?:artialD;|cy;|fr;|hi;|i;|lusMinus;|o(?:incareplane;|pf;)|r(?:;|ecedes(?:;|Equal;|SlantEqual;|Tilde;)|ime;|o(?:duct;|portion(?:;|al;)))|s(?:cr;|i;))|Q(?:UOT;?|fr;|opf;|scr;)|R(?:Barr;|EG;?|a(?:cute;|ng;|rr(?:;|tl;))|c(?:aron;|edil;|y;)|e(?:;|verse(?:E(?:lement;|quilibrium;)|UpEquilibrium;))|fr;|ho;|ight(?:A(?:ngleBracket;|rrow(?:;|Bar;|LeftArrow;))|Ceiling;|Do(?:ubleBracket;|wn(?:TeeVector;|Vector(?:;|Bar;)))|Floor;|T(?:ee(?:;|Arrow;|Vector;)|riangle(?:;|Bar;|Equal;))|Up(?:DownVector;|TeeVector;|Vector(?:;|Bar;))|Vector(?:;|Bar;)|arrow;)|o(?:pf;|undImplies;)|rightarrow;|s(?:cr;|h;)|uleDelayed;)|S(?:H(?:CHcy;|cy;)|OFTcy;|acute;|c(?:;|aron;|edil;|irc;|y;)|fr;|hort(?:DownArrow;|LeftArrow;|RightArrow;|UpArrow;)|igma;|mallCircle;|opf;|q(?:rt;|uare(?:;|Intersection;|Su(?:bset(?:;|Equal;)|perset(?:;|Equal;))|Union;))|scr;|tar;|u(?:b(?:;|set(?:;|Equal;))|c(?:ceeds(?:;|Equal;|SlantEqual;|Tilde;)|hThat;)|m;|p(?:;|erset(?:;|Equal;)|set;)))|T(?:HORN;?|RADE;|S(?:Hcy;|cy;)|a(?:b;|u;)|c(?:aron;|edil;|y;)|fr;|h(?:e(?:refore;|ta;)|i(?:ckSpace;|nSpace;))|ilde(?:;|Equal;|FullEqual;|Tilde;)|opf;|ripleDot;|s(?:cr;|trok;))|U(?:a(?:cute;?|rr(?:;|ocir;))|br(?:cy;|eve;)|c(?:irc;?|y;)|dblac;|fr;|grave;?|macr;|n(?:der(?:B(?:ar;|rac(?:e;|ket;))|Parenthesis;)|ion(?:;|Plus;))|o(?:gon;|pf;)|p(?:Arrow(?:;|Bar;|DownArrow;)|DownArrow;|Equilibrium;|Tee(?:;|Arrow;)|arrow;|downarrow;|per(?:LeftArrow;|RightArrow;)|si(?:;|lon;))|ring;|scr;|tilde;|uml;?)|V(?:Dash;|bar;|cy;|dash(?:;|l;)|e(?:e;|r(?:bar;|t(?:;|ical(?:Bar;|Line;|Separator;|Tilde;))|yThinSpace;))|fr;|opf;|scr;|vdash;)|W(?:circ;|edge;|fr;|opf;|scr;)|X(?:fr;|i;|opf;|scr;)|Y(?:Acy;|Icy;|Ucy;|acute;?|c(?:irc;|y;)|fr;|opf;|scr;|uml;)|Z(?:Hcy;|acute;|c(?:aron;|y;)|dot;|e(?:roWidthSpace;|ta;)|fr;|opf;|scr;)|a(?:acute;?|breve;|c(?:;|E;|d;|irc;?|ute;?|y;)|elig;?|f(?:;|r;)|grave;?|l(?:e(?:fsym;|ph;)|pha;)|m(?:a(?:cr;|lg;)|p;?)|n(?:d(?:;|and;|d;|slope;|v;)|g(?:;|e;|le;|msd(?:;|a(?:a;|b;|c;|d;|e;|f;|g;|h;))|rt(?:;|vb(?:;|d;))|s(?:ph;|t;)|zarr;))|o(?:gon;|pf;)|p(?:;|E;|acir;|e;|id;|os;|prox(?:;|eq;))|ring;?|s(?:cr;|t;|ymp(?:;|eq;))|tilde;?|uml;?|w(?:conint;|int;))|b(?:Not;|a(?:ck(?:cong;|epsilon;|prime;|sim(?:;|eq;))|r(?:vee;|wed(?:;|ge;)))|brk(?:;|tbrk;)|c(?:ong;|y;)|dquo;|e(?:caus(?:;|e;)|mptyv;|psi;|rnou;|t(?:a;|h;|ween;))|fr;|ig(?:c(?:ap;|irc;|up;)|o(?:dot;|plus;|times;)|s(?:qcup;|tar;)|triangle(?:down;|up;)|uplus;|vee;|wedge;)|karow;|l(?:a(?:ck(?:lozenge;|square;|triangle(?:;|down;|left;|right;))|nk;)|k(?:1(?:2;|4;)|34;)|ock;)|n(?:e(?:;|quiv;)|ot;)|o(?:pf;|t(?:;|tom;)|wtie;|x(?:D(?:L;|R;|l;|r;)|H(?:;|D;|U;|d;|u;)|U(?:L;|R;|l;|r;)|V(?:;|H;|L;|R;|h;|l;|r;)|box;|d(?:L;|R;|l;|r;)|h(?:;|D;|U;|d;|u;)|minus;|plus;|times;|u(?:L;|R;|l;|r;)|v(?:;|H;|L;|R;|h;|l;|r;)))|prime;|r(?:eve;|vbar;?)|s(?:cr;|emi;|im(?:;|e;)|ol(?:;|b;|hsub;))|u(?:ll(?:;|et;)|mp(?:;|E;|e(?:;|q;))))|c(?:a(?:cute;|p(?:;|and;|brcup;|c(?:ap;|up;)|dot;|s;)|r(?:et;|on;))|c(?:a(?:ps;|ron;)|edil;?|irc;|ups(?:;|sm;))|dot;|e(?:dil;?|mptyv;|nt(?:;|erdot;|))|fr;|h(?:cy;|eck(?:;|mark;)|i;)|ir(?:;|E;|c(?:;|eq;|le(?:arrow(?:left;|right;)|d(?:R;|S;|ast;|circ;|dash;)))|e;|fnint;|mid;|scir;)|lubs(?:;|uit;)|o(?:lon(?:;|e(?:;|q;))|m(?:ma(?:;|t;)|p(?:;|fn;|le(?:ment;|xes;)))|n(?:g(?:;|dot;)|int;)|p(?:f;|rod;|y(?:;|sr;|)))|r(?:arr;|oss;)|s(?:cr;|u(?:b(?:;|e;)|p(?:;|e;)))|tdot;|u(?:darr(?:l;|r;)|e(?:pr;|sc;)|larr(?:;|p;)|p(?:;|brcap;|c(?:ap;|up;)|dot;|or;|s;)|r(?:arr(?:;|m;)|ly(?:eq(?:prec;|succ;)|vee;|wedge;)|ren;?|vearrow(?:left;|right;))|vee;|wed;)|w(?:conint;|int;)|ylcty;)|d(?:Arr;|Har;|a(?:gger;|leth;|rr;|sh(?:;|v;))|b(?:karow;|lac;)|c(?:aron;|y;)|d(?:;|a(?:gger;|rr;)|otseq;)|e(?:g;?|lta;|mptyv;)|f(?:isht;|r;)|har(?:l;|r;)|i(?:am(?:;|ond(?:;|suit;)|s;)|e;|gamma;|sin;|v(?:;|ide(?:;|ontimes;|)|onx;))|jcy;|lc(?:orn;|rop;)|o(?:llar;|pf;|t(?:;|eq(?:;|dot;)|minus;|plus;|square;)|ublebarwedge;|wn(?:arrow;|downarrows;|harpoon(?:left;|right;)))|r(?:bkarow;|c(?:orn;|rop;))|s(?:c(?:r;|y;)|ol;|trok;)|t(?:dot;|ri(?:;|f;))|u(?:arr;|har;)|wangle;|z(?:cy;|igrarr;))|e(?:D(?:Dot;|ot;)|a(?:cute;?|ster;)|c(?:aron;|ir(?:;|c;?)|olon;|y;)|dot;|e;|f(?:Dot;|r;)|g(?:;|rave;?|s(?:;|dot;))|l(?:;|inters;|l;|s(?:;|dot;))|m(?:acr;|pty(?:;|set;|v;)|sp(?:1(?:3;|4;)|;))|n(?:g;|sp;)|o(?:gon;|pf;)|p(?:ar(?:;|sl;)|lus;|si(?:;|lon;|v;))|q(?:c(?:irc;|olon;)|s(?:im;|lant(?:gtr;|less;))|u(?:als;|est;|iv(?:;|DD;))|vparsl;)|r(?:Dot;|arr;)|s(?:cr;|dot;|im;)|t(?:a;|h;?)|u(?:ml;?|ro;)|x(?:cl;|ist;|p(?:ectation;|onentiale;)))|f(?:allingdotseq;|cy;|emale;|f(?:ilig;|l(?:ig;|lig;)|r;)|ilig;|jlig;|l(?:at;|lig;|tns;)|nof;|o(?:pf;|r(?:all;|k(?:;|v;)))|partint;|r(?:a(?:c(?:1(?:2;?|3;|4;?|5;|6;|8;)|2(?:3;|5;)|3(?:4;?|5;|8;)|45;|5(?:6;|8;)|78;)|sl;)|own;)|scr;)|g(?:E(?:;|l;)|a(?:cute;|mma(?:;|d;)|p;)|breve;|c(?:irc;|y;)|dot;|e(?:;|l;|q(?:;|q;|slant;)|s(?:;|cc;|dot(?:;|o(?:;|l;))|l(?:;|es;)))|fr;|g(?:;|g;)|imel;|jcy;|l(?:;|E;|a;|j;)|n(?:E;|ap(?:;|prox;)|e(?:;|q(?:;|q;))|sim;)|opf;|rave;|s(?:cr;|im(?:;|e;|l;))|t(?:;|c(?:c;|ir;)|dot;|lPar;|quest;|r(?:a(?:pprox;|rr;)|dot;|eq(?:less;|qless;)|less;|sim;)|)|v(?:ertneqq;|nE;))|h(?:Arr;|a(?:irsp;|lf;|milt;|r(?:dcy;|r(?:;|cir;|w;)))|bar;|circ;|e(?:arts(?:;|uit;)|llip;|rcon;)|fr;|ks(?:earow;|warow;)|o(?:arr;|mtht;|ok(?:leftarrow;|rightarrow;)|pf;|rbar;)|s(?:cr;|lash;|trok;)|y(?:bull;|phen;))|i(?:acute;?|c(?:;|irc;?|y;)|e(?:cy;|xcl;?)|f(?:f;|r;)|grave;?|i(?:;|i(?:int;|nt;)|nfin;|ota;)|jlig;|m(?:a(?:cr;|g(?:e;|line;|part;)|th;)|of;|ped;)|n(?:;|care;|fin(?:;|tie;)|odot;|t(?:;|cal;|e(?:gers;|rcal;)|larhk;|prod;))|o(?:cy;|gon;|pf;|ta;)|prod;|quest;?|s(?:cr;|in(?:;|E;|dot;|s(?:;|v;)|v;))|t(?:;|ilde;)|u(?:kcy;|ml;?))|j(?:c(?:irc;|y;)|fr;|math;|opf;|s(?:cr;|ercy;)|ukcy;)|k(?:appa(?:;|v;)|c(?:edil;|y;)|fr;|green;|hcy;|jcy;|opf;|scr;)|l(?:A(?:arr;|rr;|tail;)|Barr;|E(?:;|g;)|Har;|a(?:cute;|emptyv;|gran;|mbda;|ng(?:;|d;|le;)|p;|quo;?|rr(?:;|b(?:;|fs;)|fs;|hk;|lp;|pl;|sim;|tl;)|t(?:;|ail;|e(?:;|s;)))|b(?:arr;|brk;|r(?:ac(?:e;|k;)|k(?:e;|sl(?:d;|u;))))|c(?:aron;|e(?:dil;|il;)|ub;|y;)|d(?:ca;|quo(?:;|r;)|r(?:dhar;|ushar;)|sh;)|e(?:;|ft(?:arrow(?:;|tail;)|harpoon(?:down;|up;)|leftarrows;|right(?:arrow(?:;|s;)|harpoons;|squigarrow;)|threetimes;)|g;|q(?:;|q;|slant;)|s(?:;|cc;|dot(?:;|o(?:;|r;))|g(?:;|es;)|s(?:approx;|dot;|eq(?:gtr;|qgtr;)|gtr;|sim;)))|f(?:isht;|loor;|r;)|g(?:;|E;)|h(?:ar(?:d;|u(?:;|l;))|blk;)|jcy;|l(?:;|arr;|corner;|hard;|tri;)|m(?:idot;|oust(?:;|ache;))|n(?:E;|ap(?:;|prox;)|e(?:;|q(?:;|q;))|sim;)|o(?:a(?:ng;|rr;)|brk;|ng(?:left(?:arrow;|rightarrow;)|mapsto;|rightarrow;)|oparrow(?:left;|right;)|p(?:ar;|f;|lus;)|times;|w(?:ast;|bar;)|z(?:;|enge;|f;))|par(?:;|lt;)|r(?:arr;|corner;|har(?:;|d;)|m;|tri;)|s(?:aquo;|cr;|h;|im(?:;|e;|g;)|q(?:b;|uo(?:;|r;))|trok;)|t(?:;|c(?:c;|ir;)|dot;|hree;|imes;|larr;|quest;|r(?:Par;|i(?:;|e;|f;))|)|ur(?:dshar;|uhar;)|v(?:ertneqq;|nE;))|m(?:DDot;|a(?:cr;?|l(?:e;|t(?:;|ese;))|p(?:;|sto(?:;|down;|left;|up;))|rker;)|c(?:omma;|y;)|dash;|easuredangle;|fr;|ho;|i(?:cro;?|d(?:;|ast;|cir;|dot;?)|nus(?:;|b;|d(?:;|u;)))|l(?:cp;|dr;)|nplus;|o(?:dels;|pf;)|p;|s(?:cr;|tpos;)|u(?:;|ltimap;|map;))|n(?:G(?:g;|t(?:;|v;))|L(?:eft(?:arrow;|rightarrow;)|l;|t(?:;|v;))|Rightarrow;|V(?:Dash;|dash;)|a(?:bla;|cute;|ng;|p(?:;|E;|id;|os;|prox;)|tur(?:;|al(?:;|s;)))|b(?:sp;?|ump(?:;|e;))|c(?:a(?:p;|ron;)|edil;|ong(?:;|dot;)|up;|y;)|dash;|e(?:;|Arr;|ar(?:hk;|r(?:;|ow;))|dot;|quiv;|s(?:ear;|im;)|xist(?:;|s;))|fr;|g(?:E;|e(?:;|q(?:;|q;|slant;)|s;)|sim;|t(?:;|r;))|h(?:Arr;|arr;|par;)|i(?:;|s(?:;|d;)|v;)|jcy;|l(?:Arr;|E;|arr;|dr;|e(?:;|ft(?:arrow;|rightarrow;)|q(?:;|q;|slant;)|s(?:;|s;))|sim;|t(?:;|ri(?:;|e;)))|mid;|o(?:pf;|t(?:;|in(?:;|E;|dot;|v(?:a;|b;|c;))|ni(?:;|v(?:a;|b;|c;))|))|p(?:ar(?:;|allel;|sl;|t;)|olint;|r(?:;|cue;|e(?:;|c(?:;|eq;))))|r(?:Arr;|arr(?:;|c;|w;)|ightarrow;|tri(?:;|e;))|s(?:c(?:;|cue;|e;|r;)|hort(?:mid;|parallel;)|im(?:;|e(?:;|q;))|mid;|par;|qsu(?:be;|pe;)|u(?:b(?:;|E;|e;|set(?:;|eq(?:;|q;)))|cc(?:;|eq;)|p(?:;|E;|e;|set(?:;|eq(?:;|q;)))))|t(?:gl;|ilde;?|lg;|riangle(?:left(?:;|eq;)|right(?:;|eq;)))|u(?:;|m(?:;|ero;|sp;))|v(?:Dash;|Harr;|ap;|dash;|g(?:e;|t;)|infin;|l(?:Arr;|e;|t(?:;|rie;))|r(?:Arr;|trie;)|sim;)|w(?:Arr;|ar(?:hk;|r(?:;|ow;))|near;))|o(?:S;|a(?:cute;?|st;)|c(?:ir(?:;|c;?)|y;)|d(?:ash;|blac;|iv;|ot;|sold;)|elig;|f(?:cir;|r;)|g(?:on;|rave;?|t;)|h(?:bar;|m;)|int;|l(?:arr;|c(?:ir;|ross;)|ine;|t;)|m(?:acr;|ega;|i(?:cron;|d;|nus;))|opf;|p(?:ar;|erp;|lus;)|r(?:;|arr;|d(?:;|er(?:;|of;)|f;?|m;?)|igof;|or;|slope;|v;)|s(?:cr;|lash;?|ol;)|ti(?:lde;?|mes(?:;|as;))|uml;?|vbar;)|p(?:ar(?:;|a(?:;|llel;|)|s(?:im;|l;)|t;)|cy;|er(?:cnt;|iod;|mil;|p;|tenk;)|fr;|h(?:i(?:;|v;)|mmat;|one;)|i(?:;|tchfork;|v;)|l(?:an(?:ck(?:;|h;)|kv;)|us(?:;|acir;|b;|cir;|d(?:o;|u;)|e;|mn;?|sim;|two;))|m;|o(?:intint;|pf;|und;?)|r(?:;|E;|ap;|cue;|e(?:;|c(?:;|approx;|curlyeq;|eq;|n(?:approx;|eqq;|sim;)|sim;))|ime(?:;|s;)|n(?:E;|ap;|sim;)|o(?:d;|f(?:alar;|line;|surf;)|p(?:;|to;))|sim;|urel;)|s(?:cr;|i;)|uncsp;)|q(?:fr;|int;|opf;|prime;|scr;|u(?:at(?:ernions;|int;)|est(?:;|eq;)|ot;?))|r(?:A(?:arr;|rr;|tail;)|Barr;|Har;|a(?:c(?:e;|ute;)|dic;|emptyv;|ng(?:;|d;|e;|le;)|quo;?|rr(?:;|ap;|b(?:;|fs;)|c;|fs;|hk;|lp;|pl;|sim;|tl;|w;)|t(?:ail;|io(?:;|nals;)))|b(?:arr;|brk;|r(?:ac(?:e;|k;)|k(?:e;|sl(?:d;|u;))))|c(?:aron;|e(?:dil;|il;)|ub;|y;)|d(?:ca;|ldhar;|quo(?:;|r;)|sh;)|e(?:al(?:;|ine;|part;|s;)|ct;|g;?)|f(?:isht;|loor;|r;)|h(?:ar(?:d;|u(?:;|l;))|o(?:;|v;))|i(?:ght(?:arrow(?:;|tail;)|harpoon(?:down;|up;)|left(?:arrows;|harpoons;)|rightarrows;|squigarrow;|threetimes;)|ng;|singdotseq;)|l(?:arr;|har;|m;)|moust(?:;|ache;)|nmid;|o(?:a(?:ng;|rr;)|brk;|p(?:ar;|f;|lus;)|times;)|p(?:ar(?:;|gt;)|polint;)|rarr;|s(?:aquo;|cr;|h;|q(?:b;|uo(?:;|r;)))|t(?:hree;|imes;|ri(?:;|e;|f;|ltri;))|uluhar;|x;)|s(?:acute;|bquo;|c(?:;|E;|a(?:p;|ron;)|cue;|e(?:;|dil;)|irc;|n(?:E;|ap;|sim;)|polint;|sim;|y;)|dot(?:;|b;|e;)|e(?:Arr;|ar(?:hk;|r(?:;|ow;))|ct;?|mi;|swar;|tm(?:inus;|n;)|xt;)|fr(?:;|own;)|h(?:arp;|c(?:hcy;|y;)|ort(?:mid;|parallel;)|y;?)|i(?:gma(?:;|f;|v;)|m(?:;|dot;|e(?:;|q;)|g(?:;|E;)|l(?:;|E;)|ne;|plus;|rarr;))|larr;|m(?:a(?:llsetminus;|shp;)|eparsl;|i(?:d;|le;)|t(?:;|e(?:;|s;)))|o(?:ftcy;|l(?:;|b(?:;|ar;))|pf;)|pa(?:des(?:;|uit;)|r;)|q(?:c(?:ap(?:;|s;)|up(?:;|s;))|su(?:b(?:;|e;|set(?:;|eq;))|p(?:;|e;|set(?:;|eq;)))|u(?:;|ar(?:e;|f;)|f;))|rarr;|s(?:cr;|etmn;|mile;|tarf;)|t(?:ar(?:;|f;)|r(?:aight(?:epsilon;|phi;)|ns;))|u(?:b(?:;|E;|dot;|e(?:;|dot;)|mult;|n(?:E;|e;)|plus;|rarr;|s(?:et(?:;|eq(?:;|q;)|neq(?:;|q;))|im;|u(?:b;|p;)))|cc(?:;|approx;|curlyeq;|eq;|n(?:approx;|eqq;|sim;)|sim;)|m;|ng;|p(?:1;?|2;?|3;?|;|E;|d(?:ot;|sub;)|e(?:;|dot;)|hs(?:ol;|ub;)|larr;|mult;|n(?:E;|e;)|plus;|s(?:et(?:;|eq(?:;|q;)|neq(?:;|q;))|im;|u(?:b;|p;))))|w(?:Arr;|ar(?:hk;|r(?:;|ow;))|nwar;)|zlig;?)|t(?:a(?:rget;|u;)|brk;|c(?:aron;|edil;|y;)|dot;|elrec;|fr;|h(?:e(?:re(?:4;|fore;)|ta(?:;|sym;|v;))|i(?:ck(?:approx;|sim;)|nsp;)|k(?:ap;|sim;)|orn;?)|i(?:lde;|mes(?:;|b(?:;|ar;)|d;|)|nt;)|o(?:ea;|p(?:;|bot;|cir;|f(?:;|ork;))|sa;)|prime;|r(?:ade;|i(?:angle(?:;|down;|left(?:;|eq;)|q;|right(?:;|eq;))|dot;|e;|minus;|plus;|sb;|time;)|pezium;)|s(?:c(?:r;|y;)|hcy;|trok;)|w(?:ixt;|ohead(?:leftarrow;|rightarrow;)))|u(?:Arr;|Har;|a(?:cute;?|rr;)|br(?:cy;|eve;)|c(?:irc;?|y;)|d(?:arr;|blac;|har;)|f(?:isht;|r;)|grave;?|h(?:ar(?:l;|r;)|blk;)|l(?:c(?:orn(?:;|er;)|rop;)|tri;)|m(?:acr;|l;?)|o(?:gon;|pf;)|p(?:arrow;|downarrow;|harpoon(?:left;|right;)|lus;|si(?:;|h;|lon;)|uparrows;)|r(?:c(?:orn(?:;|er;)|rop;)|ing;|tri;)|scr;|t(?:dot;|ilde;|ri(?:;|f;))|u(?:arr;|ml;?)|wangle;)|v(?:Arr;|Bar(?:;|v;)|Dash;|a(?:ngrt;|r(?:epsilon;|kappa;|nothing;|p(?:hi;|i;|ropto;)|r(?:;|ho;)|s(?:igma;|u(?:bsetneq(?:;|q;)|psetneq(?:;|q;)))|t(?:heta;|riangle(?:left;|right;))))|cy;|dash;|e(?:e(?:;|bar;|eq;)|llip;|r(?:bar;|t;))|fr;|ltri;|nsu(?:b;|p;)|opf;|prop;|rtri;|s(?:cr;|u(?:bn(?:E;|e;)|pn(?:E;|e;)))|zigzag;)|w(?:circ;|e(?:d(?:bar;|ge(?:;|q;))|ierp;)|fr;|opf;|p;|r(?:;|eath;)|scr;)|x(?:c(?:ap;|irc;|up;)|dtri;|fr;|h(?:Arr;|arr;)|i;|l(?:Arr;|arr;)|map;|nis;|o(?:dot;|p(?:f;|lus;)|time;)|r(?:Arr;|arr;)|s(?:cr;|qcup;)|u(?:plus;|tri;)|vee;|wedge;)|y(?:ac(?:ute;?|y;)|c(?:irc;|y;)|en;?|fr;|icy;|opf;|scr;|u(?:cy;|ml;?))|z(?:acute;|c(?:aron;|y;)|dot;|e(?:etrf;|ta;)|fr;|hcy;|igrarr;|opf;|scr;|w(?:j;|nj;)))|[\\s\\S]/g;\n\n  // Regular expression constants used by the tokenizer and parser\n\n  // Note that \\r is included in all of these regexps because it will need\n  // to be converted to LF by the scanChars() function.\n  var DBLQUOTEATTRVAL = /[^\\r\"&\\u0000]+/g;\n  var SINGLEQUOTEATTRVAL = /[^\\r'&\\u0000]+/g;\n  var UNQUOTEDATTRVAL = /[^\\r\\t\\n\\f &>\\u0000]+/g;\n  var TAGNAME = /[^\\r\\t\\n\\f \\/>A-Z\\u0000]+/g;\n  var ATTRNAME = /[^\\r\\t\\n\\f \\/=>A-Z\\u0000]+/g;\n  var CDATATEXT = /[^\\]\\r\\u0000\\uffff]*/g;\n  var DATATEXT = /[^&<\\r\\u0000\\uffff]*/g;\n  var RAWTEXT = /[^<\\r\\u0000\\uffff]*/g;\n  var PLAINTEXT = /[^\\r\\u0000\\uffff]*/g;\n  // Since we don't have the 'sticky tag', add '|.' to the end of SIMPLETAG\n  // and SIMPLEATTR so that we are guaranteed to always match.  This prevents\n  // us from scanning past the lastIndex set. (Note that the desired matches\n  // are always greater than 1 char long, so longest-match will ensure that .\n  // is not matched unless the desired match fails.)\n  var SIMPLETAG = /(?:(\\/)?([a-z]+)>)|[\\s\\S]/g;\n  var SIMPLEATTR = /(?:([-a-z]+)[ \\t\\n\\f]*=[ \\t\\n\\f]*('[^'&\\r\\u0000]*'|\"[^\"&\\r\\u0000]*\"|[^\\t\\n\\r\\f \"&'\\u0000>][^&> \\t\\n\\r\\f\\u0000]*[ \\t\\n\\f]))|[\\s\\S]/g;\n  var NONWS = /[^\\x09\\x0A\\x0C\\x0D\\x20]/;\n  var ALLNONWS = /[^\\x09\\x0A\\x0C\\x0D\\x20]/g; // like above, with g flag\n  var NONWSNONNUL = /[^\\x00\\x09\\x0A\\x0C\\x0D\\x20]/; // don't allow NUL either\n  var LEADINGWS = /^[\\x09\\x0A\\x0C\\x0D\\x20]+/;\n  var NULCHARS = /\\x00/g;\n\n  /***\n   * These are utility functions that don't use any of the parser's\n   * internal state.\n   */\n  function buf2str(buf) {\n    var CHUNKSIZE = 16384;\n    if (buf.length < CHUNKSIZE) {\n      return String.fromCharCode.apply(String, buf);\n    }\n    // special case for large strings, to avoid busting the stack.\n    var result = '';\n    for (var i = 0; i < buf.length; i += CHUNKSIZE) {\n      result += String.fromCharCode.apply(String, buf.slice(i, i + CHUNKSIZE));\n    }\n    return result;\n  }\n  function str2buf(s) {\n    var result = [];\n    for (var i = 0; i < s.length; i++) {\n      result[i] = s.charCodeAt(i);\n    }\n    return result;\n  }\n\n  // Determine whether the element is a member of the set.\n  // The set is an object that maps namespaces to objects. The objects\n  // then map local tagnames to the value true if that tag is part of the set\n  function isA(elt, set) {\n    if (typeof set === 'string') {\n      // convenience case for testing a particular HTML element\n      return elt.namespaceURI === NAMESPACE.HTML && elt.localName === set;\n    }\n    var tagnames = set[elt.namespaceURI];\n    return tagnames && tagnames[elt.localName];\n  }\n  function isMathmlTextIntegrationPoint(n) {\n    return isA(n, mathmlTextIntegrationPointSet);\n  }\n  function isHTMLIntegrationPoint(n) {\n    if (isA(n, htmlIntegrationPointSet)) return true;\n    if (n.namespaceURI === NAMESPACE.MATHML && n.localName === \"annotation-xml\") {\n      var encoding = n.getAttribute(\"encoding\");\n      if (encoding) encoding = encoding.toLowerCase();\n      if (encoding === \"text/html\" || encoding === \"application/xhtml+xml\") return true;\n    }\n    return false;\n  }\n  function adjustSVGTagName(name) {\n    if (name in svgTagNameAdjustments) return svgTagNameAdjustments[name];else return name;\n  }\n  function adjustSVGAttributes(attrs) {\n    for (var i = 0, n = attrs.length; i < n; i++) {\n      if (attrs[i][0] in svgAttrAdjustments) {\n        attrs[i][0] = svgAttrAdjustments[attrs[i][0]];\n      }\n    }\n  }\n  function adjustMathMLAttributes(attrs) {\n    for (var i = 0, n = attrs.length; i < n; i++) {\n      if (attrs[i][0] === \"definitionurl\") {\n        attrs[i][0] = \"definitionURL\";\n        break;\n      }\n    }\n  }\n  function adjustForeignAttributes(attrs) {\n    for (var i = 0, n = attrs.length; i < n; i++) {\n      if (attrs[i][0] in foreignAttributes) {\n        // Attributes with namespaces get a 3rd element:\n        // [Qname, value, namespace]\n        attrs[i].push(foreignAttributes[attrs[i][0]]);\n      }\n    }\n  }\n\n  // For each attribute in attrs, if elt doesn't have an attribute\n  // by that name, add the attribute to elt\n  // XXX: I'm ignoring namespaces for now\n  function transferAttributes(attrs, elt) {\n    for (var i = 0, n = attrs.length; i < n; i++) {\n      var name = attrs[i][0],\n        value = attrs[i][1];\n      if (elt.hasAttribute(name)) continue;\n      elt._setAttribute(name, value);\n    }\n  }\n\n  /***\n   * The ElementStack class\n   */\n  HTMLParser.ElementStack = function ElementStack() {\n    this.elements = [];\n    this.top = null; // stack.top is the \"current node\" in the spec\n  };\n\n  /*\n  // This is for debugging only\n  HTMLParser.ElementStack.prototype.toString = function(e) {\n    return \"STACK: \" +\n    this.elements.map(function(e) {return e.localName;}).join(\"-\");\n  }\n  */\n\n  HTMLParser.ElementStack.prototype.push = function (e) {\n    this.elements.push(e);\n    this.top = e;\n  };\n  HTMLParser.ElementStack.prototype.pop = function (e) {\n    this.elements.pop();\n    this.top = this.elements[this.elements.length - 1];\n  };\n\n  // Pop elements off the stack up to and including the first\n  // element with the specified (HTML) tagname\n  HTMLParser.ElementStack.prototype.popTag = function (tag) {\n    for (var i = this.elements.length - 1; i > 0; i--) {\n      var e = this.elements[i];\n      if (isA(e, tag)) break;\n    }\n    this.elements.length = i;\n    this.top = this.elements[i - 1];\n  };\n\n  // Pop elements off the stack up to and including the first\n  // element that is an instance of the specified type\n  HTMLParser.ElementStack.prototype.popElementType = function (type) {\n    for (var i = this.elements.length - 1; i > 0; i--) {\n      if (this.elements[i] instanceof type) break;\n    }\n    this.elements.length = i;\n    this.top = this.elements[i - 1];\n  };\n\n  // Pop elements off the stack up to and including the element e.\n  // Note that this is very different from removeElement()\n  // This requires that e is on the stack.\n  HTMLParser.ElementStack.prototype.popElement = function (e) {\n    for (var i = this.elements.length - 1; i > 0; i--) {\n      if (this.elements[i] === e) break;\n    }\n    this.elements.length = i;\n    this.top = this.elements[i - 1];\n  };\n\n  // Remove a specific element from the stack.\n  // Do nothing if the element is not on the stack\n  HTMLParser.ElementStack.prototype.removeElement = function (e) {\n    if (this.top === e) this.pop();else {\n      var idx = this.elements.lastIndexOf(e);\n      if (idx !== -1) this.elements.splice(idx, 1);\n    }\n  };\n  HTMLParser.ElementStack.prototype.clearToContext = function (set) {\n    // Note that we don't loop to 0. Never pop the <html> elt off.\n    for (var i = this.elements.length - 1; i > 0; i--) {\n      if (isA(this.elements[i], set)) break;\n    }\n    this.elements.length = i + 1;\n    this.top = this.elements[i];\n  };\n  HTMLParser.ElementStack.prototype.contains = function (tag) {\n    return this.inSpecificScope(tag, Object.create(null));\n  };\n  HTMLParser.ElementStack.prototype.inSpecificScope = function (tag, set) {\n    for (var i = this.elements.length - 1; i >= 0; i--) {\n      var elt = this.elements[i];\n      if (isA(elt, tag)) return true;\n      if (isA(elt, set)) return false;\n    }\n    return false;\n  };\n\n  // Like the above, but for a specific element, not a tagname\n  HTMLParser.ElementStack.prototype.elementInSpecificScope = function (target, set) {\n    for (var i = this.elements.length - 1; i >= 0; i--) {\n      var elt = this.elements[i];\n      if (elt === target) return true;\n      if (isA(elt, set)) return false;\n    }\n    return false;\n  };\n\n  // Like the above, but for an element interface, not a tagname\n  HTMLParser.ElementStack.prototype.elementTypeInSpecificScope = function (target, set) {\n    for (var i = this.elements.length - 1; i >= 0; i--) {\n      var elt = this.elements[i];\n      if (elt instanceof target) return true;\n      if (isA(elt, set)) return false;\n    }\n    return false;\n  };\n  HTMLParser.ElementStack.prototype.inScope = function (tag) {\n    return this.inSpecificScope(tag, inScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.elementInScope = function (e) {\n    return this.elementInSpecificScope(e, inScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.elementTypeInScope = function (type) {\n    return this.elementTypeInSpecificScope(type, inScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.inButtonScope = function (tag) {\n    return this.inSpecificScope(tag, inButtonScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.inListItemScope = function (tag) {\n    return this.inSpecificScope(tag, inListItemScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.inTableScope = function (tag) {\n    return this.inSpecificScope(tag, inTableScopeSet);\n  };\n  HTMLParser.ElementStack.prototype.inSelectScope = function (tag) {\n    // Can't implement this one with inSpecificScope, since it involves\n    // a set defined by inverting another set. So implement manually.\n    for (var i = this.elements.length - 1; i >= 0; i--) {\n      var elt = this.elements[i];\n      if (elt.namespaceURI !== NAMESPACE.HTML) return false;\n      var localname = elt.localName;\n      if (localname === tag) return true;\n      if (localname !== \"optgroup\" && localname !== \"option\") return false;\n    }\n    return false;\n  };\n  HTMLParser.ElementStack.prototype.generateImpliedEndTags = function (butnot, thorough) {\n    var endTagSet = thorough ? thoroughImpliedEndTagsSet : impliedEndTagsSet;\n    for (var i = this.elements.length - 1; i >= 0; i--) {\n      var e = this.elements[i];\n      if (butnot && isA(e, butnot)) break;\n      if (!isA(this.elements[i], endTagSet)) break;\n    }\n    this.elements.length = i + 1;\n    this.top = this.elements[i];\n  };\n\n  /***\n   * The ActiveFormattingElements class\n   */\n  HTMLParser.ActiveFormattingElements = function AFE() {\n    this.list = []; // elements\n    this.attrs = []; // attribute tokens for cloning\n  };\n  HTMLParser.ActiveFormattingElements.prototype.MARKER = {\n    localName: \"|\"\n  };\n\n  /*\n  // For debugging\n  HTMLParser.ActiveFormattingElements.prototype.toString = function() {\n    return \"AFE: \" +\n    this.list.map(function(e) { return e.localName; }).join(\"-\");\n  }\n  */\n\n  HTMLParser.ActiveFormattingElements.prototype.insertMarker = function () {\n    this.list.push(this.MARKER);\n    this.attrs.push(this.MARKER);\n  };\n  HTMLParser.ActiveFormattingElements.prototype.push = function (elt, attrs) {\n    // Scan backwards: if there are already 3 copies of this element\n    // before we encounter a marker, then drop the last one\n    var count = 0;\n    for (var i = this.list.length - 1; i >= 0; i--) {\n      if (this.list[i] === this.MARKER) break;\n      // equal() is defined below\n      if (equal(elt, this.list[i], this.attrs[i])) {\n        count++;\n        if (count === 3) {\n          this.list.splice(i, 1);\n          this.attrs.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    // Now push the element onto the list\n    this.list.push(elt);\n\n    // Copy the attributes and push those on, too\n    var attrcopy = [];\n    for (var ii = 0; ii < attrs.length; ii++) {\n      attrcopy[ii] = attrs[ii];\n    }\n    this.attrs.push(attrcopy);\n\n    // This function defines equality of two elements for the purposes\n    // of the AFE list.  Note that it compares the new elements\n    // attributes to the saved array of attributes associated with\n    // the old element because a script could have changed the\n    // old element's set of attributes\n    function equal(newelt, oldelt, oldattrs) {\n      if (newelt.localName !== oldelt.localName) return false;\n      if (newelt._numattrs !== oldattrs.length) return false;\n      for (var i = 0, n = oldattrs.length; i < n; i++) {\n        var oldname = oldattrs[i][0];\n        var oldval = oldattrs[i][1];\n        if (!newelt.hasAttribute(oldname)) return false;\n        if (newelt.getAttribute(oldname) !== oldval) return false;\n      }\n      return true;\n    }\n  };\n  HTMLParser.ActiveFormattingElements.prototype.clearToMarker = function () {\n    for (var i = this.list.length - 1; i >= 0; i--) {\n      if (this.list[i] === this.MARKER) break;\n    }\n    if (i < 0) i = 0;\n    this.list.length = i;\n    this.attrs.length = i;\n  };\n\n  // Find and return the last element with the specified tag between the\n  // end of the list and the last marker on the list.\n  // Used when parsing <a> in_body_mode()\n  HTMLParser.ActiveFormattingElements.prototype.findElementByTag = function (tag) {\n    for (var i = this.list.length - 1; i >= 0; i--) {\n      var elt = this.list[i];\n      if (elt === this.MARKER) break;\n      if (elt.localName === tag) return elt;\n    }\n    return null;\n  };\n  HTMLParser.ActiveFormattingElements.prototype.indexOf = function (e) {\n    return this.list.lastIndexOf(e);\n  };\n\n  // Find the element e in the list and remove it\n  // Used when parsing <a> in_body()\n  HTMLParser.ActiveFormattingElements.prototype.remove = function (e) {\n    var idx = this.list.lastIndexOf(e);\n    if (idx !== -1) {\n      this.list.splice(idx, 1);\n      this.attrs.splice(idx, 1);\n    }\n  };\n\n  // Find element a in the list and replace it with element b\n  // XXX: Do I need to handle attributes here?\n  HTMLParser.ActiveFormattingElements.prototype.replace = function (a, b, attrs) {\n    var idx = this.list.lastIndexOf(a);\n    if (idx !== -1) {\n      this.list[idx] = b;\n      this.attrs[idx] = attrs;\n    }\n  };\n\n  // Find a in the list and insert b after it\n  // This is only used for insert a bookmark object, so the\n  // attrs array doesn't really matter\n  HTMLParser.ActiveFormattingElements.prototype.insertAfter = function (a, b) {\n    var idx = this.list.lastIndexOf(a);\n    if (idx !== -1) {\n      this.list.splice(idx, 0, b);\n      this.attrs.splice(idx, 0, b);\n    }\n  };\n\n  /***\n   * This is the parser factory function. It is the return value of\n   * the outer closure that it is defined within.  Most of the parser\n   * implementation details are inside this function.\n   */\n  function HTMLParser(address, fragmentContext, options) {\n    /***\n     * These are the parser's state variables\n     */\n    // Scanner state\n    var chars = null;\n    var numchars = 0; // Length of chars\n    var nextchar = 0; // Index of next char\n    var input_complete = false; // Becomes true when end() called.\n    var scanner_skip_newline = false; // If previous char was CR\n    var reentrant_invocations = 0;\n    var saved_scanner_state = [];\n    var leftovers = \"\";\n    var first_batch = true;\n    var paused = 0; // Becomes non-zero while loading scripts\n\n    // Tokenizer state\n    var tokenizer = data_state; // Current tokenizer state\n    var return_state;\n    var character_reference_code;\n    var tagnamebuf = \"\";\n    var lasttagname = \"\"; // holds the target end tag for text states\n    var tempbuf = [];\n    var attrnamebuf = \"\";\n    var attrvaluebuf = \"\";\n    var commentbuf = [];\n    var doctypenamebuf = [];\n    var doctypepublicbuf = [];\n    var doctypesystembuf = [];\n    var attributes = [];\n    var is_end_tag = false;\n\n    // Tree builder state\n    var parser = initial_mode; // Current insertion mode\n    var originalInsertionMode = null; // A saved insertion mode\n    var templateInsertionModes = []; // Stack of template insertion modes.\n    var stack = new HTMLParser.ElementStack(); // Stack of open elements\n    var afe = new HTMLParser.ActiveFormattingElements(); // mis-nested tags\n    var fragment = fragmentContext !== undefined; // For innerHTML, etc.\n    var head_element_pointer = null;\n    var form_element_pointer = null;\n    var scripting_enabled = true;\n    if (fragmentContext) {\n      scripting_enabled = fragmentContext.ownerDocument._scripting_enabled;\n    }\n    if (options && options.scripting_enabled === false) scripting_enabled = false;\n    var frameset_ok = true;\n    var force_quirks = false;\n    var pending_table_text;\n    var text_integration_mode; // XXX a spec bug workaround?\n\n    // A single run of characters, buffered up to be sent to\n    // the parser as a single string.\n    var textrun = [];\n    var textIncludesNUL = false;\n    var ignore_linefeed = false;\n\n    /***\n     * This is the parser object that will be the return value of this\n     * factory function, which is some 5000 lines below.\n     * Note that the variable \"parser\" is the current state of the\n     * parser's state machine.  This variable \"htmlparser\" is the\n     * return value and defines the public API of the parser\n     */\n    var htmlparser = {\n      document: function () {\n        return doc;\n      },\n      // Convenience function for internal use. Can only be called once,\n      // as it removes the nodes from `doc` to add them to fragment.\n      _asDocumentFragment: function () {\n        var frag = doc.createDocumentFragment();\n        var root = doc.firstChild;\n        while (root.hasChildNodes()) {\n          frag.appendChild(root.firstChild);\n        }\n        return frag;\n      },\n      // Internal function used from HTMLScriptElement to pause the\n      // parser while a script is being loaded from the network\n      pause: function () {\n        // print(\"pausing parser\");\n        paused++;\n      },\n      // Called when a script finishes loading\n      resume: function () {\n        // print(\"resuming parser\");\n        paused--;\n        // XXX: added this to force a resumption.\n        // Is this the right thing to do?\n        this.parse(\"\");\n      },\n      // Parse the HTML text s.\n      // The second argument should be true if there is no more\n      // text to be parsed, and should be false or omitted otherwise.\n      // The second argument must not be set for recursive invocations\n      // from document.write()\n      parse: function (s, end, shouldPauseFunc) {\n        var moreToDo;\n\n        // If we're paused, remember the text to parse, but\n        // don't parse it now.\n        // (Don't invoke shouldPauseFunc because we haven't handled 'end' yet.)\n        if (paused > 0) {\n          leftovers += s;\n          return true; // more to do\n        }\n        if (reentrant_invocations === 0) {\n          // A normal, top-level invocation\n          if (leftovers) {\n            s = leftovers + s;\n            leftovers = \"\";\n          }\n\n          // Add a special marker character to the end of\n          // the buffer.  If the scanner is at the end of\n          // the buffer and input_complete is set, then this\n          // character will transform into an EOF token.\n          // Having an actual character that represents EOF\n          // in the character buffer makes lookahead regexp\n          // matching work more easily, and this is\n          // important for character references.\n          if (end) {\n            s += \"\\uFFFF\";\n            input_complete = true; // Makes scanChars() send EOF\n          }\n          chars = s;\n          numchars = s.length;\n          nextchar = 0;\n          if (first_batch) {\n            // We skip a leading Byte Order Mark (\\uFEFF)\n            // on first batch of text we're given\n            first_batch = false;\n            if (chars.charCodeAt(0) === 0xFEFF) nextchar = 1;\n          }\n          reentrant_invocations++;\n          moreToDo = scanChars(shouldPauseFunc);\n          leftovers = chars.substring(nextchar, numchars);\n          reentrant_invocations--;\n        } else {\n          // This is the re-entrant case, which we have to\n          // handle a little differently.\n          reentrant_invocations++;\n\n          // Save current scanner state\n          saved_scanner_state.push(chars, numchars, nextchar);\n\n          // Set new scanner state\n          chars = s;\n          numchars = s.length;\n          nextchar = 0;\n\n          // Now scan as many of these new chars as we can\n          scanChars();\n          moreToDo = false;\n          leftovers = chars.substring(nextchar, numchars);\n\n          // restore old scanner state\n          nextchar = saved_scanner_state.pop();\n          numchars = saved_scanner_state.pop();\n          chars = saved_scanner_state.pop();\n\n          // If there were leftover chars from this invocation\n          // insert them into the pending invocation's buffer\n          // and trim already processed chars at the same time\n          if (leftovers) {\n            chars = leftovers + chars.substring(nextchar);\n            numchars = chars.length;\n            nextchar = 0;\n            leftovers = \"\";\n          }\n\n          // Decrement the counter\n          reentrant_invocations--;\n        }\n        return moreToDo;\n      }\n    };\n\n    // This is the document we'll be building up\n    var doc = new Document(true, address);\n\n    // The document needs to know about the parser, for document.write().\n    // This _parser property will be deleted when we're done parsing.\n    doc._parser = htmlparser;\n\n    // XXX I think that any document we use this parser on should support\n    // scripts. But I may need to configure that through a parser parameter\n    // Only documents with windows (\"browsing contexts\" to be precise)\n    // allow scripting.\n    doc._scripting_enabled = scripting_enabled;\n\n    /***\n     * The actual code of the HTMLParser() factory function begins here.\n     */\n\n    if (fragmentContext) {\n      // for innerHTML parsing\n      if (fragmentContext.ownerDocument._quirks) doc._quirks = true;\n      if (fragmentContext.ownerDocument._limitedQuirks) doc._limitedQuirks = true;\n\n      // Set the initial tokenizer state\n      if (fragmentContext.namespaceURI === NAMESPACE.HTML) {\n        switch (fragmentContext.localName) {\n          case \"title\":\n          case \"textarea\":\n            tokenizer = rcdata_state;\n            break;\n          case \"style\":\n          case \"xmp\":\n          case \"iframe\":\n          case \"noembed\":\n          case \"noframes\":\n          case \"script\":\n          case \"plaintext\":\n            tokenizer = plaintext_state;\n            break;\n        }\n      }\n      var root = doc.createElement(\"html\");\n      doc._appendChild(root);\n      stack.push(root);\n      if (fragmentContext instanceof impl.HTMLTemplateElement) {\n        templateInsertionModes.push(in_template_mode);\n      }\n      resetInsertionMode();\n      for (var e = fragmentContext; e !== null; e = e.parentElement) {\n        if (e instanceof impl.HTMLFormElement) {\n          form_element_pointer = e;\n          break;\n        }\n      }\n    }\n\n    /***\n     * Scanner functions\n     */\n    // Loop through the characters in chars, and pass them one at a time\n    // to the tokenizer FSM. Return when no more characters can be processed\n    // (This may leave 1 or more characters in the buffer: like a CR\n    // waiting to see if the next char is LF, or for states that require\n    // lookahead...)\n    function scanChars(shouldPauseFunc) {\n      var codepoint, s, pattern, eof;\n      while (nextchar < numchars) {\n        // If we just tokenized a </script> tag, then the paused flag\n        // may have been set to tell us to stop tokenizing while\n        // the script is loading\n        if (paused > 0 || shouldPauseFunc && shouldPauseFunc()) {\n          return true;\n        }\n        switch (typeof tokenizer.lookahead) {\n          case 'undefined':\n            codepoint = chars.charCodeAt(nextchar++);\n            if (scanner_skip_newline) {\n              scanner_skip_newline = false;\n              if (codepoint === 0x000A) {\n                nextchar++;\n                continue;\n              }\n            }\n            switch (codepoint) {\n              case 0x000D:\n                // CR always turns into LF, but if the next character\n                // is LF, then that second LF is skipped.\n                if (nextchar < numchars) {\n                  if (chars.charCodeAt(nextchar) === 0x000A) nextchar++;\n                } else {\n                  // We don't know the next char right now, so we\n                  // can't check if it is a LF.  So set a flag\n                  scanner_skip_newline = true;\n                }\n\n                // In either case, emit a LF\n                tokenizer(0x000A);\n                break;\n              case 0xFFFF:\n                if (input_complete && nextchar === numchars) {\n                  tokenizer(EOF); // codepoint will be 0xFFFF here\n                  break;\n                }\n              /* falls through */\n              default:\n                tokenizer(codepoint);\n                break;\n            }\n            break;\n          case 'number':\n            codepoint = chars.charCodeAt(nextchar);\n\n            // The only tokenizer states that require fixed lookahead\n            // only consume alphanum characters, so we don't have\n            // to worry about CR and LF in this case\n\n            // tokenizer wants n chars of lookahead\n            var n = tokenizer.lookahead;\n            var needsString = true;\n            if (n < 0) {\n              needsString = false;\n              n = -n;\n            }\n            if (n < numchars - nextchar) {\n              // If we can look ahead that far\n              s = needsString ? chars.substring(nextchar, nextchar + n) : null;\n              eof = false;\n            } else {\n              // if we don't have that many characters\n              if (input_complete) {\n                // If no more are coming\n                // Just return what we have\n                s = needsString ? chars.substring(nextchar, numchars) : null;\n                eof = true;\n                if (codepoint === 0xFFFF && nextchar === numchars - 1) codepoint = EOF;\n              } else {\n                // Return now and wait for more chars later\n                return true;\n              }\n            }\n            tokenizer(codepoint, s, eof);\n            break;\n          case 'string':\n            codepoint = chars.charCodeAt(nextchar);\n\n            // tokenizer wants characters up to a matching string\n            pattern = tokenizer.lookahead;\n            var pos = chars.indexOf(pattern, nextchar);\n            if (pos !== -1) {\n              s = chars.substring(nextchar, pos + pattern.length);\n              eof = false;\n            } else {\n              // No match\n              // If more characters coming, wait for them\n              if (!input_complete) return true;\n\n              // Otherwise, we've got to return what we've got\n              s = chars.substring(nextchar, numchars);\n              if (codepoint === 0xFFFF && nextchar === numchars - 1) codepoint = EOF;\n              eof = true;\n            }\n\n            // The tokenizer states that require this kind of\n            // lookahead have to be careful to handle CR characters\n            // correctly\n            tokenizer(codepoint, s, eof);\n            break;\n        }\n      }\n      return false; // no more characters to scan!\n    }\n\n    /***\n     * Tokenizer utility functions\n     */\n    function addAttribute(name, value) {\n      // Make sure there isn't already an attribute with this name\n      // If there is, ignore this one.\n      for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i][0] === name) return;\n      }\n      if (value !== undefined) {\n        attributes.push([name, value]);\n      } else {\n        attributes.push([name]);\n      }\n    }\n\n    // Shortcut for simple attributes\n    function handleSimpleAttribute() {\n      SIMPLEATTR.lastIndex = nextchar - 1;\n      var matched = SIMPLEATTR.exec(chars);\n      if (!matched) throw new Error(\"should never happen\");\n      var name = matched[1];\n      if (!name) return false;\n      var value = matched[2];\n      var len = value.length;\n      switch (value[0]) {\n        case '\"':\n        case \"'\":\n          value = value.substring(1, len - 1);\n          nextchar += matched[0].length - 1;\n          tokenizer = after_attribute_value_quoted_state;\n          break;\n        default:\n          tokenizer = before_attribute_name_state;\n          nextchar += matched[0].length - 1;\n          value = value.substring(0, len - 1);\n          break;\n      }\n\n      // Make sure there isn't already an attribute with this name\n      // If there is, ignore this one.\n      for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i][0] === name) return true;\n      }\n      attributes.push([name, value]);\n      return true;\n    }\n    function beginTagName() {\n      is_end_tag = false;\n      tagnamebuf = \"\";\n      attributes.length = 0;\n    }\n    function beginEndTagName() {\n      is_end_tag = true;\n      tagnamebuf = \"\";\n      attributes.length = 0;\n    }\n    function beginTempBuf() {\n      tempbuf.length = 0;\n    }\n    function beginAttrName() {\n      attrnamebuf = \"\";\n    }\n    function beginAttrValue() {\n      attrvaluebuf = \"\";\n    }\n    function beginComment() {\n      commentbuf.length = 0;\n    }\n    function beginDoctype() {\n      doctypenamebuf.length = 0;\n      doctypepublicbuf = null;\n      doctypesystembuf = null;\n    }\n    function beginDoctypePublicId() {\n      doctypepublicbuf = [];\n    }\n    function beginDoctypeSystemId() {\n      doctypesystembuf = [];\n    }\n    function forcequirks() {\n      force_quirks = true;\n    }\n    function cdataAllowed() {\n      return stack.top && stack.top.namespaceURI !== \"http://www.w3.org/1999/xhtml\";\n    }\n\n    // Return true if the codepoints in the specified buffer match the\n    // characters of lasttagname\n    function appropriateEndTag(buf) {\n      return lasttagname === buf;\n    }\n    function flushText() {\n      if (textrun.length > 0) {\n        var s = buf2str(textrun);\n        textrun.length = 0;\n        if (ignore_linefeed) {\n          ignore_linefeed = false;\n          if (s[0] === \"\\n\") s = s.substring(1);\n          if (s.length === 0) return;\n        }\n        insertToken(TEXT, s);\n        textIncludesNUL = false;\n      }\n      ignore_linefeed = false;\n    }\n\n    // Consume chars matched by the pattern and return them as a string. Starts\n    // matching at the current position, so users should drop the current char\n    // otherwise.\n    function getMatchingChars(pattern) {\n      pattern.lastIndex = nextchar - 1;\n      var match = pattern.exec(chars);\n      if (match && match.index === nextchar - 1) {\n        match = match[0];\n        nextchar += match.length - 1;\n        /* Careful!  Make sure we haven't matched the EOF character! */\n        if (input_complete && nextchar === numchars) {\n          // Oops, backup one.\n          match = match.slice(0, -1);\n          nextchar--;\n        }\n        return match;\n      } else {\n        throw new Error(\"should never happen\");\n      }\n    }\n\n    // emit a string of chars that match a regexp\n    // Returns false if no chars matched.\n    function emitCharsWhile(pattern) {\n      pattern.lastIndex = nextchar - 1;\n      var match = pattern.exec(chars)[0];\n      if (!match) return false;\n      emitCharString(match);\n      nextchar += match.length - 1;\n      return true;\n    }\n\n    // This is used by CDATA sections\n    function emitCharString(s) {\n      if (textrun.length > 0) flushText();\n      if (ignore_linefeed) {\n        ignore_linefeed = false;\n        if (s[0] === \"\\n\") s = s.substring(1);\n        if (s.length === 0) return;\n      }\n      insertToken(TEXT, s);\n    }\n    function emitTag() {\n      if (is_end_tag) insertToken(ENDTAG, tagnamebuf);else {\n        // Remember the last open tag we emitted\n        var tagname = tagnamebuf;\n        tagnamebuf = \"\";\n        lasttagname = tagname;\n        insertToken(TAG, tagname, attributes);\n      }\n    }\n\n    // A shortcut: look ahead and if this is a open or close tag\n    // in lowercase with no spaces and no attributes, just emit it now.\n    function emitSimpleTag() {\n      if (nextchar === numchars) {\n        return false; /* not even 1 char left */\n      }\n      SIMPLETAG.lastIndex = nextchar;\n      var matched = SIMPLETAG.exec(chars);\n      if (!matched) throw new Error(\"should never happen\");\n      var tagname = matched[2];\n      if (!tagname) return false;\n      var endtag = matched[1];\n      if (endtag) {\n        nextchar += tagname.length + 2;\n        insertToken(ENDTAG, tagname);\n      } else {\n        nextchar += tagname.length + 1;\n        lasttagname = tagname;\n        insertToken(TAG, tagname, NOATTRS);\n      }\n      return true;\n    }\n    function emitSelfClosingTag() {\n      if (is_end_tag) insertToken(ENDTAG, tagnamebuf, null, true);else {\n        insertToken(TAG, tagnamebuf, attributes, true);\n      }\n    }\n    function emitDoctype() {\n      insertToken(DOCTYPE, buf2str(doctypenamebuf), doctypepublicbuf ? buf2str(doctypepublicbuf) : undefined, doctypesystembuf ? buf2str(doctypesystembuf) : undefined);\n    }\n    function emitEOF() {\n      flushText();\n      parser(EOF); // EOF never goes to insertForeignContent()\n      doc.modclock = 1; // Start tracking modifications\n    }\n\n    // Insert a token, either using the current parser insertion mode\n    // (for HTML stuff) or using the insertForeignToken() method.\n    var insertToken = htmlparser.insertToken = function insertToken(t, value, arg3, arg4) {\n      flushText();\n      var current = stack.top;\n      if (!current || current.namespaceURI === NAMESPACE.HTML) {\n        // This is the common case\n        parser(t, value, arg3, arg4);\n      } else {\n        // Otherwise we may need to insert this token as foreign content\n        if (t !== TAG && t !== TEXT) {\n          insertForeignToken(t, value, arg3, arg4);\n        } else {\n          // But in some cases we treat it as regular content\n          if (isMathmlTextIntegrationPoint(current) && (t === TEXT || t === TAG && value !== \"mglyph\" && value !== \"malignmark\") || t === TAG && value === \"svg\" && current.namespaceURI === NAMESPACE.MATHML && current.localName === \"annotation-xml\" || isHTMLIntegrationPoint(current)) {\n            // XXX: the text_integration_mode stuff is an\n            // attempted bug workaround of mine\n            text_integration_mode = true;\n            parser(t, value, arg3, arg4);\n            text_integration_mode = false;\n          }\n          // Otherwise it is foreign content\n          else {\n            insertForeignToken(t, value, arg3, arg4);\n          }\n        }\n      }\n    };\n\n    /***\n     * Tree building utility functions\n     */\n    function insertComment(data) {\n      var parent = stack.top;\n      if (foster_parent_mode && isA(parent, tablesectionrowSet)) {\n        fosterParent(function (doc) {\n          return doc.createComment(data);\n        });\n      } else {\n        // \"If the adjusted insertion location is inside a template element,\n        // let it instead be inside the template element's template contents\"\n        if (parent instanceof impl.HTMLTemplateElement) {\n          parent = parent.content;\n        }\n        parent._appendChild(parent.ownerDocument.createComment(data));\n      }\n    }\n    function insertText(s) {\n      var parent = stack.top;\n      if (foster_parent_mode && isA(parent, tablesectionrowSet)) {\n        fosterParent(function (doc) {\n          return doc.createTextNode(s);\n        });\n      } else {\n        // \"If the adjusted insertion location is inside a template element,\n        // let it instead be inside the template element's template contents\"\n        if (parent instanceof impl.HTMLTemplateElement) {\n          parent = parent.content;\n        }\n        // \"If there is a Text node immediately before the adjusted insertion\n        // location, then append data to that Text node's data.\"\n        var lastChild = parent.lastChild;\n        if (lastChild && lastChild.nodeType === Node.TEXT_NODE) {\n          lastChild.appendData(s);\n        } else {\n          parent._appendChild(parent.ownerDocument.createTextNode(s));\n        }\n      }\n    }\n    function createHTMLElt(doc, name, attrs) {\n      // Create the element this way, rather than with\n      // doc.createElement because createElement() does error\n      // checking on the element name that we need to avoid here.\n      var elt = html.createElement(doc, name, null);\n      if (attrs) {\n        for (var i = 0, n = attrs.length; i < n; i++) {\n          // Use the _ version to avoid testing the validity\n          // of the attribute name\n          elt._setAttribute(attrs[i][0], attrs[i][1]);\n        }\n      }\n      // XXX\n      // If the element is a resettable form element,\n      // run its reset algorithm now\n      // XXX\n      // handle case where form-element-pointer is not null\n      return elt;\n    }\n\n    // The in_table insertion mode turns on this flag, and that makes\n    // insertHTMLElement use the foster parenting algorithm for elements\n    // tags inside a table\n    var foster_parent_mode = false;\n    function insertHTMLElement(name, attrs) {\n      var elt = insertElement(function (doc) {\n        return createHTMLElt(doc, name, attrs);\n      });\n\n      // XXX\n      // If this is a form element, set its form attribute property here\n      if (isA(elt, formassociatedSet)) {\n        elt._form = form_element_pointer;\n      }\n      return elt;\n    }\n\n    // Insert the element into the open element or foster parent it\n    function insertElement(eltFunc) {\n      var elt;\n      if (foster_parent_mode && isA(stack.top, tablesectionrowSet)) {\n        elt = fosterParent(eltFunc);\n      } else if (stack.top instanceof impl.HTMLTemplateElement) {\n        // \"If the adjusted insertion location is inside a template element,\n        // let it instead be inside the template element's template contents\"\n        elt = eltFunc(stack.top.content.ownerDocument);\n        stack.top.content._appendChild(elt);\n      } else {\n        elt = eltFunc(stack.top.ownerDocument);\n        stack.top._appendChild(elt);\n      }\n      stack.push(elt);\n      return elt;\n    }\n    function insertForeignElement(name, attrs, ns) {\n      return insertElement(function (doc) {\n        // We need to prevent createElementNS from trying to parse `name` as a\n        // `qname`, so use an internal Document#_createElementNS() interface.\n        var elt = doc._createElementNS(name, ns, null);\n        if (attrs) {\n          for (var i = 0, n = attrs.length; i < n; i++) {\n            var attr = attrs[i];\n            if (attr.length === 2) elt._setAttribute(attr[0], attr[1]);else {\n              elt._setAttributeNS(attr[2], attr[0], attr[1]);\n            }\n          }\n        }\n        return elt;\n      });\n    }\n    function lastElementOfType(type) {\n      for (var i = stack.elements.length - 1; i >= 0; i--) {\n        if (stack.elements[i] instanceof type) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    function fosterParent(eltFunc) {\n      var parent,\n        before,\n        lastTable = -1,\n        lastTemplate = -1,\n        elt;\n      lastTable = lastElementOfType(impl.HTMLTableElement);\n      lastTemplate = lastElementOfType(impl.HTMLTemplateElement);\n      if (lastTemplate >= 0 && (lastTable < 0 || lastTemplate > lastTable)) {\n        parent = stack.elements[lastTemplate];\n      } else if (lastTable >= 0) {\n        parent = stack.elements[lastTable].parentNode;\n        if (parent) {\n          before = stack.elements[lastTable];\n        } else {\n          parent = stack.elements[lastTable - 1];\n        }\n      }\n      if (!parent) parent = stack.elements[0]; // the `html` element.\n\n      // \"If the adjusted insertion location is inside a template element,\n      // let it instead be inside the template element's template contents\"\n      if (parent instanceof impl.HTMLTemplateElement) {\n        parent = parent.content;\n      }\n      // Create element in the appropriate document.\n      elt = eltFunc(parent.ownerDocument);\n      if (elt.nodeType === Node.TEXT_NODE) {\n        var prev;\n        if (before) prev = before.previousSibling;else prev = parent.lastChild;\n        if (prev && prev.nodeType === Node.TEXT_NODE) {\n          prev.appendData(elt.data);\n          return elt;\n        }\n      }\n      if (before) parent.insertBefore(elt, before);else parent._appendChild(elt);\n      return elt;\n    }\n    function resetInsertionMode() {\n      var last = false;\n      for (var i = stack.elements.length - 1; i >= 0; i--) {\n        var node = stack.elements[i];\n        if (i === 0) {\n          last = true;\n          if (fragment) {\n            node = fragmentContext;\n          }\n        }\n        if (node.namespaceURI === NAMESPACE.HTML) {\n          var tag = node.localName;\n          switch (tag) {\n            case \"select\":\n              for (var j = i; j > 0;) {\n                var ancestor = stack.elements[--j];\n                if (ancestor instanceof impl.HTMLTemplateElement) {\n                  break;\n                } else if (ancestor instanceof impl.HTMLTableElement) {\n                  parser = in_select_in_table_mode;\n                  return;\n                }\n              }\n              parser = in_select_mode;\n              return;\n            case \"tr\":\n              parser = in_row_mode;\n              return;\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              parser = in_table_body_mode;\n              return;\n            case \"caption\":\n              parser = in_caption_mode;\n              return;\n            case \"colgroup\":\n              parser = in_column_group_mode;\n              return;\n            case \"table\":\n              parser = in_table_mode;\n              return;\n            case \"template\":\n              parser = templateInsertionModes[templateInsertionModes.length - 1];\n              return;\n            case \"body\":\n              parser = in_body_mode;\n              return;\n            case \"frameset\":\n              parser = in_frameset_mode;\n              return;\n            case \"html\":\n              if (head_element_pointer === null) {\n                parser = before_head_mode;\n              } else {\n                parser = after_head_mode;\n              }\n              return;\n            default:\n              if (!last) {\n                if (tag === \"head\") {\n                  parser = in_head_mode;\n                  return;\n                }\n                if (tag === \"td\" || tag === \"th\") {\n                  parser = in_cell_mode;\n                  return;\n                }\n              }\n          }\n        }\n        if (last) {\n          parser = in_body_mode;\n          return;\n        }\n      }\n    }\n    function parseRawText(name, attrs) {\n      insertHTMLElement(name, attrs);\n      tokenizer = rawtext_state;\n      originalInsertionMode = parser;\n      parser = text_mode;\n    }\n    function parseRCDATA(name, attrs) {\n      insertHTMLElement(name, attrs);\n      tokenizer = rcdata_state;\n      originalInsertionMode = parser;\n      parser = text_mode;\n    }\n\n    // Make a copy of element i on the list of active formatting\n    // elements, using its original attributes, not current\n    // attributes (which may have been modified by a script)\n    function afeclone(doc, i) {\n      return {\n        elt: createHTMLElt(doc, afe.list[i].localName, afe.attrs[i]),\n        attrs: afe.attrs[i]\n      };\n    }\n    function afereconstruct() {\n      if (afe.list.length === 0) return;\n      var entry = afe.list[afe.list.length - 1];\n      // If the last is a marker , do nothing\n      if (entry === afe.MARKER) return;\n      // Or if it is an open element, do nothing\n      if (stack.elements.lastIndexOf(entry) !== -1) return;\n\n      // Loop backward through the list until we find a marker or an\n      // open element, and then move forward one from there.\n      for (var i = afe.list.length - 2; i >= 0; i--) {\n        entry = afe.list[i];\n        if (entry === afe.MARKER) break;\n        if (stack.elements.lastIndexOf(entry) !== -1) break;\n      }\n\n      // Now loop forward, starting from the element after the current\n      // one, recreating formatting elements and pushing them back onto\n      // the list of open elements\n      for (i = i + 1; i < afe.list.length; i++) {\n        var newelt = insertElement(function (doc) {\n          return afeclone(doc, i).elt;\n        });\n        afe.list[i] = newelt;\n      }\n    }\n\n    // Used by the adoptionAgency() function\n    var BOOKMARK = {\n      localName: \"BM\"\n    };\n    function adoptionAgency(tag) {\n      // If the current node is an HTML element whose tag name is subject,\n      // and the current node is not in the list of active formatting\n      // elements, then pop the current node off the stack of open\n      // elements and abort these steps.\n      if (isA(stack.top, tag) && afe.indexOf(stack.top) === -1) {\n        stack.pop();\n        return true; // no more handling required\n      }\n\n      // Let outer loop counter be zero.\n      var outer = 0;\n\n      // Outer loop: If outer loop counter is greater than or\n      // equal to eight, then abort these steps.\n      while (outer < 8) {\n        // Increment outer loop counter by one.\n        outer++;\n\n        // Let the formatting element be the last element in the list\n        // of active formatting elements that: is between the end of\n        // the list and the last scope marker in the list, if any, or\n        // the start of the list otherwise, and has the same tag name\n        // as the token.\n        var fmtelt = afe.findElementByTag(tag);\n\n        // If there is no such node, then abort these steps and instead\n        // act as described in the \"any other end tag\" entry below.\n        if (!fmtelt) {\n          return false; // false means handle by the default case\n        }\n\n        // Otherwise, if there is such a node, but that node is not in\n        // the stack of open elements, then this is a parse error;\n        // remove the element from the list, and abort these steps.\n        var index = stack.elements.lastIndexOf(fmtelt);\n        if (index === -1) {\n          afe.remove(fmtelt);\n          return true; // true means no more handling required\n        }\n\n        // Otherwise, if there is such a node, and that node is also in\n        // the stack of open elements, but the element is not in scope,\n        // then this is a parse error; ignore the token, and abort\n        // these steps.\n        if (!stack.elementInScope(fmtelt)) {\n          return true;\n        }\n\n        // Let the furthest block be the topmost node in the stack of\n        // open elements that is lower in the stack than the formatting\n        // element, and is an element in the special category. There\n        // might not be one.\n        var furthestblock = null,\n          furthestblockindex;\n        for (var i = index + 1; i < stack.elements.length; i++) {\n          if (isA(stack.elements[i], specialSet)) {\n            furthestblock = stack.elements[i];\n            furthestblockindex = i;\n            break;\n          }\n        }\n\n        // If there is no furthest block, then the UA must skip the\n        // subsequent steps and instead just pop all the nodes from the\n        // bottom of the stack of open elements, from the current node\n        // up to and including the formatting element, and remove the\n        // formatting element from the list of active formatting\n        // elements.\n        if (!furthestblock) {\n          stack.popElement(fmtelt);\n          afe.remove(fmtelt);\n          return true;\n        } else {\n          // Let the common ancestor be the element immediately above\n          // the formatting element in the stack of open elements.\n          var ancestor = stack.elements[index - 1];\n\n          // Let a bookmark note the position of the formatting\n          // element in the list of active formatting elements\n          // relative to the elements on either side of it in the\n          // list.\n          afe.insertAfter(fmtelt, BOOKMARK);\n\n          // Let node and last node be the furthest block.\n          var node = furthestblock;\n          var lastnode = furthestblock;\n          var nodeindex = furthestblockindex;\n          var nodeafeindex;\n\n          // Let inner loop counter be zero.\n          var inner = 0;\n          while (true) {\n            // Increment inner loop counter by one.\n            inner++;\n\n            // Let node be the element immediately above node in\n            // the stack of open elements, or if node is no longer\n            // in the stack of open elements (e.g. because it got\n            // removed by this algorithm), the element that was\n            // immediately above node in the stack of open elements\n            // before node was removed.\n            node = stack.elements[--nodeindex];\n\n            // If node is the formatting element, then go\n            // to the next step in the overall algorithm.\n            if (node === fmtelt) break;\n\n            // If the inner loop counter is greater than three and node\n            // is in the list of active formatting elements, then remove\n            // node from the list of active formatting elements.\n            nodeafeindex = afe.indexOf(node);\n            if (inner > 3 && nodeafeindex !== -1) {\n              afe.remove(node);\n              nodeafeindex = -1;\n            }\n\n            // If node is not in the list of active formatting\n            // elements, then remove node from the stack of open\n            // elements and then go back to the step labeled inner\n            // loop.\n            if (nodeafeindex === -1) {\n              stack.removeElement(node);\n              continue;\n            }\n\n            // Create an element for the token for which the\n            // element node was created with common ancestor as\n            // the intended parent, replace the entry for node\n            // in the list of active formatting elements with an\n            // entry for the new element, replace the entry for\n            // node in the stack of open elements with an entry for\n            // the new element, and let node be the new element.\n            var newelt = afeclone(ancestor.ownerDocument, nodeafeindex);\n            afe.replace(node, newelt.elt, newelt.attrs);\n            stack.elements[nodeindex] = newelt.elt;\n            node = newelt.elt;\n\n            // If last node is the furthest block, then move the\n            // aforementioned bookmark to be immediately after the\n            // new node in the list of active formatting elements.\n            if (lastnode === furthestblock) {\n              afe.remove(BOOKMARK);\n              afe.insertAfter(newelt.elt, BOOKMARK);\n            }\n\n            // Insert last node into node, first removing it from\n            // its previous parent node if any.\n            node._appendChild(lastnode);\n\n            // Let last node be node.\n            lastnode = node;\n          }\n\n          // If the common ancestor node is a table, tbody, tfoot,\n          // thead, or tr element, then, foster parent whatever last\n          // node ended up being in the previous step, first removing\n          // it from its previous parent node if any.\n          if (foster_parent_mode && isA(ancestor, tablesectionrowSet)) {\n            fosterParent(function () {\n              return lastnode;\n            });\n          }\n          // Otherwise, append whatever last node ended up being in\n          // the previous step to the common ancestor node, first\n          // removing it from its previous parent node if any.\n          else if (ancestor instanceof impl.HTMLTemplateElement) {\n            ancestor.content._appendChild(lastnode);\n          } else {\n            ancestor._appendChild(lastnode);\n          }\n\n          // Create an element for the token for which the\n          // formatting element was created, with furthest block\n          // as the intended parent.\n          var newelt2 = afeclone(furthestblock.ownerDocument, afe.indexOf(fmtelt));\n\n          // Take all of the child nodes of the furthest block and\n          // append them to the element created in the last step.\n          while (furthestblock.hasChildNodes()) {\n            newelt2.elt._appendChild(furthestblock.firstChild);\n          }\n\n          // Append that new element to the furthest block.\n          furthestblock._appendChild(newelt2.elt);\n\n          // Remove the formatting element from the list of active\n          // formatting elements, and insert the new element into the\n          // list of active formatting elements at the position of\n          // the aforementioned bookmark.\n          afe.remove(fmtelt);\n          afe.replace(BOOKMARK, newelt2.elt, newelt2.attrs);\n\n          // Remove the formatting element from the stack of open\n          // elements, and insert the new element into the stack of\n          // open elements immediately below the position of the\n          // furthest block in that stack.\n          stack.removeElement(fmtelt);\n          var pos = stack.elements.lastIndexOf(furthestblock);\n          stack.elements.splice(pos + 1, 0, newelt2.elt);\n        }\n      }\n      return true;\n    }\n\n    // We do this when we get /script in in_text_mode\n    function handleScriptEnd() {\n      // XXX:\n      // This is just a stub implementation right now and doesn't run scripts.\n      // Getting this method right involves the event loop, URL resolution\n      // script fetching etc. For now I just want to be able to parse\n      // documents and test the parser.\n\n      //var script = stack.top;\n      stack.pop();\n      parser = originalInsertionMode;\n      //script._prepare();\n      return;\n\n      // XXX: here is what this method is supposed to do\n\n      // Provide a stable state.\n\n      // Let script be the current node (which will be a script\n      // element).\n\n      // Pop the current node off the stack of open elements.\n\n      // Switch the insertion mode to the original insertion mode.\n\n      // Let the old insertion point have the same value as the current\n      // insertion point. Let the insertion point be just before the\n      // next input character.\n\n      // Increment the parser's script nesting level by one.\n\n      // Prepare the script. This might cause some script to execute,\n      // which might cause new characters to be inserted into the\n      // tokenizer, and might cause the tokenizer to output more tokens,\n      // resulting in a reentrant invocation of the parser.\n\n      // Decrement the parser's script nesting level by one. If the\n      // parser's script nesting level is zero, then set the parser\n      // pause flag to false.\n\n      // Let the insertion point have the value of the old insertion\n      // point. (In other words, restore the insertion point to its\n      // previous value. This value might be the \"undefined\" value.)\n\n      // At this stage, if there is a pending parsing-blocking script,\n      // then:\n\n      // If the script nesting level is not zero:\n\n      //   Set the parser pause flag to true, and abort the processing\n      //   of any nested invocations of the tokenizer, yielding\n      //   control back to the caller. (Tokenization will resume when\n      //   the caller returns to the \"outer\" tree construction stage.)\n\n      //   The tree construction stage of this particular parser is\n      //   being called reentrantly, say from a call to\n      //   document.write().\n\n      // Otherwise:\n\n      //     Run these steps:\n\n      //       Let the script be the pending parsing-blocking\n      //       script. There is no longer a pending\n      //       parsing-blocking script.\n\n      //       Block the tokenizer for this instance of the HTML\n      //       parser, such that the event loop will not run tasks\n      //       that invoke the tokenizer.\n\n      //       If the parser's Document has a style sheet that is\n      //       blocking scripts or the script's \"ready to be\n      //       parser-executed\" flag is not set: spin the event\n      //       loop until the parser's Document has no style sheet\n      //       that is blocking scripts and the script's \"ready to\n      //       be parser-executed\" flag is set.\n\n      //       Unblock the tokenizer for this instance of the HTML\n      //       parser, such that tasks that invoke the tokenizer\n      //       can again be run.\n\n      //       Let the insertion point be just before the next\n      //       input character.\n\n      //       Increment the parser's script nesting level by one\n      //       (it should be zero before this step, so this sets\n      //       it to one).\n\n      //       Execute the script.\n\n      //       Decrement the parser's script nesting level by\n      //       one. If the parser's script nesting level is zero\n      //       (which it always should be at this point), then set\n      //       the parser pause flag to false.\n\n      //       Let the insertion point be undefined again.\n\n      //       If there is once again a pending parsing-blocking\n      //       script, then repeat these steps from step 1.\n    }\n    function stopParsing() {\n      // XXX This is just a temporary implementation to get the parser working.\n      // A full implementation involves scripts and events and the event loop.\n\n      // Remove the link from document to parser.\n      // This is instead of \"set the insertion point to undefined\".\n      // It means that document.write() can't write into the doc anymore.\n      delete doc._parser;\n      stack.elements.length = 0; // pop everything off\n\n      // If there is a window object associated with the document\n      // then trigger an load event on it\n      if (doc.defaultView) {\n        doc.defaultView.dispatchEvent(new impl.Event(\"load\", {}));\n      }\n    }\n\n    /****\n     * Tokenizer states\n     */\n\n    /**\n     * This file was partially mechanically generated from\n     * http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html\n     *\n     * After mechanical conversion, it was further converted from\n     * prose to JS by hand, but the intent is that it is a very\n     * faithful rendering of the HTML tokenization spec in\n     * JavaScript.\n     *\n     * It is not a goal of this tokenizer to detect or report\n     * parse errors.\n     *\n     * XXX The tokenizer is supposed to work with straight UTF32\n     * codepoints. But I don't think it has any dependencies on\n     * any character outside of the BMP so I think it is safe to\n     * pass it UTF16 characters. I don't think it will ever change\n     * state in the middle of a surrogate pair.\n     */\n\n    /*\n     * Each state is represented by a function.  For most states, the\n     * scanner simply passes the next character (as an integer\n     * codepoint) to the current state function and automatically\n     * consumes the character.  If the state function can't process\n     * the character it can call pushback() to push it back to the\n     * scanner.\n     *\n     * Some states require lookahead, though.  If a state function has\n     * a lookahead property, then it is invoked differently.  In this\n     * case, the scanner invokes the function with 3 arguments: 1) the\n     * next codepoint 2) a string of lookahead text 3) a boolean that\n     * is true if the lookahead goes all the way to the EOF. (XXX\n     * actually maybe this third is not necessary... the lookahead\n     * could just include \\uFFFF?)\n     *\n     * If the lookahead property of a state function is an integer, it\n     * specifies the number of characters required. If it is a string,\n     * then the scanner will scan for that string and return all\n     * characters up to and including that sequence, or up to EOF.  If\n     * the lookahead property is a regexp, then the scanner will match\n     * the regexp at the current point and return the matching string.\n     *\n     * States that require lookahead are responsible for explicitly\n     * consuming the characters they process. They do this by\n     * incrementing nextchar by the number of processed characters.\n     */\n    function reconsume(c, new_state) {\n      tokenizer = new_state;\n      nextchar--; // pushback\n    }\n    function data_state(c) {\n      switch (c) {\n        case 0x0026:\n          // AMPERSAND\n          return_state = data_state;\n          tokenizer = character_reference_state;\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          if (emitSimpleTag())\n            // Shortcut for <p>, <dl>, </div> etc.\n            break;\n          tokenizer = tag_open_state;\n          break;\n        case 0x0000:\n          // NULL\n          // Usually null characters emitted by the tokenizer will be\n          // ignored by the tree builder, but sometimes they'll be\n          // converted to \\uFFFD.  I don't want to have the search every\n          // string emitted to replace NULs, so I'll set a flag\n          // if I've emitted a NUL.\n          textrun.push(c);\n          textIncludesNUL = true;\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          // Instead of just pushing a single character and then\n          // coming back to the very same place, lookahead and\n          // emit everything we can at once.\n          /*jshint -W030 */\n          emitCharsWhile(DATATEXT) || textrun.push(c);\n          break;\n      }\n    }\n    function rcdata_state(c) {\n      // Save the open tag so we can find a matching close tag\n      switch (c) {\n        case 0x0026:\n          // AMPERSAND\n          return_state = rcdata_state;\n          tokenizer = character_reference_state;\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = rcdata_less_than_sign_state;\n          break;\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          textIncludesNUL = true;\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          textrun.push(c);\n          break;\n      }\n    }\n    function rawtext_state(c) {\n      switch (c) {\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = rawtext_less_than_sign_state;\n          break;\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          /*jshint -W030 */\n          emitCharsWhile(RAWTEXT) || textrun.push(c);\n          break;\n      }\n    }\n    function script_data_state(c) {\n      switch (c) {\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_less_than_sign_state;\n          break;\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          /*jshint -W030 */\n          emitCharsWhile(RAWTEXT) || textrun.push(c);\n          break;\n      }\n    }\n    function plaintext_state(c) {\n      switch (c) {\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          /*jshint -W030 */\n          emitCharsWhile(PLAINTEXT) || textrun.push(c);\n          break;\n      }\n    }\n    function tag_open_state(c) {\n      switch (c) {\n        case 0x0021:\n          // EXCLAMATION MARK\n          tokenizer = markup_declaration_open_state;\n          break;\n        case 0x002F:\n          // SOLIDUS\n          tokenizer = end_tag_open_state;\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginTagName();\n          reconsume(c, tag_name_state);\n          break;\n        case 0x003F:\n          // QUESTION MARK\n          reconsume(c, bogus_comment_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          reconsume(c, data_state);\n          break;\n      }\n    }\n    function end_tag_open_state(c) {\n      switch (c) {\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginEndTagName();\n          reconsume(c, tag_name_state);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          break;\n        case -1:\n          // EOF\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x002F); // SOLIDUS\n          emitEOF();\n          break;\n        default:\n          reconsume(c, bogus_comment_state);\n          break;\n      }\n    }\n    function tag_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = before_attribute_name_state;\n          break;\n        case 0x002F:\n          // SOLIDUS\n          tokenizer = self_closing_start_tag_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitTag();\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tagnamebuf += String.fromCharCode(c + 0x0020);\n          break;\n        case 0x0000:\n          // NULL\n          tagnamebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          tagnamebuf += getMatchingChars(TAGNAME);\n          break;\n      }\n    }\n    function rcdata_less_than_sign_state(c) {\n      /* identical to the RAWTEXT less-than sign state, except s/RAWTEXT/RCDATA/g */\n      if (c === 0x002F) {\n        // SOLIDUS\n        beginTempBuf();\n        tokenizer = rcdata_end_tag_open_state;\n      } else {\n        textrun.push(0x003C); // LESS-THAN SIGN\n        reconsume(c, rcdata_state);\n      }\n    }\n    function rcdata_end_tag_open_state(c) {\n      /* identical to the RAWTEXT (and Script data) end tag open state, except s/RAWTEXT/RCDATA/g */\n      switch (c) {\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginEndTagName();\n          reconsume(c, rcdata_end_tag_name_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x002F); // SOLIDUS\n          reconsume(c, rcdata_state);\n          break;\n      }\n    }\n    function rcdata_end_tag_name_state(c) {\n      /* identical to the RAWTEXT (and Script data) end tag name state, except s/RAWTEXT/RCDATA/g */\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = before_attribute_name_state;\n            return;\n          }\n          break;\n        case 0x002F:\n          // SOLIDUS\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = self_closing_start_tag_state;\n            return;\n          }\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = data_state;\n            emitTag();\n            return;\n          }\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tagnamebuf += String.fromCharCode(c + 0x0020);\n          tempbuf.push(c);\n          return;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tagnamebuf += String.fromCharCode(c);\n          tempbuf.push(c);\n          return;\n      }\n\n      // If we don't return in one of the cases above, then this was not\n      // an appropriately matching close tag, so back out by emitting all\n      // the characters as text\n      textrun.push(0x003C); // LESS-THAN SIGN\n      textrun.push(0x002F); // SOLIDUS\n      pushAll(textrun, tempbuf);\n      reconsume(c, rcdata_state);\n    }\n    function rawtext_less_than_sign_state(c) {\n      /* identical to the RCDATA less-than sign state, except s/RCDATA/RAWTEXT/g\n       */\n      if (c === 0x002F) {\n        // SOLIDUS\n        beginTempBuf();\n        tokenizer = rawtext_end_tag_open_state;\n      } else {\n        textrun.push(0x003C); // LESS-THAN SIGN\n        reconsume(c, rawtext_state);\n      }\n    }\n    function rawtext_end_tag_open_state(c) {\n      /* identical to the RCDATA (and Script data) end tag open state, except s/RCDATA/RAWTEXT/g */\n      switch (c) {\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginEndTagName();\n          reconsume(c, rawtext_end_tag_name_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x002F); // SOLIDUS\n          reconsume(c, rawtext_state);\n          break;\n      }\n    }\n    function rawtext_end_tag_name_state(c) {\n      /* identical to the RCDATA (and Script data) end tag name state, except s/RCDATA/RAWTEXT/g */\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = before_attribute_name_state;\n            return;\n          }\n          break;\n        case 0x002F:\n          // SOLIDUS\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = self_closing_start_tag_state;\n            return;\n          }\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = data_state;\n            emitTag();\n            return;\n          }\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tagnamebuf += String.fromCharCode(c + 0x0020);\n          tempbuf.push(c);\n          return;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tagnamebuf += String.fromCharCode(c);\n          tempbuf.push(c);\n          return;\n      }\n\n      // If we don't return in one of the cases above, then this was not\n      // an appropriately matching close tag, so back out by emitting all\n      // the characters as text\n      textrun.push(0x003C); // LESS-THAN SIGN\n      textrun.push(0x002F); // SOLIDUS\n      pushAll(textrun, tempbuf);\n      reconsume(c, rawtext_state);\n    }\n    function script_data_less_than_sign_state(c) {\n      switch (c) {\n        case 0x002F:\n          // SOLIDUS\n          beginTempBuf();\n          tokenizer = script_data_end_tag_open_state;\n          break;\n        case 0x0021:\n          // EXCLAMATION MARK\n          tokenizer = script_data_escape_start_state;\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x0021); // EXCLAMATION MARK\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          reconsume(c, script_data_state);\n          break;\n      }\n    }\n    function script_data_end_tag_open_state(c) {\n      /* identical to the RCDATA (and RAWTEXT) end tag open state, except s/RCDATA/Script data/g */\n      switch (c) {\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginEndTagName();\n          reconsume(c, script_data_end_tag_name_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x002F); // SOLIDUS\n          reconsume(c, script_data_state);\n          break;\n      }\n    }\n    function script_data_end_tag_name_state(c) {\n      /* identical to the RCDATA (and RAWTEXT) end tag name state, except s/RCDATA/Script data/g */\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = before_attribute_name_state;\n            return;\n          }\n          break;\n        case 0x002F:\n          // SOLIDUS\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = self_closing_start_tag_state;\n            return;\n          }\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = data_state;\n            emitTag();\n            return;\n          }\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tagnamebuf += String.fromCharCode(c + 0x0020);\n          tempbuf.push(c);\n          return;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tagnamebuf += String.fromCharCode(c);\n          tempbuf.push(c);\n          return;\n      }\n\n      // If we don't return in one of the cases above, then this was not\n      // an appropriately matching close tag, so back out by emitting all\n      // the characters as text\n      textrun.push(0x003C); // LESS-THAN SIGN\n      textrun.push(0x002F); // SOLIDUS\n      pushAll(textrun, tempbuf);\n      reconsume(c, script_data_state);\n    }\n    function script_data_escape_start_state(c) {\n      if (c === 0x002D) {\n        // HYPHEN-MINUS\n        tokenizer = script_data_escape_start_dash_state;\n        textrun.push(0x002D); // HYPHEN-MINUS\n      } else {\n        reconsume(c, script_data_state);\n      }\n    }\n    function script_data_escape_start_dash_state(c) {\n      if (c === 0x002D) {\n        // HYPHEN-MINUS\n        tokenizer = script_data_escaped_dash_dash_state;\n        textrun.push(0x002D); // HYPHEN-MINUS\n      } else {\n        reconsume(c, script_data_state);\n      }\n    }\n    function script_data_escaped_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = script_data_escaped_dash_state;\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_escaped_less_than_sign_state;\n          break;\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_escaped_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = script_data_escaped_dash_dash_state;\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_escaped_less_than_sign_state;\n          break;\n        case 0x0000:\n          // NULL\n          tokenizer = script_data_escaped_state;\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          tokenizer = script_data_escaped_state;\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_escaped_dash_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_escaped_less_than_sign_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = script_data_state;\n          textrun.push(0x003E); // GREATER-THAN SIGN\n          break;\n        case 0x0000:\n          // NULL\n          tokenizer = script_data_escaped_state;\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          tokenizer = script_data_escaped_state;\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_escaped_less_than_sign_state(c) {\n      switch (c) {\n        case 0x002F:\n          // SOLIDUS\n          beginTempBuf();\n          tokenizer = script_data_escaped_end_tag_open_state;\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginTempBuf();\n          textrun.push(0x003C); // LESS-THAN SIGN\n          reconsume(c, script_data_double_escape_start_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          reconsume(c, script_data_escaped_state);\n          break;\n      }\n    }\n    function script_data_escaped_end_tag_open_state(c) {\n      switch (c) {\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          beginEndTagName();\n          reconsume(c, script_data_escaped_end_tag_name_state);\n          break;\n        default:\n          textrun.push(0x003C); // LESS-THAN SIGN\n          textrun.push(0x002F); // SOLIDUS\n          reconsume(c, script_data_escaped_state);\n          break;\n      }\n    }\n    function script_data_escaped_end_tag_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = before_attribute_name_state;\n            return;\n          }\n          break;\n        case 0x002F:\n          // SOLIDUS\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = self_closing_start_tag_state;\n            return;\n          }\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (appropriateEndTag(tagnamebuf)) {\n            tokenizer = data_state;\n            emitTag();\n            return;\n          }\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tagnamebuf += String.fromCharCode(c + 0x0020);\n          tempbuf.push(c);\n          return;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tagnamebuf += String.fromCharCode(c);\n          tempbuf.push(c);\n          return;\n      }\n\n      // We get here in the default case, and if the closing tagname\n      // is not an appropriate tagname.\n      textrun.push(0x003C); // LESS-THAN SIGN\n      textrun.push(0x002F); // SOLIDUS\n      pushAll(textrun, tempbuf);\n      reconsume(c, script_data_escaped_state);\n    }\n    function script_data_double_escape_start_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020: // SPACE\n        case 0x002F: // SOLIDUS\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (buf2str(tempbuf) === \"script\") {\n            tokenizer = script_data_double_escaped_state;\n          } else {\n            tokenizer = script_data_escaped_state;\n          }\n          textrun.push(c);\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tempbuf.push(c + 0x0020);\n          textrun.push(c);\n          break;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tempbuf.push(c);\n          textrun.push(c);\n          break;\n        default:\n          reconsume(c, script_data_escaped_state);\n          break;\n      }\n    }\n    function script_data_double_escaped_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = script_data_double_escaped_dash_state;\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_double_escaped_less_than_sign_state;\n          textrun.push(0x003C); // LESS-THAN SIGN\n          break;\n        case 0x0000:\n          // NULL\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_double_escaped_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = script_data_double_escaped_dash_dash_state;\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_double_escaped_less_than_sign_state;\n          textrun.push(0x003C); // LESS-THAN SIGN\n          break;\n        case 0x0000:\n          // NULL\n          tokenizer = script_data_double_escaped_state;\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          tokenizer = script_data_double_escaped_state;\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_double_escaped_dash_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          textrun.push(0x002D); // HYPHEN-MINUS\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          tokenizer = script_data_double_escaped_less_than_sign_state;\n          textrun.push(0x003C); // LESS-THAN SIGN\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = script_data_state;\n          textrun.push(0x003E); // GREATER-THAN SIGN\n          break;\n        case 0x0000:\n          // NULL\n          tokenizer = script_data_double_escaped_state;\n          textrun.push(0xFFFD); // REPLACEMENT CHARACTER\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          tokenizer = script_data_double_escaped_state;\n          textrun.push(c);\n          break;\n      }\n    }\n    function script_data_double_escaped_less_than_sign_state(c) {\n      if (c === 0x002F) {\n        // SOLIDUS\n        beginTempBuf();\n        tokenizer = script_data_double_escape_end_state;\n        textrun.push(0x002F); // SOLIDUS\n      } else {\n        reconsume(c, script_data_double_escaped_state);\n      }\n    }\n    function script_data_double_escape_end_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020: // SPACE\n        case 0x002F: // SOLIDUS\n        case 0x003E:\n          // GREATER-THAN SIGN\n          if (buf2str(tempbuf) === \"script\") {\n            tokenizer = script_data_escaped_state;\n          } else {\n            tokenizer = script_data_double_escaped_state;\n          }\n          textrun.push(c);\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          tempbuf.push(c + 0x0020);\n          textrun.push(c);\n          break;\n        case 0x0061: // [a-z]\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n        case 0x0067:\n        case 0x0068:\n        case 0x0069:\n        case 0x006A:\n        case 0x006B:\n        case 0x006C:\n        case 0x006D:\n        case 0x006E:\n        case 0x006F:\n        case 0x0070:\n        case 0x0071:\n        case 0x0072:\n        case 0x0073:\n        case 0x0074:\n        case 0x0075:\n        case 0x0076:\n        case 0x0077:\n        case 0x0078:\n        case 0x0079:\n        case 0x007A:\n          tempbuf.push(c);\n          textrun.push(c);\n          break;\n        default:\n          reconsume(c, script_data_double_escaped_state);\n          break;\n      }\n    }\n    function before_attribute_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        // For SOLIDUS, GREATER-THAN SIGN, and EOF, spec says \"reconsume in\n        // the after attribute name state\", but in our implementation that\n        // state always has an active attribute in attrnamebuf.  Just clone\n        // the rules here, without the addAttribute business.\n        case 0x002F:\n          // SOLIDUS\n          tokenizer = self_closing_start_tag_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitTag();\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        case 0x003D:\n          // EQUALS SIGN\n          beginAttrName();\n          attrnamebuf += String.fromCharCode(c);\n          tokenizer = attribute_name_state;\n          break;\n        default:\n          if (handleSimpleAttribute()) break;\n          beginAttrName();\n          reconsume(c, attribute_name_state);\n          break;\n      }\n    }\n\n    // beginAttrName() must have been called before this point\n    // There is an active attribute in attrnamebuf (but not attrvaluebuf)\n    function attribute_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020: // SPACE\n        case 0x002F: // SOLIDUS\n        case 0x003E: // GREATER-THAN SIGN\n        case -1:\n          // EOF\n          reconsume(c, after_attribute_name_state);\n          break;\n        case 0x003D:\n          // EQUALS SIGN\n          tokenizer = before_attribute_value_state;\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          attrnamebuf += String.fromCharCode(c + 0x0020);\n          break;\n        case 0x0000:\n          // NULL\n          attrnamebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case 0x0022: // QUOTATION MARK\n        case 0x0027: // APOSTROPHE\n        case 0x003C: // LESS-THAN SIGN\n        /* falls through */\n        default:\n          attrnamebuf += getMatchingChars(ATTRNAME);\n          break;\n      }\n    }\n\n    // There is an active attribute in attrnamebuf, but not yet in attrvaluebuf.\n    function after_attribute_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        case 0x002F:\n          // SOLIDUS\n          // Keep in sync with before_attribute_name_state.\n          addAttribute(attrnamebuf);\n          tokenizer = self_closing_start_tag_state;\n          break;\n        case 0x003D:\n          // EQUALS SIGN\n          tokenizer = before_attribute_value_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          // Keep in sync with before_attribute_name_state.\n          tokenizer = data_state;\n          addAttribute(attrnamebuf);\n          emitTag();\n          break;\n        case -1:\n          // EOF\n          // Keep in sync with before_attribute_name_state.\n          addAttribute(attrnamebuf);\n          emitEOF();\n          break;\n        default:\n          addAttribute(attrnamebuf);\n          beginAttrName();\n          reconsume(c, attribute_name_state);\n          break;\n      }\n    }\n    function before_attribute_value_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginAttrValue();\n          tokenizer = attribute_value_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginAttrValue();\n          tokenizer = attribute_value_single_quoted_state;\n          break;\n        case 0x003E: // GREATER-THAN SIGN\n        /* falls through */\n        default:\n          beginAttrValue();\n          reconsume(c, attribute_value_unquoted_state);\n          break;\n      }\n    }\n    function attribute_value_double_quoted_state(c) {\n      switch (c) {\n        case 0x0022:\n          // QUOTATION MARK\n          addAttribute(attrnamebuf, attrvaluebuf);\n          tokenizer = after_attribute_value_quoted_state;\n          break;\n        case 0x0026:\n          // AMPERSAND\n          return_state = attribute_value_double_quoted_state;\n          tokenizer = character_reference_state;\n          break;\n        case 0x0000:\n          // NULL\n          attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        case 0x000A:\n          // LF\n          // this could be a converted \\r, so don't use getMatchingChars\n          attrvaluebuf += String.fromCharCode(c);\n          break;\n        default:\n          attrvaluebuf += getMatchingChars(DBLQUOTEATTRVAL);\n          break;\n      }\n    }\n    function attribute_value_single_quoted_state(c) {\n      switch (c) {\n        case 0x0027:\n          // APOSTROPHE\n          addAttribute(attrnamebuf, attrvaluebuf);\n          tokenizer = after_attribute_value_quoted_state;\n          break;\n        case 0x0026:\n          // AMPERSAND\n          return_state = attribute_value_single_quoted_state;\n          tokenizer = character_reference_state;\n          break;\n        case 0x0000:\n          // NULL\n          attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        case 0x000A:\n          // LF\n          // this could be a converted \\r, so don't use getMatchingChars\n          attrvaluebuf += String.fromCharCode(c);\n          break;\n        default:\n          attrvaluebuf += getMatchingChars(SINGLEQUOTEATTRVAL);\n          break;\n      }\n    }\n    function attribute_value_unquoted_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          addAttribute(attrnamebuf, attrvaluebuf);\n          tokenizer = before_attribute_name_state;\n          break;\n        case 0x0026:\n          // AMPERSAND\n          return_state = attribute_value_unquoted_state;\n          tokenizer = character_reference_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          addAttribute(attrnamebuf, attrvaluebuf);\n          tokenizer = data_state;\n          emitTag();\n          break;\n        case 0x0000:\n          // NULL\n          attrvaluebuf += String.fromCharCode(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          nextchar--; // pushback\n          tokenizer = data_state;\n          break;\n        case 0x0022: // QUOTATION MARK\n        case 0x0027: // APOSTROPHE\n        case 0x003C: // LESS-THAN SIGN\n        case 0x003D: // EQUALS SIGN\n        case 0x0060: // GRAVE ACCENT\n        /* falls through */\n        default:\n          attrvaluebuf += getMatchingChars(UNQUOTEDATTRVAL);\n          break;\n      }\n    }\n    function after_attribute_value_quoted_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = before_attribute_name_state;\n          break;\n        case 0x002F:\n          // SOLIDUS\n          tokenizer = self_closing_start_tag_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitTag();\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          reconsume(c, before_attribute_name_state);\n          break;\n      }\n    }\n    function self_closing_start_tag_state(c) {\n      switch (c) {\n        case 0x003E:\n          // GREATER-THAN SIGN\n          // Set the <i>self-closing flag</i> of the current tag token.\n          tokenizer = data_state;\n          emitSelfClosingTag();\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        default:\n          reconsume(c, before_attribute_name_state);\n          break;\n      }\n    }\n    function bogus_comment_state(c, lookahead, eof) {\n      var len = lookahead.length;\n      if (eof) {\n        nextchar += len - 1; // don't consume the eof\n      } else {\n        nextchar += len;\n      }\n      var comment = lookahead.substring(0, len - 1);\n      comment = comment.replace(/\\u0000/g, \"\\uFFFD\");\n      comment = comment.replace(/\\u000D\\u000A/g, \"\\u000A\");\n      comment = comment.replace(/\\u000D/g, \"\\u000A\");\n      insertToken(COMMENT, comment);\n      tokenizer = data_state;\n    }\n    bogus_comment_state.lookahead = \">\";\n    function markup_declaration_open_state(c, lookahead, eof) {\n      if (lookahead[0] === \"-\" && lookahead[1] === \"-\") {\n        nextchar += 2;\n        beginComment();\n        tokenizer = comment_start_state;\n        return;\n      }\n      if (lookahead.toUpperCase() === \"DOCTYPE\") {\n        nextchar += 7;\n        tokenizer = doctype_state;\n      } else if (lookahead === \"[CDATA[\" && cdataAllowed()) {\n        nextchar += 7;\n        tokenizer = cdata_section_state;\n      } else {\n        tokenizer = bogus_comment_state;\n      }\n    }\n    markup_declaration_open_state.lookahead = 7;\n    function comment_start_state(c) {\n      beginComment();\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_start_dash_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          insertToken(COMMENT, buf2str(commentbuf));\n          break;\n        /* see comment in comment end state */\n        default:\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_start_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_end_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          insertToken(COMMENT, buf2str(commentbuf));\n          break;\n        case -1:\n          // EOF\n          insertToken(COMMENT, buf2str(commentbuf));\n          emitEOF();\n          break;\n        /* see comment in comment end state */\n        default:\n          commentbuf.push(0x002D /* HYPHEN-MINUS */);\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_state(c) {\n      switch (c) {\n        case 0x003C:\n          // LESS-THAN SIGN\n          commentbuf.push(c);\n          tokenizer = comment_less_than_sign_state;\n          break;\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_end_dash_state;\n          break;\n        case 0x0000:\n          // NULL\n          commentbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          insertToken(COMMENT, buf2str(commentbuf));\n          emitEOF();\n          break;\n        /* see comment in comment end state */\n        default:\n          commentbuf.push(c);\n          break;\n      }\n    }\n    function comment_less_than_sign_state(c) {\n      switch (c) {\n        case 0x0021:\n          // EXCLAMATION MARK\n          commentbuf.push(c);\n          tokenizer = comment_less_than_sign_bang_state;\n          break;\n        case 0x003C:\n          // LESS-THAN SIGN\n          commentbuf.push(c);\n          break;\n        default:\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_less_than_sign_bang_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_less_than_sign_bang_dash_state;\n          break;\n        default:\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_less_than_sign_bang_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_less_than_sign_bang_dash_dash_state;\n          break;\n        default:\n          reconsume(c, comment_end_dash_state);\n          break;\n      }\n    }\n    function comment_less_than_sign_bang_dash_dash_state(c) {\n      switch (c) {\n        case 0x003E: // GREATER-THAN SIGN\n        case -1:\n          // EOF\n          reconsume(c, comment_end_state);\n          break;\n        default:\n          // parse error\n          reconsume(c, comment_end_state);\n          break;\n      }\n    }\n    function comment_end_dash_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          tokenizer = comment_end_state;\n          break;\n        case -1:\n          // EOF\n          insertToken(COMMENT, buf2str(commentbuf));\n          emitEOF();\n          break;\n        /* see comment in comment end state */\n        default:\n          commentbuf.push(0x002D /* HYPHEN-MINUS */);\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_end_state(c) {\n      switch (c) {\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          insertToken(COMMENT, buf2str(commentbuf));\n          break;\n        case 0x0021:\n          // EXCLAMATION MARK\n          tokenizer = comment_end_bang_state;\n          break;\n        case 0x002D:\n          // HYPHEN-MINUS\n          commentbuf.push(0x002D);\n          break;\n        case -1:\n          // EOF\n          insertToken(COMMENT, buf2str(commentbuf));\n          emitEOF();\n          break;\n        /* For security reasons: otherwise, hostile user could put a script in a comment e.g. in a blog comment and then DOS the server so that the end tag isn't read, and then the commented script tag would be treated as live code */\n        default:\n          commentbuf.push(0x002D);\n          commentbuf.push(0x002D);\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function comment_end_bang_state(c) {\n      switch (c) {\n        case 0x002D:\n          // HYPHEN-MINUS\n          commentbuf.push(0x002D);\n          commentbuf.push(0x002D);\n          commentbuf.push(0x0021);\n          tokenizer = comment_end_dash_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          insertToken(COMMENT, buf2str(commentbuf));\n          break;\n        case -1:\n          // EOF\n          insertToken(COMMENT, buf2str(commentbuf));\n          emitEOF();\n          break;\n        /* see comment in comment end state */\n        default:\n          commentbuf.push(0x002D);\n          commentbuf.push(0x002D);\n          commentbuf.push(0x0021);\n          reconsume(c, comment_state);\n          break;\n      }\n    }\n    function doctype_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = before_doctype_name_state;\n          break;\n        case -1:\n          // EOF\n          beginDoctype();\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          reconsume(c, before_doctype_name_state);\n          break;\n      }\n    }\n    function before_doctype_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          beginDoctype();\n          doctypenamebuf.push(c + 0x0020);\n          tokenizer = doctype_name_state;\n          break;\n        case 0x0000:\n          // NULL\n          beginDoctype();\n          doctypenamebuf.push(0xFFFD);\n          tokenizer = doctype_name_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          beginDoctype();\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          beginDoctype();\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          beginDoctype();\n          doctypenamebuf.push(c);\n          tokenizer = doctype_name_state;\n          break;\n      }\n    }\n    function doctype_name_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = after_doctype_name_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case 0x0041: // [A-Z]\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n        case 0x0047:\n        case 0x0048:\n        case 0x0049:\n        case 0x004A:\n        case 0x004B:\n        case 0x004C:\n        case 0x004D:\n        case 0x004E:\n        case 0x004F:\n        case 0x0050:\n        case 0x0051:\n        case 0x0052:\n        case 0x0053:\n        case 0x0054:\n        case 0x0055:\n        case 0x0056:\n        case 0x0057:\n        case 0x0058:\n        case 0x0059:\n        case 0x005A:\n          doctypenamebuf.push(c + 0x0020);\n          break;\n        case 0x0000:\n          // NULL\n          doctypenamebuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          doctypenamebuf.push(c);\n          break;\n      }\n    }\n    function after_doctype_name_state(c, lookahead, eof) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          nextchar += 1;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          nextchar += 1;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          lookahead = lookahead.toUpperCase();\n          if (lookahead === \"PUBLIC\") {\n            nextchar += 6;\n            tokenizer = after_doctype_public_keyword_state;\n          } else if (lookahead === \"SYSTEM\") {\n            nextchar += 6;\n            tokenizer = after_doctype_system_keyword_state;\n          } else {\n            forcequirks();\n            tokenizer = bogus_doctype_state;\n          }\n          break;\n      }\n    }\n    after_doctype_name_state.lookahead = 6;\n    function after_doctype_public_keyword_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = before_doctype_public_identifier_state;\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypePublicId();\n          tokenizer = doctype_public_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypePublicId();\n          tokenizer = doctype_public_identifier_single_quoted_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function before_doctype_public_identifier_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypePublicId();\n          tokenizer = doctype_public_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypePublicId();\n          tokenizer = doctype_public_identifier_single_quoted_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function doctype_public_identifier_double_quoted_state(c) {\n      switch (c) {\n        case 0x0022:\n          // QUOTATION MARK\n          tokenizer = after_doctype_public_identifier_state;\n          break;\n        case 0x0000:\n          // NULL\n          doctypepublicbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          doctypepublicbuf.push(c);\n          break;\n      }\n    }\n    function doctype_public_identifier_single_quoted_state(c) {\n      switch (c) {\n        case 0x0027:\n          // APOSTROPHE\n          tokenizer = after_doctype_public_identifier_state;\n          break;\n        case 0x0000:\n          // NULL\n          doctypepublicbuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          doctypepublicbuf.push(c);\n          break;\n      }\n    }\n    function after_doctype_public_identifier_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = between_doctype_public_and_system_identifiers_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_single_quoted_state;\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function between_doctype_public_and_system_identifiers_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE Ignore the character.\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_single_quoted_state;\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function after_doctype_system_keyword_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          tokenizer = before_doctype_system_identifier_state;\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_single_quoted_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function before_doctype_system_identifier_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE Ignore the character.\n          break;\n        case 0x0022:\n          // QUOTATION MARK\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_double_quoted_state;\n          break;\n        case 0x0027:\n          // APOSTROPHE\n          beginDoctypeSystemId();\n          tokenizer = doctype_system_identifier_single_quoted_state;\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          forcequirks();\n          tokenizer = bogus_doctype_state;\n          break;\n      }\n    }\n    function doctype_system_identifier_double_quoted_state(c) {\n      switch (c) {\n        case 0x0022:\n          // QUOTATION MARK\n          tokenizer = after_doctype_system_identifier_state;\n          break;\n        case 0x0000:\n          // NULL\n          doctypesystembuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          doctypesystembuf.push(c);\n          break;\n      }\n    }\n    function doctype_system_identifier_single_quoted_state(c) {\n      switch (c) {\n        case 0x0027:\n          // APOSTROPHE\n          tokenizer = after_doctype_system_identifier_state;\n          break;\n        case 0x0000:\n          // NULL\n          doctypesystembuf.push(0xFFFD /* REPLACEMENT CHARACTER */);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          forcequirks();\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          doctypesystembuf.push(c);\n          break;\n      }\n    }\n    function after_doctype_system_identifier_state(c) {\n      switch (c) {\n        case 0x0009: // CHARACTER TABULATION (tab)\n        case 0x000A: // LINE FEED (LF)\n        case 0x000C: // FORM FEED (FF)\n        case 0x0020:\n          // SPACE\n          /* Ignore the character. */\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          forcequirks();\n          emitDoctype();\n          emitEOF();\n          break;\n        default:\n          tokenizer = bogus_doctype_state;\n          /* This does *not* set the DOCTYPE token's force-quirks flag. */\n          break;\n      }\n    }\n    function bogus_doctype_state(c) {\n      switch (c) {\n        case 0x003E:\n          // GREATER-THAN SIGN\n          tokenizer = data_state;\n          emitDoctype();\n          break;\n        case -1:\n          // EOF\n          emitDoctype();\n          emitEOF();\n          break;\n      }\n    }\n    function cdata_section_state(c) {\n      switch (c) {\n        case 0x005D:\n          // RIGHT SQUARE BRACKET\n          tokenizer = cdata_section_bracket_state;\n          break;\n        case -1:\n          // EOF\n          emitEOF();\n          break;\n        case 0x0000:\n          // NULL\n          textIncludesNUL = true;\n        /* fall through */\n        default:\n          // Instead of just pushing a single character and then\n          // coming back to the very same place, lookahead and\n          // emit everything we can at once.\n          /*jshint -W030 */\n          emitCharsWhile(CDATATEXT) || textrun.push(c);\n          break;\n      }\n    }\n    function cdata_section_bracket_state(c) {\n      switch (c) {\n        case 0x005D:\n          // RIGHT SQUARE BRACKET\n          tokenizer = cdata_section_end_state;\n          break;\n        default:\n          textrun.push(0x005D);\n          reconsume(c, cdata_section_state);\n          break;\n      }\n    }\n    function cdata_section_end_state(c) {\n      switch (c) {\n        case 0x005D:\n          // RIGHT SQUARE BRACKET\n          textrun.push(0x005D);\n          break;\n        case 0x003E:\n          // GREATER-THAN SIGN\n          flushText();\n          tokenizer = data_state;\n          break;\n        default:\n          textrun.push(0x005D);\n          textrun.push(0x005D);\n          reconsume(c, cdata_section_state);\n          break;\n      }\n    }\n    function character_reference_state(c) {\n      beginTempBuf();\n      tempbuf.push(0x0026);\n      switch (c) {\n        case 0x0009: // TAB\n        case 0x000A: // LINE FEED\n        case 0x000C: // FORM FEED\n        case 0x0020: // SPACE\n        case 0x003C: // LESS-THAN SIGN\n        case 0x0026: // AMPERSAND\n        case -1:\n          // EOF\n          reconsume(c, character_reference_end_state);\n          break;\n        case 0x0023:\n          // NUMBER SIGN\n          tempbuf.push(c);\n          tokenizer = numeric_character_reference_state;\n          break;\n        default:\n          reconsume(c, named_character_reference_state);\n          break;\n      }\n    }\n    function named_character_reference_state(c) {\n      NAMEDCHARREF.lastIndex = nextchar; // w/ lookahead no char has been consumed\n      var matched = NAMEDCHARREF.exec(chars);\n      if (!matched) throw new Error(\"should never happen\");\n      var name = matched[1];\n      if (!name) {\n        // If no match can be made, switch to the character reference end state\n        tokenizer = character_reference_end_state;\n        return;\n      }\n\n      // Consume the matched characters and append them to temporary buffer\n      nextchar += name.length;\n      pushAll(tempbuf, str2buf(name));\n      switch (return_state) {\n        case attribute_value_double_quoted_state:\n        case attribute_value_single_quoted_state:\n        case attribute_value_unquoted_state:\n          // If the character reference was consumed as part of an attribute...\n          if (name[name.length - 1] !== ';') {\n            // ...and the last char is not ;\n            if (/[=A-Za-z0-9]/.test(chars[nextchar])) {\n              tokenizer = character_reference_end_state;\n              return;\n            }\n          }\n          break;\n      }\n      beginTempBuf();\n      var rv = namedCharRefs[name];\n      if (typeof rv === 'number') {\n        tempbuf.push(rv);\n      } else {\n        pushAll(tempbuf, rv);\n      }\n      tokenizer = character_reference_end_state;\n    }\n    // We might need to pause tokenization until we have enough characters\n    // in the buffer for longest possible character reference.\n    named_character_reference_state.lookahead = -32;\n    function numeric_character_reference_state(c) {\n      character_reference_code = 0;\n      switch (c) {\n        case 0x0078: // x\n        case 0x0058:\n          // X\n          tempbuf.push(c);\n          tokenizer = hexadecimal_character_reference_start_state;\n          break;\n        default:\n          reconsume(c, decimal_character_reference_start_state);\n          break;\n      }\n    }\n    function hexadecimal_character_reference_start_state(c) {\n      switch (c) {\n        case 0x0030:\n        case 0x0031:\n        case 0x0032:\n        case 0x0033:\n        case 0x0034:\n        case 0x0035:\n        case 0x0036:\n        case 0x0037:\n        case 0x0038:\n        case 0x0039: // [0-9]\n        case 0x0041:\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046: // [A-F]\n        case 0x0061:\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n          // [a-f]\n          reconsume(c, hexadecimal_character_reference_state);\n          break;\n        default:\n          reconsume(c, character_reference_end_state);\n          break;\n      }\n    }\n    function decimal_character_reference_start_state(c) {\n      switch (c) {\n        case 0x0030:\n        case 0x0031:\n        case 0x0032:\n        case 0x0033:\n        case 0x0034:\n        case 0x0035:\n        case 0x0036:\n        case 0x0037:\n        case 0x0038:\n        case 0x0039:\n          // [0-9]\n          reconsume(c, decimal_character_reference_state);\n          break;\n        default:\n          reconsume(c, character_reference_end_state);\n          break;\n      }\n    }\n    function hexadecimal_character_reference_state(c) {\n      switch (c) {\n        case 0x0041:\n        case 0x0042:\n        case 0x0043:\n        case 0x0044:\n        case 0x0045:\n        case 0x0046:\n          // [A-F]\n          character_reference_code *= 16;\n          character_reference_code += c - 0x0037;\n          break;\n        case 0x0061:\n        case 0x0062:\n        case 0x0063:\n        case 0x0064:\n        case 0x0065:\n        case 0x0066:\n          // [a-f]\n          character_reference_code *= 16;\n          character_reference_code += c - 0x0057;\n          break;\n        case 0x0030:\n        case 0x0031:\n        case 0x0032:\n        case 0x0033:\n        case 0x0034:\n        case 0x0035:\n        case 0x0036:\n        case 0x0037:\n        case 0x0038:\n        case 0x0039:\n          // [0-9]\n          character_reference_code *= 16;\n          character_reference_code += c - 0x0030;\n          break;\n        case 0x003B:\n          // SEMICOLON\n          tokenizer = numeric_character_reference_end_state;\n          break;\n        default:\n          reconsume(c, numeric_character_reference_end_state);\n          break;\n      }\n    }\n    function decimal_character_reference_state(c) {\n      switch (c) {\n        case 0x0030:\n        case 0x0031:\n        case 0x0032:\n        case 0x0033:\n        case 0x0034:\n        case 0x0035:\n        case 0x0036:\n        case 0x0037:\n        case 0x0038:\n        case 0x0039:\n          // [0-9]\n          character_reference_code *= 10;\n          character_reference_code += c - 0x0030;\n          break;\n        case 0x003B:\n          // SEMICOLON\n          tokenizer = numeric_character_reference_end_state;\n          break;\n        default:\n          reconsume(c, numeric_character_reference_end_state);\n          break;\n      }\n    }\n    function numeric_character_reference_end_state(c) {\n      if (character_reference_code in numericCharRefReplacements) {\n        character_reference_code = numericCharRefReplacements[character_reference_code];\n      } else if (character_reference_code > 0x10FFFF || character_reference_code >= 0xD800 && character_reference_code < 0xE000) {\n        character_reference_code = 0xFFFD;\n      }\n      beginTempBuf();\n      if (character_reference_code <= 0xFFFF) {\n        tempbuf.push(character_reference_code);\n      } else {\n        character_reference_code = character_reference_code - 0x10000;\n        /* jshint bitwise: false */\n        tempbuf.push(0xD800 + (character_reference_code >> 10));\n        tempbuf.push(0xDC00 + (character_reference_code & 0x03FF));\n      }\n      reconsume(c, character_reference_end_state);\n    }\n    function character_reference_end_state(c) {\n      switch (return_state) {\n        case attribute_value_double_quoted_state:\n        case attribute_value_single_quoted_state:\n        case attribute_value_unquoted_state:\n          // append each character to the current attribute's value\n          attrvaluebuf += buf2str(tempbuf);\n          break;\n        default:\n          pushAll(textrun, tempbuf);\n          break;\n      }\n      reconsume(c, return_state);\n    }\n\n    /***\n     * The tree builder insertion modes\n     */\n\n    // 11.2.5.4.1 The \"initial\" insertion mode\n    function initial_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          value = value.replace(LEADINGWS, \"\"); // Ignore spaces\n          if (value.length === 0) return; // Are we done?\n          break;\n        // Handle anything non-space text below\n        case 4:\n          // COMMENT\n          doc._appendChild(doc.createComment(value));\n          return;\n        case 5:\n          // DOCTYPE\n          var name = value;\n          var publicid = arg3;\n          var systemid = arg4;\n          // Use the constructor directly instead of\n          // implementation.createDocumentType because the create\n          // function throws errors on invalid characters, and\n          // we don't want the parser to throw them.\n          doc.appendChild(new DocumentType(doc, name, publicid, systemid));\n\n          // Note that there is no public API for setting quirks mode We can\n          // do this here because we have access to implementation details\n          if (force_quirks || name.toLowerCase() !== \"html\" || quirkyPublicIds.test(publicid) || systemid && systemid.toLowerCase() === quirkySystemId || systemid === undefined && conditionallyQuirkyPublicIds.test(publicid)) doc._quirks = true;else if (limitedQuirkyPublicIds.test(publicid) || systemid !== undefined && conditionallyQuirkyPublicIds.test(publicid)) doc._limitedQuirks = true;\n          parser = before_html_mode;\n          return;\n      }\n\n      // tags or non-whitespace text\n      doc._quirks = true;\n      parser = before_html_mode;\n      parser(t, value, arg3, arg4);\n    }\n\n    // 11.2.5.4.2 The \"before html\" insertion mode\n    function before_html_mode(t, value, arg3, arg4) {\n      var elt;\n      switch (t) {\n        case 1:\n          // TEXT\n          value = value.replace(LEADINGWS, \"\"); // Ignore spaces\n          if (value.length === 0) return; // Are we done?\n          break;\n        // Handle anything non-space text below\n        case 5:\n          // DOCTYPE\n          /* ignore the token */\n          return;\n        case 4:\n          // COMMENT\n          doc._appendChild(doc.createComment(value));\n          return;\n        case 2:\n          // TAG\n          if (value === \"html\") {\n            elt = createHTMLElt(doc, value, arg3);\n            stack.push(elt);\n            doc.appendChild(elt);\n            // XXX: handle application cache here\n            parser = before_head_mode;\n            return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"html\":\n            case \"head\":\n            case \"body\":\n            case \"br\":\n              break;\n            // fall through on these\n            default:\n              return;\n            // ignore most end tags\n          }\n      }\n\n      // Anything that didn't get handled above is handled like this:\n      elt = createHTMLElt(doc, \"html\", null);\n      stack.push(elt);\n      doc.appendChild(elt);\n      // XXX: handle application cache here\n      parser = before_head_mode;\n      parser(t, value, arg3, arg4);\n    }\n\n    // 11.2.5.4.3 The \"before head\" insertion mode\n    function before_head_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          value = value.replace(LEADINGWS, \"\"); // Ignore spaces\n          if (value.length === 0) return; // Are we done?\n          break;\n        // Handle anything non-space text below\n        case 5:\n          // DOCTYPE\n          /* ignore the token */\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"head\":\n              var elt = insertHTMLElement(value, arg3);\n              head_element_pointer = elt;\n              parser = in_head_mode;\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"html\":\n            case \"head\":\n            case \"body\":\n            case \"br\":\n              break;\n            default:\n              return;\n            // ignore most end tags\n          }\n      }\n\n      // If not handled explicitly above\n      before_head_mode(TAG, \"head\", null); // create a head tag\n      parser(t, value, arg3, arg4); // then try again with this token\n    }\n    function in_head_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          var ws = value.match(LEADINGWS);\n          if (ws) {\n            insertText(ws[0]);\n            value = value.substring(ws[0].length);\n          }\n          if (value.length === 0) return;\n          break;\n        // Handle non-whitespace below\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"meta\":\n            // XXX:\n            // May need to change the encoding based on this tag\n            /* falls through */\n            case \"base\":\n            case \"basefont\":\n            case \"bgsound\":\n            case \"link\":\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              return;\n            case \"title\":\n              parseRCDATA(value, arg3);\n              return;\n            case \"noscript\":\n              if (!scripting_enabled) {\n                insertHTMLElement(value, arg3);\n                parser = in_head_noscript_mode;\n                return;\n              }\n            // Otherwise, if scripting is enabled...\n            /* falls through */\n            case \"noframes\":\n            case \"style\":\n              parseRawText(value, arg3);\n              return;\n            case \"script\":\n              insertElement(function (doc) {\n                var elt = createHTMLElt(doc, value, arg3);\n                elt._parser_inserted = true;\n                elt._force_async = false;\n                if (fragment) elt._already_started = true;\n                flushText();\n                return elt;\n              });\n              tokenizer = script_data_state;\n              originalInsertionMode = parser;\n              parser = text_mode;\n              return;\n            case \"template\":\n              insertHTMLElement(value, arg3);\n              afe.insertMarker();\n              frameset_ok = false;\n              parser = in_template_mode;\n              templateInsertionModes.push(parser);\n              return;\n            case \"head\":\n              return;\n            // ignore it\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"head\":\n              stack.pop();\n              parser = after_head_mode;\n              return;\n            case \"body\":\n            case \"html\":\n            case \"br\":\n              break;\n            // handle these at the bottom of the function\n            case \"template\":\n              if (!stack.contains(\"template\")) {\n                return;\n              }\n              stack.generateImpliedEndTags(null, \"thorough\");\n              stack.popTag(\"template\");\n              afe.clearToMarker();\n              templateInsertionModes.pop();\n              resetInsertionMode();\n              return;\n            default:\n              // ignore any other end tag\n              return;\n          }\n          break;\n      }\n\n      // If not handled above\n      in_head_mode(ENDTAG, \"head\", null); // synthetic </head>\n      parser(t, value, arg3, arg4); // Then redo this one\n    }\n\n    // 13.2.5.4.5 The \"in head noscript\" insertion mode\n    function in_head_noscript_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 5:\n          // DOCTYPE\n          return;\n        case 4:\n          // COMMENT\n          in_head_mode(t, value);\n          return;\n        case 1:\n          // TEXT\n          var ws = value.match(LEADINGWS);\n          if (ws) {\n            in_head_mode(t, ws[0]);\n            value = value.substring(ws[0].length);\n          }\n          if (value.length === 0) return; // no more text\n          break;\n        // Handle non-whitespace below\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"basefont\":\n            case \"bgsound\":\n            case \"link\":\n            case \"meta\":\n            case \"noframes\":\n            case \"style\":\n              in_head_mode(t, value, arg3);\n              return;\n            case \"head\":\n            case \"noscript\":\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"noscript\":\n              stack.pop();\n              parser = in_head_mode;\n              return;\n            case \"br\":\n              break;\n            // goes to the outer default\n            default:\n              return;\n            // ignore other end tags\n          }\n          break;\n      }\n\n      // If not handled above\n      in_head_noscript_mode(ENDTAG, \"noscript\", null);\n      parser(t, value, arg3, arg4);\n    }\n    function after_head_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          var ws = value.match(LEADINGWS);\n          if (ws) {\n            insertText(ws[0]);\n            value = value.substring(ws[0].length);\n          }\n          if (value.length === 0) return;\n          break;\n        // Handle non-whitespace below\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"body\":\n              insertHTMLElement(value, arg3);\n              frameset_ok = false;\n              parser = in_body_mode;\n              return;\n            case \"frameset\":\n              insertHTMLElement(value, arg3);\n              parser = in_frameset_mode;\n              return;\n            case \"base\":\n            case \"basefont\":\n            case \"bgsound\":\n            case \"link\":\n            case \"meta\":\n            case \"noframes\":\n            case \"script\":\n            case \"style\":\n            case \"template\":\n            case \"title\":\n              stack.push(head_element_pointer);\n              in_head_mode(TAG, value, arg3);\n              stack.removeElement(head_element_pointer);\n              return;\n            case \"head\":\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"template\":\n              return in_head_mode(t, value, arg3, arg4);\n            case \"body\":\n            case \"html\":\n            case \"br\":\n              break;\n            default:\n              return;\n            // ignore any other end tag\n          }\n          break;\n      }\n      after_head_mode(TAG, \"body\", null);\n      frameset_ok = true;\n      parser(t, value, arg3, arg4);\n    }\n\n    // 13.2.5.4.7 The \"in body\" insertion mode\n    function in_body_mode(t, value, arg3, arg4) {\n      var body, i, node, elt;\n      switch (t) {\n        case 1:\n          // TEXT\n          if (textIncludesNUL) {\n            value = value.replace(NULCHARS, \"\");\n            if (value.length === 0) return;\n          }\n          // If any non-space characters\n          if (frameset_ok && NONWS.test(value)) frameset_ok = false;\n          afereconstruct();\n          insertText(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case -1:\n          // EOF\n          if (templateInsertionModes.length) {\n            return in_template_mode(t);\n          }\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              if (stack.contains(\"template\")) {\n                return;\n              }\n              transferAttributes(arg3, stack.elements[0]);\n              return;\n            case \"base\":\n            case \"basefont\":\n            case \"bgsound\":\n            case \"link\":\n            case \"meta\":\n            case \"noframes\":\n            case \"script\":\n            case \"style\":\n            case \"template\":\n            case \"title\":\n              in_head_mode(TAG, value, arg3);\n              return;\n            case \"body\":\n              body = stack.elements[1];\n              if (!body || !(body instanceof impl.HTMLBodyElement) || stack.contains(\"template\")) return;\n              frameset_ok = false;\n              transferAttributes(arg3, body);\n              return;\n            case \"frameset\":\n              if (!frameset_ok) return;\n              body = stack.elements[1];\n              if (!body || !(body instanceof impl.HTMLBodyElement)) return;\n              if (body.parentNode) body.parentNode.removeChild(body);\n              while (!(stack.top instanceof impl.HTMLHtmlElement)) stack.pop();\n              insertHTMLElement(value, arg3);\n              parser = in_frameset_mode;\n              return;\n            case \"address\":\n            case \"article\":\n            case \"aside\":\n            case \"blockquote\":\n            case \"center\":\n            case \"details\":\n            case \"dialog\":\n            case \"dir\":\n            case \"div\":\n            case \"dl\":\n            case \"fieldset\":\n            case \"figcaption\":\n            case \"figure\":\n            case \"footer\":\n            case \"header\":\n            case \"hgroup\":\n            case \"main\":\n            case \"nav\":\n            case \"ol\":\n            case \"p\":\n            case \"section\":\n            case \"summary\":\n            case \"ul\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              insertHTMLElement(value, arg3);\n              return;\n            case \"menu\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              if (isA(stack.top, 'menuitem')) {\n                stack.pop();\n              }\n              insertHTMLElement(value, arg3);\n              return;\n            case \"h1\":\n            case \"h2\":\n            case \"h3\":\n            case \"h4\":\n            case \"h5\":\n            case \"h6\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              if (stack.top instanceof impl.HTMLHeadingElement) stack.pop();\n              insertHTMLElement(value, arg3);\n              return;\n            case \"pre\":\n            case \"listing\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              insertHTMLElement(value, arg3);\n              ignore_linefeed = true;\n              frameset_ok = false;\n              return;\n            case \"form\":\n              if (form_element_pointer && !stack.contains(\"template\")) return;\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              elt = insertHTMLElement(value, arg3);\n              if (!stack.contains(\"template\")) form_element_pointer = elt;\n              return;\n            case \"li\":\n              frameset_ok = false;\n              for (i = stack.elements.length - 1; i >= 0; i--) {\n                node = stack.elements[i];\n                if (node instanceof impl.HTMLLIElement) {\n                  in_body_mode(ENDTAG, \"li\");\n                  break;\n                }\n                if (isA(node, specialSet) && !isA(node, addressdivpSet)) break;\n              }\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              insertHTMLElement(value, arg3);\n              return;\n            case \"dd\":\n            case \"dt\":\n              frameset_ok = false;\n              for (i = stack.elements.length - 1; i >= 0; i--) {\n                node = stack.elements[i];\n                if (isA(node, dddtSet)) {\n                  in_body_mode(ENDTAG, node.localName);\n                  break;\n                }\n                if (isA(node, specialSet) && !isA(node, addressdivpSet)) break;\n              }\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              insertHTMLElement(value, arg3);\n              return;\n            case \"plaintext\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              insertHTMLElement(value, arg3);\n              tokenizer = plaintext_state;\n              return;\n            case \"button\":\n              if (stack.inScope(\"button\")) {\n                in_body_mode(ENDTAG, \"button\");\n                parser(t, value, arg3, arg4);\n              } else {\n                afereconstruct();\n                insertHTMLElement(value, arg3);\n                frameset_ok = false;\n              }\n              return;\n            case \"a\":\n              var activeElement = afe.findElementByTag(\"a\");\n              if (activeElement) {\n                in_body_mode(ENDTAG, value);\n                afe.remove(activeElement);\n                stack.removeElement(activeElement);\n              }\n            /* falls through */\n            case \"b\":\n            case \"big\":\n            case \"code\":\n            case \"em\":\n            case \"font\":\n            case \"i\":\n            case \"s\":\n            case \"small\":\n            case \"strike\":\n            case \"strong\":\n            case \"tt\":\n            case \"u\":\n              afereconstruct();\n              afe.push(insertHTMLElement(value, arg3), arg3);\n              return;\n            case \"nobr\":\n              afereconstruct();\n              if (stack.inScope(value)) {\n                in_body_mode(ENDTAG, value);\n                afereconstruct();\n              }\n              afe.push(insertHTMLElement(value, arg3), arg3);\n              return;\n            case \"applet\":\n            case \"marquee\":\n            case \"object\":\n              afereconstruct();\n              insertHTMLElement(value, arg3);\n              afe.insertMarker();\n              frameset_ok = false;\n              return;\n            case \"table\":\n              if (!doc._quirks && stack.inButtonScope(\"p\")) {\n                in_body_mode(ENDTAG, \"p\");\n              }\n              insertHTMLElement(value, arg3);\n              frameset_ok = false;\n              parser = in_table_mode;\n              return;\n            case \"area\":\n            case \"br\":\n            case \"embed\":\n            case \"img\":\n            case \"keygen\":\n            case \"wbr\":\n              afereconstruct();\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              frameset_ok = false;\n              return;\n            case \"input\":\n              afereconstruct();\n              elt = insertHTMLElement(value, arg3);\n              stack.pop();\n              var type = elt.getAttribute(\"type\");\n              if (!type || type.toLowerCase() !== \"hidden\") frameset_ok = false;\n              return;\n            case \"param\":\n            case \"source\":\n            case \"track\":\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              return;\n            case \"hr\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              if (isA(stack.top, 'menuitem')) {\n                stack.pop();\n              }\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              frameset_ok = false;\n              return;\n            case \"image\":\n              in_body_mode(TAG, \"img\", arg3, arg4);\n              return;\n            case \"textarea\":\n              insertHTMLElement(value, arg3);\n              ignore_linefeed = true;\n              frameset_ok = false;\n              tokenizer = rcdata_state;\n              originalInsertionMode = parser;\n              parser = text_mode;\n              return;\n            case \"xmp\":\n              if (stack.inButtonScope(\"p\")) in_body_mode(ENDTAG, \"p\");\n              afereconstruct();\n              frameset_ok = false;\n              parseRawText(value, arg3);\n              return;\n            case \"iframe\":\n              frameset_ok = false;\n              parseRawText(value, arg3);\n              return;\n            case \"noembed\":\n              parseRawText(value, arg3);\n              return;\n            case \"select\":\n              afereconstruct();\n              insertHTMLElement(value, arg3);\n              frameset_ok = false;\n              if (parser === in_table_mode || parser === in_caption_mode || parser === in_table_body_mode || parser === in_row_mode || parser === in_cell_mode) parser = in_select_in_table_mode;else parser = in_select_mode;\n              return;\n            case \"optgroup\":\n            case \"option\":\n              if (stack.top instanceof impl.HTMLOptionElement) {\n                in_body_mode(ENDTAG, \"option\");\n              }\n              afereconstruct();\n              insertHTMLElement(value, arg3);\n              return;\n            case \"menuitem\":\n              if (isA(stack.top, 'menuitem')) {\n                stack.pop();\n              }\n              afereconstruct();\n              insertHTMLElement(value, arg3);\n              return;\n            case \"rb\":\n            case \"rtc\":\n              if (stack.inScope(\"ruby\")) {\n                stack.generateImpliedEndTags();\n              }\n              insertHTMLElement(value, arg3);\n              return;\n            case \"rp\":\n            case \"rt\":\n              if (stack.inScope(\"ruby\")) {\n                stack.generateImpliedEndTags(\"rtc\");\n              }\n              insertHTMLElement(value, arg3);\n              return;\n            case \"math\":\n              afereconstruct();\n              adjustMathMLAttributes(arg3);\n              adjustForeignAttributes(arg3);\n              insertForeignElement(value, arg3, NAMESPACE.MATHML);\n              if (arg4)\n                // self-closing flag\n                stack.pop();\n              return;\n            case \"svg\":\n              afereconstruct();\n              adjustSVGAttributes(arg3);\n              adjustForeignAttributes(arg3);\n              insertForeignElement(value, arg3, NAMESPACE.SVG);\n              if (arg4)\n                // self-closing flag\n                stack.pop();\n              return;\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"frame\":\n            case \"head\":\n            case \"tbody\":\n            case \"td\":\n            case \"tfoot\":\n            case \"th\":\n            case \"thead\":\n            case \"tr\":\n              // Ignore table tags if we're not in_table mode\n              return;\n          }\n\n          // Handle any other start tag here\n          // (and also noscript tags when scripting is disabled)\n          afereconstruct();\n          insertHTMLElement(value, arg3);\n          return;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"template\":\n              in_head_mode(ENDTAG, value, arg3);\n              return;\n            case \"body\":\n              if (!stack.inScope(\"body\")) return;\n              parser = after_body_mode;\n              return;\n            case \"html\":\n              if (!stack.inScope(\"body\")) return;\n              parser = after_body_mode;\n              parser(t, value, arg3);\n              return;\n            case \"address\":\n            case \"article\":\n            case \"aside\":\n            case \"blockquote\":\n            case \"button\":\n            case \"center\":\n            case \"details\":\n            case \"dialog\":\n            case \"dir\":\n            case \"div\":\n            case \"dl\":\n            case \"fieldset\":\n            case \"figcaption\":\n            case \"figure\":\n            case \"footer\":\n            case \"header\":\n            case \"hgroup\":\n            case \"listing\":\n            case \"main\":\n            case \"menu\":\n            case \"nav\":\n            case \"ol\":\n            case \"pre\":\n            case \"section\":\n            case \"summary\":\n            case \"ul\":\n              // Ignore if there is not a matching open tag\n              if (!stack.inScope(value)) return;\n              stack.generateImpliedEndTags();\n              stack.popTag(value);\n              return;\n            case \"form\":\n              if (!stack.contains(\"template\")) {\n                var openform = form_element_pointer;\n                form_element_pointer = null;\n                if (!openform || !stack.elementInScope(openform)) return;\n                stack.generateImpliedEndTags();\n                stack.removeElement(openform);\n              } else {\n                if (!stack.inScope(\"form\")) return;\n                stack.generateImpliedEndTags();\n                stack.popTag(\"form\");\n              }\n              return;\n            case \"p\":\n              if (!stack.inButtonScope(value)) {\n                in_body_mode(TAG, value, null);\n                parser(t, value, arg3, arg4);\n              } else {\n                stack.generateImpliedEndTags(value);\n                stack.popTag(value);\n              }\n              return;\n            case \"li\":\n              if (!stack.inListItemScope(value)) return;\n              stack.generateImpliedEndTags(value);\n              stack.popTag(value);\n              return;\n            case \"dd\":\n            case \"dt\":\n              if (!stack.inScope(value)) return;\n              stack.generateImpliedEndTags(value);\n              stack.popTag(value);\n              return;\n            case \"h1\":\n            case \"h2\":\n            case \"h3\":\n            case \"h4\":\n            case \"h5\":\n            case \"h6\":\n              if (!stack.elementTypeInScope(impl.HTMLHeadingElement)) return;\n              stack.generateImpliedEndTags();\n              stack.popElementType(impl.HTMLHeadingElement);\n              return;\n            case \"sarcasm\":\n              // Take a deep breath, and then:\n              break;\n            case \"a\":\n            case \"b\":\n            case \"big\":\n            case \"code\":\n            case \"em\":\n            case \"font\":\n            case \"i\":\n            case \"nobr\":\n            case \"s\":\n            case \"small\":\n            case \"strike\":\n            case \"strong\":\n            case \"tt\":\n            case \"u\":\n              var result = adoptionAgency(value);\n              if (result) return; // If we did something we're done\n              break;\n            // Go to the \"any other end tag\" case\n\n            case \"applet\":\n            case \"marquee\":\n            case \"object\":\n              if (!stack.inScope(value)) return;\n              stack.generateImpliedEndTags();\n              stack.popTag(value);\n              afe.clearToMarker();\n              return;\n            case \"br\":\n              in_body_mode(TAG, value, null); // Turn </br> into <br>\n              return;\n          }\n\n          // Any other end tag goes here\n          for (i = stack.elements.length - 1; i >= 0; i--) {\n            node = stack.elements[i];\n            if (isA(node, value)) {\n              stack.generateImpliedEndTags(value);\n              stack.popElement(node);\n              break;\n            } else if (isA(node, specialSet)) {\n              return;\n            }\n          }\n          return;\n      }\n    }\n    function text_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          insertText(value);\n          return;\n        case -1:\n          // EOF\n          if (stack.top instanceof impl.HTMLScriptElement) stack.top._already_started = true;\n          stack.pop();\n          parser = originalInsertionMode;\n          parser(t);\n          return;\n        case 3:\n          // ENDTAG\n          if (value === \"script\") {\n            handleScriptEnd();\n          } else {\n            stack.pop();\n            parser = originalInsertionMode;\n          }\n          return;\n        default:\n          // We should never get any other token types\n          return;\n      }\n    }\n    function in_table_mode(t, value, arg3, arg4) {\n      function getTypeAttr(attrs) {\n        for (var i = 0, n = attrs.length; i < n; i++) {\n          if (attrs[i][0] === \"type\") return attrs[i][1].toLowerCase();\n        }\n        return null;\n      }\n      switch (t) {\n        case 1:\n          // TEXT\n          // XXX the text_integration_mode stuff is\n          // just a hack I made up\n          if (text_integration_mode) {\n            in_body_mode(t, value, arg3, arg4);\n            return;\n          } else if (isA(stack.top, tablesectionrowSet)) {\n            pending_table_text = [];\n            originalInsertionMode = parser;\n            parser = in_table_text_mode;\n            parser(t, value, arg3, arg4);\n            return;\n          }\n          break;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"caption\":\n              stack.clearToContext(tableContextSet);\n              afe.insertMarker();\n              insertHTMLElement(value, arg3);\n              parser = in_caption_mode;\n              return;\n            case \"colgroup\":\n              stack.clearToContext(tableContextSet);\n              insertHTMLElement(value, arg3);\n              parser = in_column_group_mode;\n              return;\n            case \"col\":\n              in_table_mode(TAG, \"colgroup\", null);\n              parser(t, value, arg3, arg4);\n              return;\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              stack.clearToContext(tableContextSet);\n              insertHTMLElement(value, arg3);\n              parser = in_table_body_mode;\n              return;\n            case \"td\":\n            case \"th\":\n            case \"tr\":\n              in_table_mode(TAG, \"tbody\", null);\n              parser(t, value, arg3, arg4);\n              return;\n            case \"table\":\n              if (!stack.inTableScope(value)) {\n                return; // Ignore the token\n              }\n              in_table_mode(ENDTAG, value);\n              parser(t, value, arg3, arg4);\n              return;\n            case \"style\":\n            case \"script\":\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n            case \"input\":\n              var type = getTypeAttr(arg3);\n              if (type !== \"hidden\") break; // to the anything else case\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              return;\n            case \"form\":\n              if (form_element_pointer || stack.contains(\"template\")) return;\n              form_element_pointer = insertHTMLElement(value, arg3);\n              stack.popElement(form_element_pointer);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"table\":\n              if (!stack.inTableScope(value)) return;\n              stack.popTag(value);\n              resetInsertionMode();\n              return;\n            case \"body\":\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"html\":\n            case \"tbody\":\n            case \"td\":\n            case \"tfoot\":\n            case \"th\":\n            case \"thead\":\n            case \"tr\":\n              return;\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case -1:\n          // EOF\n          in_body_mode(t, value, arg3, arg4);\n          return;\n      }\n\n      // This is the anything else case\n      foster_parent_mode = true;\n      in_body_mode(t, value, arg3, arg4);\n      foster_parent_mode = false;\n    }\n    function in_table_text_mode(t, value, arg3, arg4) {\n      if (t === TEXT) {\n        if (textIncludesNUL) {\n          value = value.replace(NULCHARS, \"\");\n          if (value.length === 0) return;\n        }\n        pending_table_text.push(value);\n      } else {\n        var s = pending_table_text.join(\"\");\n        pending_table_text.length = 0;\n        if (NONWS.test(s)) {\n          // If any non-whitespace characters\n          // This must be the same code as the \"anything else\"\n          // case of the in_table mode above.\n          foster_parent_mode = true;\n          in_body_mode(TEXT, s);\n          foster_parent_mode = false;\n        } else {\n          insertText(s);\n        }\n        parser = originalInsertionMode;\n        parser(t, value, arg3, arg4);\n      }\n    }\n    function in_caption_mode(t, value, arg3, arg4) {\n      function end_caption() {\n        if (!stack.inTableScope(\"caption\")) return false;\n        stack.generateImpliedEndTags();\n        stack.popTag(\"caption\");\n        afe.clearToMarker();\n        parser = in_table_mode;\n        return true;\n      }\n      switch (t) {\n        case 2:\n          // TAG\n          switch (value) {\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"tbody\":\n            case \"td\":\n            case \"tfoot\":\n            case \"th\":\n            case \"thead\":\n            case \"tr\":\n              if (end_caption()) parser(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"caption\":\n              end_caption();\n              return;\n            case \"table\":\n              if (end_caption()) parser(t, value, arg3, arg4);\n              return;\n            case \"body\":\n            case \"col\":\n            case \"colgroup\":\n            case \"html\":\n            case \"tbody\":\n            case \"td\":\n            case \"tfoot\":\n            case \"th\":\n            case \"thead\":\n            case \"tr\":\n              return;\n          }\n          break;\n      }\n\n      // The Anything Else case\n      in_body_mode(t, value, arg3, arg4);\n    }\n    function in_column_group_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          var ws = value.match(LEADINGWS);\n          if (ws) {\n            insertText(ws[0]);\n            value = value.substring(ws[0].length);\n          }\n          if (value.length === 0) return;\n          break;\n        // Handle non-whitespace below\n\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"col\":\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              return;\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"colgroup\":\n              if (!isA(stack.top, 'colgroup')) {\n                return; // Ignore the token.\n              }\n              stack.pop();\n              parser = in_table_mode;\n              return;\n            case \"col\":\n              return;\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case -1:\n          // EOF\n          in_body_mode(t, value, arg3, arg4);\n          return;\n      }\n\n      // Anything else\n      if (!isA(stack.top, 'colgroup')) {\n        return; // Ignore the token.\n      }\n      in_column_group_mode(ENDTAG, \"colgroup\");\n      parser(t, value, arg3, arg4);\n    }\n    function in_table_body_mode(t, value, arg3, arg4) {\n      function endsect() {\n        if (!stack.inTableScope(\"tbody\") && !stack.inTableScope(\"thead\") && !stack.inTableScope(\"tfoot\")) return;\n        stack.clearToContext(tableBodyContextSet);\n        in_table_body_mode(ENDTAG, stack.top.localName, null);\n        parser(t, value, arg3, arg4);\n      }\n      switch (t) {\n        case 2:\n          // TAG\n          switch (value) {\n            case \"tr\":\n              stack.clearToContext(tableBodyContextSet);\n              insertHTMLElement(value, arg3);\n              parser = in_row_mode;\n              return;\n            case \"th\":\n            case \"td\":\n              in_table_body_mode(TAG, \"tr\", null);\n              parser(t, value, arg3, arg4);\n              return;\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              endsect();\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"table\":\n              endsect();\n              return;\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              if (stack.inTableScope(value)) {\n                stack.clearToContext(tableBodyContextSet);\n                stack.pop();\n                parser = in_table_mode;\n              }\n              return;\n            case \"body\":\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"html\":\n            case \"td\":\n            case \"th\":\n            case \"tr\":\n              return;\n          }\n          break;\n      }\n\n      // Anything else:\n      in_table_mode(t, value, arg3, arg4);\n    }\n    function in_row_mode(t, value, arg3, arg4) {\n      function endrow() {\n        if (!stack.inTableScope(\"tr\")) return false;\n        stack.clearToContext(tableRowContextSet);\n        stack.pop();\n        parser = in_table_body_mode;\n        return true;\n      }\n      switch (t) {\n        case 2:\n          // TAG\n          switch (value) {\n            case \"th\":\n            case \"td\":\n              stack.clearToContext(tableRowContextSet);\n              insertHTMLElement(value, arg3);\n              parser = in_cell_mode;\n              afe.insertMarker();\n              return;\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n            case \"tr\":\n              if (endrow()) parser(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"tr\":\n              endrow();\n              return;\n            case \"table\":\n              if (endrow()) parser(t, value, arg3, arg4);\n              return;\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              if (stack.inTableScope(value)) {\n                if (endrow()) parser(t, value, arg3, arg4);\n              }\n              return;\n            case \"body\":\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"html\":\n            case \"td\":\n            case \"th\":\n              return;\n          }\n          break;\n      }\n\n      // anything else\n      in_table_mode(t, value, arg3, arg4);\n    }\n    function in_cell_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 2:\n          // TAG\n          switch (value) {\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"tbody\":\n            case \"td\":\n            case \"tfoot\":\n            case \"th\":\n            case \"thead\":\n            case \"tr\":\n              if (stack.inTableScope(\"td\")) {\n                in_cell_mode(ENDTAG, \"td\");\n                parser(t, value, arg3, arg4);\n              } else if (stack.inTableScope(\"th\")) {\n                in_cell_mode(ENDTAG, \"th\");\n                parser(t, value, arg3, arg4);\n              }\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"td\":\n            case \"th\":\n              if (!stack.inTableScope(value)) return;\n              stack.generateImpliedEndTags();\n              stack.popTag(value);\n              afe.clearToMarker();\n              parser = in_row_mode;\n              return;\n            case \"body\":\n            case \"caption\":\n            case \"col\":\n            case \"colgroup\":\n            case \"html\":\n              return;\n            case \"table\":\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n            case \"tr\":\n              if (!stack.inTableScope(value)) return;\n              in_cell_mode(ENDTAG, stack.inTableScope(\"td\") ? \"td\" : \"th\");\n              parser(t, value, arg3, arg4);\n              return;\n          }\n          break;\n      }\n\n      // anything else\n      in_body_mode(t, value, arg3, arg4);\n    }\n    function in_select_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          if (textIncludesNUL) {\n            value = value.replace(NULCHARS, \"\");\n            if (value.length === 0) return;\n          }\n          insertText(value);\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case -1:\n          // EOF\n          in_body_mode(t, value, arg3, arg4);\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"option\":\n              if (stack.top instanceof impl.HTMLOptionElement) in_select_mode(ENDTAG, value);\n              insertHTMLElement(value, arg3);\n              return;\n            case \"optgroup\":\n              if (stack.top instanceof impl.HTMLOptionElement) in_select_mode(ENDTAG, \"option\");\n              if (stack.top instanceof impl.HTMLOptGroupElement) in_select_mode(ENDTAG, value);\n              insertHTMLElement(value, arg3);\n              return;\n            case \"select\":\n              in_select_mode(ENDTAG, value); // treat it as a close tag\n              return;\n            case \"input\":\n            case \"keygen\":\n            case \"textarea\":\n              if (!stack.inSelectScope(\"select\")) return;\n              in_select_mode(ENDTAG, \"select\");\n              parser(t, value, arg3, arg4);\n              return;\n            case \"script\":\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"optgroup\":\n              if (stack.top instanceof impl.HTMLOptionElement && stack.elements[stack.elements.length - 2] instanceof impl.HTMLOptGroupElement) {\n                in_select_mode(ENDTAG, \"option\");\n              }\n              if (stack.top instanceof impl.HTMLOptGroupElement) stack.pop();\n              return;\n            case \"option\":\n              if (stack.top instanceof impl.HTMLOptionElement) stack.pop();\n              return;\n            case \"select\":\n              if (!stack.inSelectScope(value)) return;\n              stack.popTag(value);\n              resetInsertionMode();\n              return;\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n      }\n\n      // anything else: just ignore the token\n    }\n    function in_select_in_table_mode(t, value, arg3, arg4) {\n      switch (value) {\n        case \"caption\":\n        case \"table\":\n        case \"tbody\":\n        case \"tfoot\":\n        case \"thead\":\n        case \"tr\":\n        case \"td\":\n        case \"th\":\n          switch (t) {\n            case 2:\n              // TAG\n              in_select_in_table_mode(ENDTAG, \"select\");\n              parser(t, value, arg3, arg4);\n              return;\n            case 3:\n              // ENDTAG\n              if (stack.inTableScope(value)) {\n                in_select_in_table_mode(ENDTAG, \"select\");\n                parser(t, value, arg3, arg4);\n              }\n              return;\n          }\n      }\n\n      // anything else\n      in_select_mode(t, value, arg3, arg4);\n    }\n    function in_template_mode(t, value, arg3, arg4) {\n      function switchModeAndReprocess(mode) {\n        parser = mode;\n        templateInsertionModes[templateInsertionModes.length - 1] = parser;\n        parser(t, value, arg3, arg4);\n      }\n      switch (t) {\n        case 1: // TEXT\n        case 4: // COMMENT\n        case 5:\n          // DOCTYPE\n          in_body_mode(t, value, arg3, arg4);\n          return;\n        case -1:\n          // EOF\n          if (!stack.contains(\"template\")) {\n            stopParsing();\n          } else {\n            stack.popTag(\"template\");\n            afe.clearToMarker();\n            templateInsertionModes.pop();\n            resetInsertionMode();\n            parser(t, value, arg3, arg4);\n          }\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"base\":\n            case \"basefont\":\n            case \"bgsound\":\n            case \"link\":\n            case \"meta\":\n            case \"noframes\":\n            case \"script\":\n            case \"style\":\n            case \"template\":\n            case \"title\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n            case \"caption\":\n            case \"colgroup\":\n            case \"tbody\":\n            case \"tfoot\":\n            case \"thead\":\n              switchModeAndReprocess(in_table_mode);\n              return;\n            case \"col\":\n              switchModeAndReprocess(in_column_group_mode);\n              return;\n            case \"tr\":\n              switchModeAndReprocess(in_table_body_mode);\n              return;\n            case \"td\":\n            case \"th\":\n              switchModeAndReprocess(in_row_mode);\n              return;\n          }\n          switchModeAndReprocess(in_body_mode);\n          return;\n        case 3:\n          // ENDTAG\n          switch (value) {\n            case \"template\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n            default:\n              return;\n          }\n      }\n    }\n    function after_body_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          // If any non-space chars, handle below\n          if (NONWS.test(value)) break;\n          in_body_mode(t, value);\n          return;\n        case 4:\n          // COMMENT\n          // Append it to the <html> element\n          stack.elements[0]._appendChild(doc.createComment(value));\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case -1:\n          // EOF\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          if (value === \"html\") {\n            in_body_mode(t, value, arg3, arg4);\n            return;\n          }\n          break;\n        // for any other tags\n        case 3:\n          // ENDTAG\n          if (value === \"html\") {\n            if (fragment) return;\n            parser = after_after_body_mode;\n            return;\n          }\n          break;\n        // for any other tags\n      }\n\n      // anything else\n      parser = in_body_mode;\n      parser(t, value, arg3, arg4);\n    }\n    function in_frameset_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          // Ignore any non-space characters\n          value = value.replace(ALLNONWS, \"\");\n          if (value.length > 0) insertText(value);\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case -1:\n          // EOF\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"frameset\":\n              insertHTMLElement(value, arg3);\n              return;\n            case \"frame\":\n              insertHTMLElement(value, arg3);\n              stack.pop();\n              return;\n            case \"noframes\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          if (value === \"frameset\") {\n            if (fragment && stack.top instanceof impl.HTMLHtmlElement) return;\n            stack.pop();\n            if (!fragment && !(stack.top instanceof impl.HTMLFrameSetElement)) parser = after_frameset_mode;\n            return;\n          }\n          break;\n      }\n\n      // ignore anything else\n    }\n    function after_frameset_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          // Ignore any non-space characters\n          value = value.replace(ALLNONWS, \"\");\n          if (value.length > 0) insertText(value);\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          return;\n        case -1:\n          // EOF\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"noframes\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n        case 3:\n          // ENDTAG\n          if (value === \"html\") {\n            parser = after_after_frameset_mode;\n            return;\n          }\n          break;\n      }\n\n      // ignore anything else\n    }\n    function after_after_body_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          // If any non-space chars, handle below\n          if (NONWS.test(value)) break;\n          in_body_mode(t, value, arg3, arg4);\n          return;\n        case 4:\n          // COMMENT\n          doc._appendChild(doc.createComment(value));\n          return;\n        case 5:\n          // DOCTYPE\n          in_body_mode(t, value, arg3, arg4);\n          return;\n        case -1:\n          // EOF\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          if (value === \"html\") {\n            in_body_mode(t, value, arg3, arg4);\n            return;\n          }\n          break;\n      }\n\n      // anything else\n      parser = in_body_mode;\n      parser(t, value, arg3, arg4);\n    }\n    function after_after_frameset_mode(t, value, arg3, arg4) {\n      switch (t) {\n        case 1:\n          // TEXT\n          // Ignore any non-space characters\n          value = value.replace(ALLNONWS, \"\");\n          if (value.length > 0) in_body_mode(t, value, arg3, arg4);\n          return;\n        case 4:\n          // COMMENT\n          doc._appendChild(doc.createComment(value));\n          return;\n        case 5:\n          // DOCTYPE\n          in_body_mode(t, value, arg3, arg4);\n          return;\n        case -1:\n          // EOF\n          stopParsing();\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"html\":\n              in_body_mode(t, value, arg3, arg4);\n              return;\n            case \"noframes\":\n              in_head_mode(t, value, arg3, arg4);\n              return;\n          }\n          break;\n      }\n\n      // ignore anything else\n    }\n\n    // 13.2.5.5 The rules for parsing tokens in foreign content\n    //\n    // This is like one of the insertion modes above, but is\n    // invoked somewhat differently when the current token is not HTML.\n    // See the insertToken() function.\n    function insertForeignToken(t, value, arg3, arg4) {\n      // A <font> tag is an HTML font tag if it has a color, font, or size\n      // attribute.  Otherwise we assume it is foreign content\n      function isHTMLFont(attrs) {\n        for (var i = 0, n = attrs.length; i < n; i++) {\n          switch (attrs[i][0]) {\n            case \"color\":\n            case \"face\":\n            case \"size\":\n              return true;\n          }\n        }\n        return false;\n      }\n      var current;\n      switch (t) {\n        case 1:\n          // TEXT\n          // If any non-space, non-nul characters\n          if (frameset_ok && NONWSNONNUL.test(value)) frameset_ok = false;\n          if (textIncludesNUL) {\n            value = value.replace(NULCHARS, \"\\uFFFD\");\n          }\n          insertText(value);\n          return;\n        case 4:\n          // COMMENT\n          insertComment(value);\n          return;\n        case 5:\n          // DOCTYPE\n          // ignore it\n          return;\n        case 2:\n          // TAG\n          switch (value) {\n            case \"font\":\n              if (!isHTMLFont(arg3)) break;\n            /* falls through */\n            case \"b\":\n            case \"big\":\n            case \"blockquote\":\n            case \"body\":\n            case \"br\":\n            case \"center\":\n            case \"code\":\n            case \"dd\":\n            case \"div\":\n            case \"dl\":\n            case \"dt\":\n            case \"em\":\n            case \"embed\":\n            case \"h1\":\n            case \"h2\":\n            case \"h3\":\n            case \"h4\":\n            case \"h5\":\n            case \"h6\":\n            case \"head\":\n            case \"hr\":\n            case \"i\":\n            case \"img\":\n            case \"li\":\n            case \"listing\":\n            case \"menu\":\n            case \"meta\":\n            case \"nobr\":\n            case \"ol\":\n            case \"p\":\n            case \"pre\":\n            case \"ruby\":\n            case \"s\":\n            case \"small\":\n            case \"span\":\n            case \"strong\":\n            case \"strike\":\n            case \"sub\":\n            case \"sup\":\n            case \"table\":\n            case \"tt\":\n            case \"u\":\n            case \"ul\":\n            case \"var\":\n              if (fragment) {\n                break;\n              }\n              do {\n                stack.pop();\n                current = stack.top;\n              } while (current.namespaceURI !== NAMESPACE.HTML && !isMathmlTextIntegrationPoint(current) && !isHTMLIntegrationPoint(current));\n              insertToken(t, value, arg3, arg4); // reprocess\n              return;\n          }\n\n          // Any other start tag case goes here\n          current = stack.elements.length === 1 && fragment ? fragmentContext : stack.top;\n          if (current.namespaceURI === NAMESPACE.MATHML) {\n            adjustMathMLAttributes(arg3);\n          } else if (current.namespaceURI === NAMESPACE.SVG) {\n            value = adjustSVGTagName(value);\n            adjustSVGAttributes(arg3);\n          }\n          adjustForeignAttributes(arg3);\n          insertForeignElement(value, arg3, current.namespaceURI);\n          if (arg4) {\n            // the self-closing flag\n            stack.pop();\n          }\n          return;\n        case 3:\n          // ENDTAG\n          current = stack.top;\n          if (value === \"script\" && current.namespaceURI === NAMESPACE.SVG && current.localName === \"script\") {\n            stack.pop();\n\n            // XXX\n            // Deal with SVG scripts here\n          } else {\n            // The any other end tag case\n            var i = stack.elements.length - 1;\n            var node = stack.elements[i];\n            for (;;) {\n              if (node.localName.toLowerCase() === value) {\n                stack.popElement(node);\n                break;\n              }\n              node = stack.elements[--i];\n              // If non-html, keep looping\n              if (node.namespaceURI !== NAMESPACE.HTML) continue;\n              // Otherwise process the end tag as html\n              parser(t, value, arg3, arg4);\n              break;\n            }\n          }\n          return;\n      }\n    }\n\n    /***\n     * Finally, this is the end of the HTMLParser() factory function.\n     * It returns the htmlparser object with the append() and end() methods.\n     */\n\n    // Sneak another method into the htmlparser object to allow us to run\n    // tokenizer tests.  This can be commented out in production code.\n    // This is a hook for testing the tokenizer. It has to be here\n    // because the tokenizer details are all hidden away within the closure.\n    // It should return an array of tokens generated while parsing the\n    // input string.\n    htmlparser.testTokenizer = function (input, initialState, lastStartTag, charbychar) {\n      var tokens = [];\n      switch (initialState) {\n        case \"PCDATA state\":\n          tokenizer = data_state;\n          break;\n        case \"RCDATA state\":\n          tokenizer = rcdata_state;\n          break;\n        case \"RAWTEXT state\":\n          tokenizer = rawtext_state;\n          break;\n        case \"PLAINTEXT state\":\n          tokenizer = plaintext_state;\n          break;\n      }\n      if (lastStartTag) {\n        lasttagname = lastStartTag;\n      }\n      insertToken = function (t, value, arg3, arg4) {\n        flushText();\n        switch (t) {\n          case 1:\n            // TEXT\n            if (tokens.length > 0 && tokens[tokens.length - 1][0] === \"Character\") {\n              tokens[tokens.length - 1][1] += value;\n            } else tokens.push([\"Character\", value]);\n            break;\n          case 4:\n            // COMMENT\n            tokens.push([\"Comment\", value]);\n            break;\n          case 5:\n            // DOCTYPE\n            tokens.push([\"DOCTYPE\", value, arg3 === undefined ? null : arg3, arg4 === undefined ? null : arg4, !force_quirks]);\n            break;\n          case 2:\n            // TAG\n            var attrs = Object.create(null);\n            for (var i = 0; i < arg3.length; i++) {\n              // XXX: does attribute order matter?\n              var a = arg3[i];\n              if (a.length === 1) {\n                attrs[a[0]] = \"\";\n              } else {\n                attrs[a[0]] = a[1];\n              }\n            }\n            var token = [\"StartTag\", value, attrs];\n            if (arg4) token.push(true);\n            tokens.push(token);\n            break;\n          case 3:\n            // ENDTAG\n            tokens.push([\"EndTag\", value]);\n            break;\n        }\n      };\n      if (!charbychar) {\n        this.parse(input, true);\n      } else {\n        for (var i = 0; i < input.length; i++) {\n          this.parse(input[i]);\n        }\n        this.parse(\"\", true);\n      }\n      return tokens;\n    };\n\n    // Return the parser object from the HTMLParser() factory function\n    return htmlparser;\n  }\n  return HTMLParser_1;\n}\nvar DOMImplementation_1;\nvar hasRequiredDOMImplementation;\nfunction requireDOMImplementation() {\n  if (hasRequiredDOMImplementation) return DOMImplementation_1;\n  hasRequiredDOMImplementation = 1;\n  DOMImplementation_1 = DOMImplementation;\n  var Document = requireDocument();\n  var DocumentType = requireDocumentType();\n  var HTMLParser = requireHTMLParser();\n  var utils = requireUtils();\n  var xml = requireXmlnames();\n\n  // Each document must have its own instance of the domimplementation object\n  function DOMImplementation(contextObject) {\n    this.contextObject = contextObject;\n  }\n\n  // Feature/version pairs that DOMImplementation.hasFeature() returns\n  // true for.  It returns false for anything else.\n  var supportedFeatures = {\n    'xml': {\n      '': true,\n      '1.0': true,\n      '2.0': true\n    },\n    // DOM Core\n    'core': {\n      '': true,\n      '2.0': true\n    },\n    // DOM Core\n    'html': {\n      '': true,\n      '1.0': true,\n      '2.0': true\n    },\n    // HTML\n    'xhtml': {\n      '': true,\n      '1.0': true,\n      '2.0': true\n    } // HTML\n  };\n  DOMImplementation.prototype = {\n    hasFeature: function hasFeature(feature, version) {\n      var f = supportedFeatures[(feature || '').toLowerCase()];\n      return f && f[version || ''] || false;\n    },\n    createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n      if (!xml.isValidQName(qualifiedName)) utils.InvalidCharacterError();\n      return new DocumentType(this.contextObject, qualifiedName, publicId, systemId);\n    },\n    createDocument: function createDocument(namespace, qualifiedName, doctype) {\n      //\n      // Note that the current DOMCore spec makes it impossible to\n      // create an HTML document with this function, even if the\n      // namespace and doctype are propertly set.  See this thread:\n      // http://lists.w3.org/Archives/Public/www-dom/2011AprJun/0132.html\n      //\n      var d = new Document(false, null);\n      var e;\n      if (qualifiedName) e = d.createElementNS(namespace, qualifiedName);else e = null;\n      if (doctype) {\n        d.appendChild(doctype);\n      }\n      if (e) d.appendChild(e);\n      if (namespace === utils.NAMESPACE.HTML) {\n        d._contentType = 'application/xhtml+xml';\n      } else if (namespace === utils.NAMESPACE.SVG) {\n        d._contentType = 'image/svg+xml';\n      } else {\n        d._contentType = 'application/xml';\n      }\n      return d;\n    },\n    createHTMLDocument: function createHTMLDocument(titleText) {\n      var d = new Document(true, null);\n      d.appendChild(new DocumentType(d, 'html'));\n      var html = d.createElement('html');\n      d.appendChild(html);\n      var head = d.createElement('head');\n      html.appendChild(head);\n      if (titleText !== undefined) {\n        var title = d.createElement('title');\n        head.appendChild(title);\n        title.appendChild(d.createTextNode(titleText));\n      }\n      html.appendChild(d.createElement('body'));\n      d.modclock = 1; // Start tracking modifications\n      return d;\n    },\n    mozSetOutputMutationHandler: function (doc, handler) {\n      doc.mutationHandler = handler;\n    },\n    mozGetInputMutationHandler: function (doc) {\n      utils.nyi();\n    },\n    mozHTMLParser: HTMLParser\n  };\n  return DOMImplementation_1;\n}\nvar Location_1;\nvar hasRequiredLocation;\nfunction requireLocation() {\n  if (hasRequiredLocation) return Location_1;\n  hasRequiredLocation = 1;\n  var URL = requireURL();\n  var URLUtils = requireURLUtils();\n  Location_1 = Location;\n  function Location(window, href) {\n    this._window = window;\n    this._href = href;\n  }\n  Location.prototype = Object.create(URLUtils.prototype, {\n    constructor: {\n      value: Location\n    },\n    // Special behavior when href is set\n    href: {\n      get: function () {\n        return this._href;\n      },\n      set: function (v) {\n        this.assign(v);\n      }\n    },\n    assign: {\n      value: function (url) {\n        // Resolve the new url against the current one\n        // XXX:\n        // This is not actually correct. It should be resolved against\n        // the URL of the document of the script. For now, though, I only\n        // support a single window and there is only one base url.\n        // So this is good enough for now.\n        var current = new URL(this._href);\n        var newurl = current.resolve(url);\n\n        // Save the new url\n        this._href = newurl;\n\n        // Start loading the new document!\n        // XXX\n        // This is just something hacked together.\n        // The real algorithm is: http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#navigate\n      }\n    },\n    replace: {\n      value: function (url) {\n        // XXX\n        // Since we aren't tracking history yet, replace is the same as assign\n        this.assign(url);\n      }\n    },\n    reload: {\n      value: function () {\n        // XXX:\n        // Actually, the spec is a lot more complicated than this\n        this.assign(this.href);\n      }\n    },\n    toString: {\n      value: function () {\n        return this.href;\n      }\n    }\n  });\n  return Location_1;\n}\nvar NavigatorID_1;\nvar hasRequiredNavigatorID;\nfunction requireNavigatorID() {\n  if (hasRequiredNavigatorID) return NavigatorID_1;\n  hasRequiredNavigatorID = 1;\n\n  // https://html.spec.whatwg.org/multipage/webappapis.html#navigatorid\n  var NavigatorID = Object.create(null, {\n    appCodeName: {\n      value: \"Mozilla\"\n    },\n    appName: {\n      value: \"Netscape\"\n    },\n    appVersion: {\n      value: \"4.0\"\n    },\n    platform: {\n      value: \"\"\n    },\n    product: {\n      value: \"Gecko\"\n    },\n    productSub: {\n      value: \"20100101\"\n    },\n    userAgent: {\n      value: \"\"\n    },\n    vendor: {\n      value: \"\"\n    },\n    vendorSub: {\n      value: \"\"\n    },\n    taintEnabled: {\n      value: function () {\n        return false;\n      }\n    }\n  });\n  NavigatorID_1 = NavigatorID;\n  return NavigatorID_1;\n}\nvar WindowTimers_1;\nvar hasRequiredWindowTimers;\nfunction requireWindowTimers() {\n  if (hasRequiredWindowTimers) return WindowTimers_1;\n  hasRequiredWindowTimers = 1;\n\n  // https://html.spec.whatwg.org/multipage/webappapis.html#windowtimers\n  var WindowTimers = {\n    setTimeout: setTimeout,\n    clearTimeout: clearTimeout,\n    setInterval: setInterval,\n    clearInterval: clearInterval\n  };\n  WindowTimers_1 = WindowTimers;\n  return WindowTimers_1;\n}\nvar impl = {\n  exports: {}\n};\nvar hasRequiredImpl;\nfunction requireImpl() {\n  if (hasRequiredImpl) return impl.exports;\n  hasRequiredImpl = 1;\n  (function (module, exports) {\n    var utils = requireUtils();\n    exports = module.exports = {\n      CSSStyleDeclaration: requireCSSStyleDeclaration(),\n      CharacterData: requireCharacterData(),\n      Comment: requireComment(),\n      DOMImplementation: requireDOMImplementation(),\n      DOMTokenList: requireDOMTokenList(),\n      Document: requireDocument(),\n      DocumentFragment: requireDocumentFragment(),\n      DocumentType: requireDocumentType(),\n      Element: requireElement(),\n      HTMLParser: requireHTMLParser(),\n      NamedNodeMap: requireNamedNodeMap(),\n      Node: requireNode(),\n      NodeList: requireNodeList(),\n      NodeFilter: requireNodeFilter(),\n      ProcessingInstruction: requireProcessingInstruction(),\n      Text: requireText(),\n      Window: requireWindow()\n    };\n    utils.merge(exports, requireEvents());\n    utils.merge(exports, requireHtmlelts().elements);\n    utils.merge(exports, requireSvg().elements);\n  })(impl, impl.exports);\n  return impl.exports;\n}\nvar Window_1;\nvar hasRequiredWindow;\nfunction requireWindow() {\n  if (hasRequiredWindow) return Window_1;\n  hasRequiredWindow = 1;\n  var DOMImplementation = requireDOMImplementation();\n  var EventTarget = requireEventTarget();\n  var Location = requireLocation();\n  var utils = requireUtils();\n  Window_1 = Window;\n  function Window(document) {\n    this.document = document || new DOMImplementation(null).createHTMLDocument(\"\");\n    this.document._scripting_enabled = true;\n    this.document.defaultView = this;\n    this.location = new Location(this, this.document._address || 'about:blank');\n  }\n  Window.prototype = Object.create(EventTarget.prototype, {\n    console: {\n      value: console\n    },\n    history: {\n      value: {\n        back: utils.nyi,\n        forward: utils.nyi,\n        go: utils.nyi\n      }\n    },\n    navigator: {\n      value: requireNavigatorID()\n    },\n    // Self-referential properties\n    window: {\n      get: function () {\n        return this;\n      }\n    },\n    self: {\n      get: function () {\n        return this;\n      }\n    },\n    frames: {\n      get: function () {\n        return this;\n      }\n    },\n    // Self-referential properties for a top-level window\n    parent: {\n      get: function () {\n        return this;\n      }\n    },\n    top: {\n      get: function () {\n        return this;\n      }\n    },\n    // We don't support any other windows for now\n    length: {\n      value: 0\n    },\n    // no frames\n    frameElement: {\n      value: null\n    },\n    // not part of a frame\n    opener: {\n      value: null\n    },\n    // not opened by another window\n\n    // The onload event handler.\n    // XXX: need to support a bunch of other event types, too,\n    // and have them interoperate with document.body.\n\n    onload: {\n      get: function () {\n        return this._getEventHandler(\"load\");\n      },\n      set: function (v) {\n        this._setEventHandler(\"load\", v);\n      }\n    },\n    // XXX This is a completely broken implementation\n    getComputedStyle: {\n      value: function getComputedStyle(elt) {\n        return elt.style;\n      }\n    }\n  });\n  utils.expose(requireWindowTimers(), Window);\n  utils.expose(requireImpl(), Window);\n  return Window_1;\n}\nvar hasRequiredLib;\nfunction requireLib() {\n  if (hasRequiredLib) return lib;\n  hasRequiredLib = 1;\n  (function (exports) {\n    var DOMImplementation = requireDOMImplementation();\n    var HTMLParser = requireHTMLParser();\n    requireWindow();\n    var impl = requireImpl();\n    exports.createDOMImplementation = function () {\n      return new DOMImplementation(null);\n    };\n    exports.createDocument = function (html, force) {\n      // Previous API couldn't let you pass '' as a document, and that\n      // yields a slightly different document than createHTMLDocument('')\n      // does.  The new `force` parameter lets you pass '' if you want to.\n      if (html || force) {\n        var parser = new HTMLParser();\n        parser.parse(html || '', true);\n        return parser.document();\n      }\n      return new DOMImplementation(null).createHTMLDocument(\"\");\n    };\n    exports.createIncrementalHTMLParser = function () {\n      var parser = new HTMLParser();\n      /** API for incremental parser. */\n      return {\n        /** Provide an additional chunk of text to be parsed. */\n        write: function (s) {\n          if (s.length > 0) {\n            parser.parse(s, false, function () {\n              return true;\n            });\n          }\n        },\n        /**\n         * Signal that we are done providing input text, optionally\n         * providing one last chunk as a parameter.\n         */\n        end: function (s) {\n          parser.parse(s || '', true, function () {\n            return true;\n          });\n        },\n        /**\n         * Performs a chunk of parsing work, returning at the end of\n         * the next token as soon as shouldPauseFunc() returns true.\n         * Returns true iff there is more work to do.\n         *\n         * For example:\n         * ```\n         *  var incrParser = domino.createIncrementalHTMLParser();\n         *  incrParser.end('...long html document...');\n         *  while (true) {\n         *    // Pause every 10ms\n         *    var start = Date.now();\n         *    var pauseIn10 = function() { return (Date.now() - start) >= 10; };\n         *    if (!incrParser.process(pauseIn10)) {\n         *      break;\n         *    }\n         *    ...yield to other tasks, do other housekeeping, etc...\n         *  }\n         * ```\n         */\n        process: function (shouldPauseFunc) {\n          return parser.parse('', false, shouldPauseFunc);\n        },\n        /**\n         * Returns the result of the incremental parse.  Valid after\n         * `this.end()` has been called and `this.process()` has returned\n         * false.\n         */\n        document: function () {\n          return parser.document();\n        }\n      };\n    };\n    exports.createWindow = function (html, address) {\n      var document = exports.createDocument(html);\n      if (address !== undefined) {\n        document._address = address;\n      }\n      return new impl.Window(document);\n    };\n    exports.impl = impl;\n  })(lib);\n  return lib;\n}\nvar libExports = requireLib();\nvar index = /*@__PURE__*/getDefaultExportFromCjs(libExports);\nfunction setDomTypes() {\n  // Make all Domino types available in the global env.\n  // NB: Any changes here should also be done in `packages/platform-server/init/src/shims.ts`.\n  Object.assign(globalThis, index.impl);\n  globalThis['KeyboardEvent'] = index.impl.Event;\n}\n/**\n * Parses a document string to a Document object.\n */\nfunction parseDocument(html, url = '/') {\n  let window = index.createWindow(html, url);\n  let doc = window.document;\n  return doc;\n}\n/**\n * Serializes a document to string.\n */\nfunction serializeDocument(doc) {\n  return doc.serialize();\n}\n/**\n * DOM Adapter for the server platform based on https://github.com/fgnass/domino.\n */\nclass DominoAdapter extends _BrowserDomAdapter {\n  static makeCurrent() {\n    setDomTypes();\n    _setRootDomAdapter(new DominoAdapter());\n  }\n  supportsDOMEvents = false;\n  static defaultDoc;\n  createHtmlDocument() {\n    return parseDocument('<html><head><title>fakeTitle</title></head><body></body></html>');\n  }\n  getDefaultDocument() {\n    if (!DominoAdapter.defaultDoc) {\n      DominoAdapter.defaultDoc = index.createDocument();\n    }\n    return DominoAdapter.defaultDoc;\n  }\n  isElementNode(node) {\n    return node ? node.nodeType === DominoAdapter.defaultDoc.ELEMENT_NODE : false;\n  }\n  isShadowRoot(node) {\n    return node.shadowRoot == node;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return doc.defaultView;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const length = doc.head.children.length;\n    // The `<base>` can only be a direct child of `<head>` so we can save some\n    // execution time by looking through them directly instead of querying for it.\n    // See: https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/base\n    // Note that we can't cache the `href` value itself, because this method gets called with a\n    // different document every time which means that in theory the value can be different too.\n    for (let i = 0; i < length; i++) {\n      const child = doc.head.children[i];\n      // Tag names are always uppercase for HTML nodes.\n      if (child.tagName === 'BASE') {\n        // TODO(alxhub): Need relative path logic from BrowserDomAdapter here?\n        return child.getAttribute('href') || '';\n      }\n    }\n    return '';\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n    // Dispatch the event to the window also.\n    const doc = el.ownerDocument || el;\n    const win = doc.defaultView;\n    if (win) {\n      win.dispatchEvent(evt);\n    }\n  }\n  getUserAgent() {\n    return 'Fake user agent';\n  }\n  getCookie(name) {\n    throw new Error('getCookie has not been implemented');\n  }\n}\n\n/**\n * The DI token for setting the initial config for the platform.\n *\n * @publicApi\n */\nconst INITIAL_CONFIG = new InjectionToken('Server.INITIAL_CONFIG');\n/**\n * A function that will be executed when calling `renderApplication` or\n * `renderModule` just before current platform state is rendered to string.\n *\n * @publicApi\n */\nconst BEFORE_APP_SERIALIZED = new InjectionToken('Server.RENDER_MODULE_HOOK');\nconst ENABLE_DOM_EMULATION = new InjectionToken('ENABLE_DOM_EMULATION');\n\n/**\n * Representation of the current platform state.\n *\n * @publicApi\n */\nclass PlatformState {\n  _doc;\n  /* @internal */\n  _enableDomEmulation = enableDomEmulation(inject(Injector));\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Renders the current state of the platform to string.\n   */\n  renderToString() {\n    if (ngDevMode && !this._enableDomEmulation && !window?.document) {\n      throw new Error('Disabled DOM emulation should only run in browser environments');\n    }\n    const measuringLabel = 'renderToString';\n    _startMeasuring(measuringLabel);\n    const rendered = this._enableDomEmulation ? serializeDocument(this._doc) :\n    // In the case we run/test the platform-server in a browser environment\n    this._doc.documentElement.outerHTML;\n    _stopMeasuring(measuringLabel);\n    return rendered;\n  }\n  /**\n   * Returns the current DOM state.\n   */\n  getDocument() {\n    return this._doc;\n  }\n  static ɵfac = function PlatformState_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PlatformState)(i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PlatformState,\n    factory: PlatformState.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PlatformState, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nfunction enableDomEmulation(injector) {\n  return injector.get(ENABLE_DOM_EMULATION, true);\n}\nclass ServerXhr {\n  xhrImpl;\n  // The `xhr2` dependency has a side-effect of accessing and modifying a\n  // global scope. Loading `xhr2` dynamically allows us to delay the loading\n  // and start the process once the global scope is established by the underlying\n  // server platform (via shims, etc).\n  async ɵloadImpl() {\n    if (!this.xhrImpl) {\n      const {\n        default: xhr\n      } = await import('xhr2');\n      this.xhrImpl = xhr;\n    }\n  }\n  build() {\n    const impl = this.xhrImpl;\n    if (!impl) {\n      throw new Error('Unexpected state in ServerXhr: XHR implementation is not loaded.');\n    }\n    return new impl.XMLHttpRequest();\n  }\n  static ɵfac = function ServerXhr_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServerXhr)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ServerXhr,\n    factory: ServerXhr.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServerXhr, [{\n    type: Injectable\n  }], null, null);\n})();\nfunction relativeUrlsTransformerInterceptorFn(request, next) {\n  const platformLocation = inject(PlatformLocation);\n  const {\n    href,\n    protocol,\n    hostname,\n    port\n  } = platformLocation;\n  if (!protocol.startsWith('http')) {\n    return next(request);\n  }\n  let urlPrefix = `${protocol}//${hostname}`;\n  if (port) {\n    urlPrefix += `:${port}`;\n  }\n  const baseHref = platformLocation.getBaseHrefFromDOM() || href;\n  const baseUrl = new URL(baseHref, urlPrefix);\n  const newUrl = new URL(request.url, baseUrl).toString();\n  return next(request.clone({\n    url: newUrl\n  }));\n}\nconst SERVER_HTTP_PROVIDERS = [{\n  provide: XhrFactory,\n  useClass: ServerXhr\n}, {\n  provide: _HTTP_ROOT_INTERCEPTOR_FNS,\n  useValue: relativeUrlsTransformerInterceptorFn,\n  multi: true\n}];\nconst RESOLVE_PROTOCOL = 'resolve:';\nfunction parseUrl(urlStr) {\n  const {\n    hostname,\n    protocol,\n    port,\n    pathname,\n    search,\n    hash\n  } = new URL(urlStr, RESOLVE_PROTOCOL + '//');\n  return {\n    hostname,\n    protocol: protocol === RESOLVE_PROTOCOL ? '' : protocol,\n    port,\n    pathname,\n    search,\n    hash\n  };\n}\n/**\n * Server-side implementation of URL state. Implements `pathname`, `search`, and `hash`\n * but not the state stack.\n */\nclass ServerPlatformLocation {\n  _doc;\n  href = '/';\n  hostname = '/';\n  protocol = '/';\n  port = '/';\n  pathname = '/';\n  search = '';\n  hash = '';\n  _hashUpdate = new Subject();\n  constructor(_doc, _config) {\n    this._doc = _doc;\n    const config = _config;\n    if (!config) {\n      return;\n    }\n    if (config.url) {\n      const url = parseUrl(config.url);\n      this.protocol = url.protocol;\n      this.hostname = url.hostname;\n      this.port = url.port;\n      this.pathname = url.pathname;\n      this.search = url.search;\n      this.hash = url.hash;\n      this.href = _doc.location.href;\n    }\n  }\n  getBaseHrefFromDOM() {\n    return _getDOM().getBaseHref(this._doc);\n  }\n  onPopState(fn) {\n    // No-op: a state stack is not implemented, so\n    // no events will ever come.\n    return () => {};\n  }\n  onHashChange(fn) {\n    const subscription = this._hashUpdate.subscribe(fn);\n    return () => subscription.unsubscribe();\n  }\n  get url() {\n    return `${this.pathname}${this.search}${this.hash}`;\n  }\n  setHash(value, oldUrl) {\n    if (this.hash === value) {\n      // Don't fire events if the hash has not changed.\n      return;\n    }\n    this.hash = value;\n    const newUrl = this.url;\n    queueMicrotask(() => this._hashUpdate.next({\n      type: 'hashchange',\n      state: null,\n      oldUrl,\n      newUrl\n    }));\n  }\n  replaceState(state, title, newUrl) {\n    const oldUrl = this.url;\n    const parsedUrl = parseUrl(newUrl);\n    this.pathname = parsedUrl.pathname;\n    this.search = parsedUrl.search;\n    this.setHash(parsedUrl.hash, oldUrl);\n  }\n  pushState(state, title, newUrl) {\n    this.replaceState(state, title, newUrl);\n  }\n  forward() {\n    throw new Error('Not implemented');\n  }\n  back() {\n    throw new Error('Not implemented');\n  }\n  // History API isn't available on server, therefore return undefined\n  getState() {\n    return undefined;\n  }\n  static ɵfac = function ServerPlatformLocation_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServerPlatformLocation)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INITIAL_CONFIG, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ServerPlatformLocation,\n    factory: ServerPlatformLocation.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServerPlatformLocation, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [INITIAL_CONFIG]\n    }]\n  }], null);\n})();\nclass ServerEventManagerPlugin extends EventManagerPlugin {\n  doc;\n  constructor(doc) {\n    super(doc);\n    this.doc = doc;\n  }\n  // Handle all events on the server.\n  supports(eventName) {\n    return true;\n  }\n  addEventListener(element, eventName, handler, options) {\n    return _getDOM().onAndCancel(element, eventName, handler, options);\n  }\n  static ɵfac = function ServerEventManagerPlugin_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServerEventManagerPlugin)(i0.ɵɵinject(DOCUMENT));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ServerEventManagerPlugin,\n    factory: ServerEventManagerPlugin.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServerEventManagerPlugin, [{\n    type: Injectable\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/** Tracks whether the server-side application transfer state has already been serialized. */\nconst TRANSFER_STATE_STATUS = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'TRANSFER_STATE_STATUS' : '', {\n  providedIn: 'root',\n  factory: () => ({\n    serialized: false\n  })\n});\nconst TRANSFER_STATE_SERIALIZATION_PROVIDERS = [{\n  provide: BEFORE_APP_SERIALIZED,\n  useFactory: serializeTransferStateFactory,\n  multi: true\n}];\n/** TODO: Move this to a utils folder and convert to use SafeValues. */\nfunction createScript(doc, textContent, nonce) {\n  const script = doc.createElement('script');\n  script.textContent = textContent;\n  if (nonce) {\n    script.setAttribute('nonce', nonce);\n  }\n  return script;\n}\nfunction warnIfStateTransferHappened(injector) {\n  const transferStateStatus = injector.get(TRANSFER_STATE_STATUS);\n  if (transferStateStatus.serialized) {\n    console.warn(`Angular detected an incompatible configuration, which causes duplicate serialization of the server-side application state.\\n\\n` + `This can happen if the server providers have been provided more than once using different mechanisms. For example:\\n\\n` + `  imports: [ServerModule], // Registers server providers\\n` + `  providers: [provideServerRendering()] // Also registers server providers\\n\\n` + `To fix this, ensure that the \\`provideServerRendering()\\` function is the only provider used and remove the other(s).`);\n  }\n  transferStateStatus.serialized = true;\n}\nfunction serializeTransferStateFactory() {\n  const doc = inject(DOCUMENT);\n  const appId = inject(APP_ID);\n  const transferStore = inject(TransferState);\n  const injector = inject(Injector);\n  return () => {\n    const measuringLabel = 'serializeTransferStateFactory';\n    _startMeasuring(measuringLabel);\n    // The `.toJSON` here causes the `onSerialize` callbacks to be called.\n    // These callbacks can be used to provide the value for a given key.\n    const content = transferStore.toJson();\n    if (transferStore.isEmpty) {\n      // The state is empty, nothing to transfer,\n      // avoid creating an extra `<script>` tag in this case.\n      return;\n    }\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n      warnIfStateTransferHappened(injector);\n    }\n    const script = createScript(doc, content,\n    /**\n     * `nonce` is not required for 'application/json'\n     * See: https://html.spec.whatwg.org/multipage/scripting.html#attr-script-type\n     */\n    null);\n    script.id = appId + '-state';\n    script.setAttribute('type', 'application/json');\n    // It is intentional that we add the script at the very bottom. Angular CLI script tags for\n    // bundles are always `type=\"module\"`. These are deferred by default and cause the\n    // transfer data to be queried only after the browser has finished parsing the DOM.\n    doc.body.appendChild(script);\n    _stopMeasuring(measuringLabel);\n  };\n}\nconst INTERNAL_SERVER_PLATFORM_PROVIDERS = [{\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: [Injector]\n}, {\n  provide: PLATFORM_ID,\n  useValue: _PLATFORM_SERVER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useFactory: initDominoAdapter,\n  multi: true,\n  deps: [Injector]\n}, {\n  provide: PlatformLocation,\n  useClass: ServerPlatformLocation,\n  deps: [DOCUMENT, [Optional, INITIAL_CONFIG]]\n}, {\n  provide: PlatformState,\n  deps: [DOCUMENT]\n}];\nfunction initDominoAdapter(injector) {\n  const _enableDomEmulation = enableDomEmulation(injector);\n  return () => {\n    if (_enableDomEmulation) {\n      DominoAdapter.makeCurrent();\n    } else {\n      _BrowserDomAdapter.makeCurrent();\n    }\n  };\n}\nconst SERVER_RENDER_PROVIDERS = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  multi: true,\n  useClass: ServerEventManagerPlugin\n}];\nconst PLATFORM_SERVER_PROVIDERS = [TRANSFER_STATE_SERIALIZATION_PROVIDERS, SERVER_RENDER_PROVIDERS, SERVER_HTTP_PROVIDERS, {\n  provide: Testability,\n  useValue: null\n},\n// Keep for backwards-compatibility.\n{\n  provide: _TESTABILITY,\n  useValue: null\n}, {\n  provide: ViewportScroller,\n  useClass: _NullViewportScroller\n}];\n/**\n * The ng module for the server.\n *\n * @publicApi\n */\nclass ServerModule {\n  static ɵfac = function ServerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ServerModule,\n    exports: [BrowserModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: PLATFORM_SERVER_PROVIDERS,\n    imports: [BrowserModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ServerModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: PLATFORM_SERVER_PROVIDERS\n    }]\n  }], null, null);\n})();\nfunction _document(injector) {\n  const config = injector.get(INITIAL_CONFIG, null);\n  const _enableDomEmulation = enableDomEmulation(injector);\n  let document;\n  if (config && config.document) {\n    document = typeof config.document === 'string' ? _enableDomEmulation ? parseDocument(config.document, config.url) : window.document : config.document;\n  } else {\n    document = _getDOM().createHtmlDocument();\n  }\n  // Tell ivy about the global document\n  _setDocument(document);\n  return document;\n}\n/**\n * Creates a server-side instance of an Angular platform.\n *\n * This platform should be used when performing server-side rendering of an Angular application.\n * Standalone applications can be bootstrapped on the server using the `bootstrapApplication`\n * function from `@angular/platform-browser`. When using `bootstrapApplication`, the `platformServer`\n * should be created first and passed to the bootstrap function using the `BootstrapContext`.\n *\n * @publicApi\n */\nfunction platformServer(extraProviders) {\n  const noServerModeSet = typeof ngServerMode === 'undefined';\n  if (noServerModeSet) {\n    globalThis['ngServerMode'] = true;\n  }\n  const platform = createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS)(extraProviders);\n  if (noServerModeSet) {\n    platform.onDestroy(() => {\n      globalThis['ngServerMode'] = undefined;\n    });\n  }\n  return platform;\n}\nexport { BEFORE_APP_SERIALIZED, DominoAdapter, ENABLE_DOM_EMULATION, INITIAL_CONFIG, INTERNAL_SERVER_PLATFORM_PROVIDERS, PLATFORM_SERVER_PROVIDERS, PlatformState, SERVER_RENDER_PROVIDERS, ServerModule, createScript, platformServer };\n", "/**\n * @license Angular v20.3.7\n * (c) 2010-2025 Google LLC. https://angular.dev/\n * License: MIT\n */\n\nimport { PLATFORM_SERVER_PROVIDERS, PlatformState, BEFORE_APP_SERIALIZED, platformServer, INITIAL_CONFIG, createScript } from './server.mjs';\nexport { ServerModule, DominoAdapter as ɵDominoAdapter, ENABLE_DOM_EMULATION as ɵENABLE_DOM_EMULATION, INTERNAL_SERVER_PLATFORM_PROVIDERS as ɵINTERNAL_SERVER_PLATFORM_PROVIDERS, SERVER_RENDER_PROVIDERS as ɵSERVER_RENDER_PROVIDERS } from './server.mjs';\nimport { makeEnvironmentProviders, InjectionToken, ApplicationRef, ɵstartMeasuring as _startMeasuring, ɵstopMeasuring as _stopMeasuring, ɵIS_HYDRATION_DOM_REUSE_ENABLED as _IS_HYDRATION_DOM_REUSE_ENABLED, ɵannotateForHydration as _annotateForHydration, CSP_NONCE, APP_ID, ɵSSR_CONTENT_INTEGRITY_MARKER as _SSR_CONTENT_INTEGRITY_MARKER, Renderer2, Version } from '@angular/core';\nimport '@angular/common';\nimport '@angular/platform-browser';\nimport '@angular/common/http';\nimport 'rxjs';\n\n/**\n * Sets up providers necessary to enable server rendering functionality for the application.\n *\n * @usageNotes\n *\n * Basic example of how you can add server support to your application:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideServerRendering()]\n * });\n * ```\n *\n * @publicApi\n * @returns A set of providers to setup the server.\n */\nfunction provideServerRendering() {\n    if (typeof ngServerMode === 'undefined') {\n        globalThis['ngServerMode'] = true;\n    }\n    return makeEnvironmentProviders([...PLATFORM_SERVER_PROVIDERS]);\n}\n\n/**\n * Event dispatch (JSAction) script is inlined into the HTML by the build\n * process to avoid extra blocking request on a page. The script looks like this:\n * ```html\n * <script type=\"text/javascript\" id=\"ng-event-dispatch-contract\">...</script>\n * ```\n * This const represents the \"id\" attribute value.\n */\nconst EVENT_DISPATCH_SCRIPT_ID = 'ng-event-dispatch-contract';\n/**\n * Creates an instance of a server platform (with or without JIT compiler support\n * depending on the `ngJitMode` global const value), using provided options.\n */\nfunction createServerPlatform(options) {\n    const extraProviders = options.platformProviders ?? [];\n    const measuringLabel = 'createServerPlatform';\n    _startMeasuring(measuringLabel);\n    const platform = platformServer([\n        { provide: INITIAL_CONFIG, useValue: { document: options.document, url: options.url } },\n        extraProviders,\n    ]);\n    _stopMeasuring(measuringLabel);\n    return platform;\n}\n/**\n * Finds and returns inlined event dispatch script if it exists.\n * See the `EVENT_DISPATCH_SCRIPT_ID` const docs for additional info.\n */\nfunction findEventDispatchScript(doc) {\n    return doc.getElementById(EVENT_DISPATCH_SCRIPT_ID);\n}\n/**\n * Removes inlined event dispatch script if it exists.\n * See the `EVENT_DISPATCH_SCRIPT_ID` const docs for additional info.\n */\nfunction removeEventDispatchScript(doc) {\n    findEventDispatchScript(doc)?.remove();\n}\n/**\n * Annotate nodes for hydration and remove event dispatch script when not needed.\n */\nfunction prepareForHydration(platformState, applicationRef) {\n    const measuringLabel = 'prepareForHydration';\n    _startMeasuring(measuringLabel);\n    const environmentInjector = applicationRef.injector;\n    const doc = platformState.getDocument();\n    if (!environmentInjector.get(_IS_HYDRATION_DOM_REUSE_ENABLED, false)) {\n        // Hydration is diabled, remove inlined event dispatch script.\n        // (which was injected by the build process) from the HTML.\n        removeEventDispatchScript(doc);\n        return;\n    }\n    appendSsrContentIntegrityMarker(doc);\n    const eventTypesToReplay = _annotateForHydration(applicationRef, doc);\n    if (eventTypesToReplay.regular.size || eventTypesToReplay.capture.size) {\n        insertEventRecordScript(environmentInjector.get(APP_ID), doc, eventTypesToReplay, environmentInjector.get(CSP_NONCE, null));\n    }\n    else {\n        // No events to replay, we should remove inlined event dispatch script\n        // (which was injected by the build process) from the HTML.\n        removeEventDispatchScript(doc);\n    }\n    _stopMeasuring(measuringLabel);\n}\n/**\n * Creates a marker comment node and append it into the `<body>`.\n * Some CDNs have mechanisms to remove all comment node from HTML.\n * This behaviour breaks hydration, so we'll detect on the client side if this\n * marker comment is still available or else throw an error\n */\nfunction appendSsrContentIntegrityMarker(doc) {\n    // Adding a ng hydration marker comment\n    const comment = doc.createComment(_SSR_CONTENT_INTEGRITY_MARKER);\n    doc.body.firstChild\n        ? doc.body.insertBefore(comment, doc.body.firstChild)\n        : doc.body.append(comment);\n}\n/**\n * Adds the `ng-server-context` attribute to host elements of all bootstrapped components\n * within a given application.\n */\nfunction appendServerContextInfo(applicationRef) {\n    const injector = applicationRef.injector;\n    let serverContext = sanitizeServerContext(injector.get(SERVER_CONTEXT, DEFAULT_SERVER_CONTEXT));\n    applicationRef.components.forEach((componentRef) => {\n        const renderer = componentRef.injector.get(Renderer2);\n        const element = componentRef.location.nativeElement;\n        if (element) {\n            renderer.setAttribute(element, 'ng-server-context', serverContext);\n        }\n    });\n}\nfunction insertEventRecordScript(appId, doc, eventTypesToReplay, nonce) {\n    const measuringLabel = 'insertEventRecordScript';\n    _startMeasuring(measuringLabel);\n    const { regular, capture } = eventTypesToReplay;\n    const eventDispatchScript = findEventDispatchScript(doc);\n    // Note: this is only true when build with the CLI tooling, which inserts the script in the HTML\n    if (eventDispatchScript) {\n        // This is defined in packages/core/primitives/event-dispatch/contract_binary.ts\n        const replayScriptContents = `window.__jsaction_bootstrap(` +\n            `document.body,` +\n            `\"${appId}\",` +\n            `${JSON.stringify(Array.from(regular))},` +\n            `${JSON.stringify(Array.from(capture))}` +\n            `);`;\n        const replayScript = createScript(doc, replayScriptContents, nonce);\n        // Insert replay script right after inlined event dispatch script, since it\n        // relies on `__jsaction_bootstrap` to be defined in the global scope.\n        eventDispatchScript.after(replayScript);\n    }\n    _stopMeasuring(measuringLabel);\n}\n/**\n * Renders an Angular application to a string.\n *\n * @private\n *\n * @param platformRef - Reference to the Angular platform.\n * @param applicationRef - Reference to the Angular application.\n * @returns A promise that resolves to the rendered string.\n */\nasync function renderInternal(platformRef, applicationRef) {\n    const platformState = platformRef.injector.get(PlatformState);\n    prepareForHydration(platformState, applicationRef);\n    appendServerContextInfo(applicationRef);\n    // Run any BEFORE_APP_SERIALIZED callbacks just before rendering to string.\n    const environmentInjector = applicationRef.injector;\n    const callbacks = environmentInjector.get(BEFORE_APP_SERIALIZED, null);\n    if (callbacks) {\n        const asyncCallbacks = [];\n        for (const callback of callbacks) {\n            try {\n                const callbackResult = callback();\n                if (callbackResult) {\n                    asyncCallbacks.push(callbackResult);\n                }\n            }\n            catch (e) {\n                // Ignore exceptions.\n                console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', e);\n            }\n        }\n        if (asyncCallbacks.length) {\n            for (const result of await Promise.allSettled(asyncCallbacks)) {\n                if (result.status === 'rejected') {\n                    console.warn('Ignoring BEFORE_APP_SERIALIZED Exception: ', result.reason);\n                }\n            }\n        }\n    }\n    return platformState.renderToString();\n}\n/**\n * Destroy the application in a macrotask, this allows pending promises to be settled and errors\n * to be surfaced to the users.\n */\nfunction asyncDestroyPlatform(platformRef) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            platformRef.destroy();\n            resolve();\n        }, 0);\n    });\n}\n/**\n * Specifies the value that should be used if no server context value has been provided.\n */\nconst DEFAULT_SERVER_CONTEXT = 'other';\n/**\n * An internal token that allows providing extra information about the server context\n * (e.g. whether SSR or SSG was used). The value is a string and characters other\n * than [a-zA-Z0-9\\-] are removed. See the default value in `DEFAULT_SERVER_CONTEXT` const.\n */\nconst SERVER_CONTEXT = new InjectionToken('SERVER_CONTEXT');\n/**\n * Sanitizes provided server context:\n * - removes all characters other than a-z, A-Z, 0-9 and `-`\n * - returns `other` if nothing is provided or the string is empty after sanitization\n */\nfunction sanitizeServerContext(serverContext) {\n    const context = serverContext.replace(/[^a-zA-Z0-9\\-]/g, '');\n    return context.length > 0 ? context : DEFAULT_SERVER_CONTEXT;\n}\n/**\n * Bootstraps an application using provided NgModule and serializes the page content to string.\n *\n * @param moduleType A reference to an NgModule that should be used for bootstrap.\n * @param options Additional configuration for the render operation:\n *  - `document` - the document of the page to render, either as an HTML string or\n *                 as a reference to the `document` instance.\n *  - `url` - the URL for the current render request.\n *  - `extraProviders` - set of platform level providers for the current render request.\n *\n * @publicApi\n */\nasync function renderModule(moduleType, options) {\n    const { document, url, extraProviders: platformProviders } = options;\n    const platformRef = createServerPlatform({ document, url, platformProviders });\n    try {\n        const moduleRef = await platformRef.bootstrapModule(moduleType);\n        const applicationRef = moduleRef.injector.get(ApplicationRef);\n        const measuringLabel = 'whenStable';\n        _startMeasuring(measuringLabel);\n        // Block until application is stable.\n        await applicationRef.whenStable();\n        _stopMeasuring(measuringLabel);\n        return await renderInternal(platformRef, applicationRef);\n    }\n    finally {\n        await asyncDestroyPlatform(platformRef);\n    }\n}\n/**\n * Bootstraps an instance of an Angular application and renders it to a string.\n *\n * @usageNotes\n *\n * ```ts\n * import { BootstrapContext, bootstrapApplication } from '@angular/platform-browser';\n * import { renderApplication } from '@angular/platform-server';\n * import { ApplicationConfig } from '@angular/core';\n * import { AppComponent } from './app.component';\n *\n * const appConfig: ApplicationConfig = { providers: [...] };\n * const bootstrap = (context: BootstrapContext) =>\n *   bootstrapApplication(AppComponent, config, context);\n * const output = await renderApplication(bootstrap);\n * ```\n *\n * @param bootstrap A method that when invoked returns a promise that returns an `ApplicationRef`\n *     instance once resolved. The method is invoked with an `Injector` instance that\n *     provides access to the platform-level dependency injection context.\n * @param options Additional configuration for the render operation:\n *  - `document` - the document of the page to render, either as an HTML string or\n *                 as a reference to the `document` instance.\n *  - `url` - the URL for the current render request.\n *  - `platformProviders` - the platform level providers for the current render request.\n *\n * @returns A Promise, that returns serialized (to a string) rendered page, once resolved.\n *\n * @publicApi\n */\nasync function renderApplication(bootstrap, options) {\n    const renderAppLabel = 'renderApplication';\n    const bootstrapLabel = 'bootstrap';\n    const _renderLabel = '_render';\n    _startMeasuring(renderAppLabel);\n    const platformRef = createServerPlatform(options);\n    try {\n        _startMeasuring(bootstrapLabel);\n        const applicationRef = await bootstrap({ platformRef });\n        _stopMeasuring(bootstrapLabel);\n        _startMeasuring(_renderLabel);\n        const measuringLabel = 'whenStable';\n        _startMeasuring(measuringLabel);\n        // Block until application is stable.\n        await applicationRef.whenStable();\n        _stopMeasuring(measuringLabel);\n        const rendered = await renderInternal(platformRef, applicationRef);\n        _stopMeasuring(_renderLabel);\n        return rendered;\n    }\n    finally {\n        await asyncDestroyPlatform(platformRef);\n        _stopMeasuring(renderAppLabel);\n    }\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-server package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('20.3.7');\n\nexport { BEFORE_APP_SERIALIZED, INITIAL_CONFIG, PlatformState, VERSION, platformServer, provideServerRendering, renderApplication, renderModule, SERVER_CONTEXT as ɵSERVER_CONTEXT, renderInternal as ɵrenderInternal };\n\n", "function createNotImplementedError(name) {\n  throw new Error(`[unenv] ${name} is not implemented yet!`);\n}\nfunction notImplemented(name) {\n  const fn = () => {\n    throw createNotImplementedError(name);\n  };\n  return Object.assign(fn, { __unenv__: true });\n}\n\nconst access = notImplemented(\"fs.access\");\nconst copyFile = notImplemented(\"fs.copyFile\");\nconst cp = notImplemented(\"fs.cp\");\nconst open = notImplemented(\"fs.open\");\nconst opendir = notImplemented(\"fs.opendir\");\nconst rename = notImplemented(\"fs.rename\");\nconst truncate = notImplemented(\"fs.truncate\");\nconst rm = notImplemented(\"fs.rm\");\nconst rmdir = notImplemented(\"fs.rmdir\");\nconst mkdir = notImplemented(\"fs.mkdir\");\nconst readdir = notImplemented(\"fs.readdir\");\nconst readlink = notImplemented(\"fs.readlink\");\nconst symlink = notImplemented(\"fs.symlink\");\nconst lstat = notImplemented(\"fs.lstat\");\nconst stat = notImplemented(\"fs.stat\");\nconst link = notImplemented(\"fs.link\");\nconst unlink = notImplemented(\"fs.unlink\");\nconst chmod = notImplemented(\"fs.chmod\");\nconst lchmod = notImplemented(\"fs.lchmod\");\nconst lchown = notImplemented(\"fs.lchown\");\nconst chown = notImplemented(\"fs.chown\");\nconst utimes = notImplemented(\"fs.utimes\");\nconst lutimes = notImplemented(\"fs.lutimes\");\nconst realpath = notImplemented(\"fs.realpath\");\nconst mkdtemp = notImplemented(\"fs.mkdtemp\");\nconst writeFile$1 = notImplemented(\"fs.writeFile\");\nconst appendFile = notImplemented(\"fs.appendFile\");\nconst readFile$1 = notImplemented(\"fs.readFile\");\nnotImplemented(\"fs.watch\");\nconst statfs = notImplemented(\"fs.statfs\");\n\nfunction notImplementedAsync(name) {\n  const fn = notImplemented(name);\n  fn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n  fn.native = fn;\n  return fn;\n}\nfunction callbackify(fn) {\n  const fnc = function(...args) {\n    const cb = args.pop();\n    fn().catch((error) => cb(error)).then((val) => cb(void 0, val));\n  };\n  fnc.__promisify__ = fn;\n  fnc.native = fnc;\n  return fnc;\n}\ncallbackify(access);\ncallbackify(appendFile);\ncallbackify(chown);\ncallbackify(chmod);\ncallbackify(copyFile);\ncallbackify(cp);\ncallbackify(lchown);\ncallbackify(lchmod);\ncallbackify(link);\ncallbackify(lstat);\ncallbackify(lutimes);\ncallbackify(mkdir);\ncallbackify(mkdtemp);\ncallbackify(realpath);\ncallbackify(open);\ncallbackify(opendir);\ncallbackify(readdir);\nconst readFile = callbackify(readFile$1);\ncallbackify(readlink);\ncallbackify(rename);\ncallbackify(rm);\ncallbackify(rmdir);\ncallbackify(stat);\ncallbackify(symlink);\ncallbackify(truncate);\ncallbackify(unlink);\ncallbackify(utimes);\nconst writeFile = callbackify(writeFile$1);\ncallbackify(statfs);\nnotImplementedAsync(\"fs.close\");\nnotImplementedAsync(\n  \"fs.createReadStream\"\n);\nnotImplementedAsync(\"fs.createWriteStream\");\nnotImplementedAsync(\"fs.exists\");\nnotImplementedAsync(\"fs.fchown\");\nnotImplementedAsync(\"fs.fchmod\");\nnotImplementedAsync(\"fs.fdatasync\");\nnotImplementedAsync(\"fs.fstat\");\nnotImplementedAsync(\"fs.fsync\");\nnotImplementedAsync(\"fs.ftruncate\");\nnotImplementedAsync(\"fs.futimes\");\nnotImplementedAsync(\"fs.lstatSync\");\nnotImplementedAsync(\"fs.read\");\nnotImplementedAsync(\"fs.readv\");\nnotImplementedAsync(\"fs.realpathSync\");\nnotImplementedAsync(\"fs.statSync\");\nnotImplementedAsync(\"fs.unwatchFile\");\nnotImplementedAsync(\"fs.watch\");\nnotImplementedAsync(\"fs.watchFile\");\nnotImplementedAsync(\"fs.write\");\nnotImplementedAsync(\"fs.writev\");\nnotImplementedAsync(\"fs._toUnixTimestamp\");\nnotImplementedAsync(\"fs.openAsBlob\");\nnotImplemented(\"fs.appendFileSync\");\nnotImplemented(\"fs.accessSync\");\nnotImplemented(\"fs.chownSync\");\nnotImplemented(\"fs.chmodSync\");\nnotImplemented(\"fs.closeSync\");\nnotImplemented(\"fs.copyFileSync\");\nnotImplemented(\"fs.cpSync\");\nnotImplemented(\"fs.fchownSync\");\nnotImplemented(\"fs.fchmodSync\");\nnotImplemented(\"fs.fdatasyncSync\");\nnotImplemented(\"fs.fstatSync\");\nnotImplemented(\"fs.fsyncSync\");\nnotImplemented(\"fs.ftruncateSync\");\nnotImplemented(\"fs.futimesSync\");\nnotImplemented(\"fs.lchownSync\");\nnotImplemented(\"fs.lchmodSync\");\nnotImplemented(\"fs.linkSync\");\nnotImplemented(\"fs.lutimesSync\");\nnotImplemented(\"fs.mkdirSync\");\nnotImplemented(\"fs.mkdtempSync\");\nnotImplemented(\"fs.openSync\");\nnotImplemented(\"fs.opendirSync\");\nnotImplemented(\"fs.readdirSync\");\nnotImplemented(\"fs.readSync\");\nnotImplemented(\"fs.readvSync\");\nnotImplemented(\"fs.readFileSync\");\nnotImplemented(\"fs.readlinkSync\");\nnotImplemented(\"fs.renameSync\");\nnotImplemented(\"fs.rmSync\");\nnotImplemented(\"fs.rmdirSync\");\nnotImplemented(\"fs.symlinkSync\");\nnotImplemented(\"fs.truncateSync\");\nnotImplemented(\"fs.unlinkSync\");\nnotImplemented(\"fs.utimesSync\");\nnotImplemented(\"fs.writeFileSync\");\nnotImplemented(\"fs.writeSync\");\nnotImplemented(\"fs.writevSync\");\nnotImplemented(\"fs.statfsSync\");\n\nconst _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());\n}\n\nconst _UNC_REGEX = /^[/\\\\]{2}/;\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nconst _DRIVE_LETTER_RE = /^[A-Za-z]:$/;\nconst _ROOT_FOLDER_RE = /^\\/([A-Za-z]:)?$/;\nconst sep = \"/\";\nconst delimiter = \":\";\nconst normalize = function(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  path = normalizeWindowsPath(path);\n  const isUNCPath = path.match(_UNC_REGEX);\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSeparator = path[path.length - 1] === \"/\";\n  path = normalizeString(path, !isPathAbsolute);\n  if (path.length === 0) {\n    if (isPathAbsolute) {\n      return \"/\";\n    }\n    return trailingSeparator ? \"./\" : \".\";\n  }\n  if (trailingSeparator) {\n    path += \"/\";\n  }\n  if (_DRIVE_LETTER_RE.test(path)) {\n    path += \"/\";\n  }\n  if (isUNCPath) {\n    if (!isPathAbsolute) {\n      return `//./${path}`;\n    }\n    return `//${path}`;\n  }\n  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;\n};\nconst join = function(...arguments_) {\n  if (arguments_.length === 0) {\n    return \".\";\n  }\n  let joined;\n  for (const argument of arguments_) {\n    if (argument && argument.length > 0) {\n      if (joined === void 0) {\n        joined = argument;\n      } else {\n        joined += `/${argument}`;\n      }\n    }\n  }\n  if (joined === void 0) {\n    return \".\";\n  }\n  return normalize(joined.replace(/\\/\\/+/g, \"/\"));\n};\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve = function(...arguments_) {\n  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function(p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\nconst toNamespacedPath = function(p) {\n  return normalizeWindowsPath(p);\n};\nconst _EXTNAME_RE = /.(\\.[^./]+)$/;\nconst extname = function(p) {\n  const match = _EXTNAME_RE.exec(normalizeWindowsPath(p));\n  return match && match[1] || \"\";\n};\nconst relative = function(from, to) {\n  const _from = resolve(from).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  const _to = resolve(to).replace(_ROOT_FOLDER_RE, \"$1\").split(\"/\");\n  if (_to[0][1] === \":\" && _from[0][1] === \":\" && _from[0] !== _to[0]) {\n    return _to.join(\"/\");\n  }\n  const _fromCopy = [..._from];\n  for (const segment of _fromCopy) {\n    if (_to[0] !== segment) {\n      break;\n    }\n    _from.shift();\n    _to.shift();\n  }\n  return [..._from.map(() => \"..\"), ..._to].join(\"/\");\n};\nconst dirname = function(p) {\n  const segments = normalizeWindowsPath(p).replace(/\\/$/, \"\").split(\"/\").slice(0, -1);\n  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {\n    segments[0] += \"/\";\n  }\n  return segments.join(\"/\") || (isAbsolute(p) ? \"/\" : \".\");\n};\nconst format = function(p) {\n  const segments = [p.root, p.dir, p.base ?? p.name + p.ext].filter(Boolean);\n  return normalizeWindowsPath(\n    p.root ? resolve(...segments) : segments.join(\"/\")\n  );\n};\nconst basename = function(p, extension) {\n  const lastSegment = normalizeWindowsPath(p).split(\"/\").pop();\n  return extension && lastSegment.endsWith(extension) ? lastSegment.slice(0, -extension.length) : lastSegment;\n};\nconst parse$3 = function(p) {\n  const root = normalizeWindowsPath(p).split(\"/\").shift() || \"/\";\n  const base = basename(p);\n  const extension = extname(base);\n  return {\n    root,\n    dir: dirname(p),\n    base,\n    ext: extension,\n    name: base.slice(0, base.length - extension.length)\n  };\n};\n\nconst path = {\n  __proto__: null,\n  basename: basename,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n};\n\nvar _path = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  basename: basename,\n  default: path,\n  delimiter: delimiter,\n  dirname: dirname,\n  extname: extname,\n  format: format,\n  isAbsolute: isAbsolute,\n  join: join,\n  normalize: normalize,\n  normalizeString: normalizeString,\n  parse: parse$3,\n  relative: relative,\n  resolve: resolve,\n  sep: sep,\n  toNamespacedPath: toNamespacedPath\n});\n\nconst _pathModule = {\n  ..._path,\n  platform: \"posix\",\n  posix: void 0,\n  win32: void 0\n};\n_pathModule.posix = _pathModule;\n_pathModule.win32 = _pathModule;\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (Object.prototype.hasOwnProperty.call(n, '__esModule')) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tvar isInstance = false;\n      try {\n        isInstance = this instanceof a;\n      } catch {}\n\t\t\tif (isInstance) {\n        return Reflect.construct(f, arguments, this.constructor);\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar picocolors_browser = {exports: {}};\n\nvar hasRequiredPicocolors_browser;\n\nfunction requirePicocolors_browser () {\n\tif (hasRequiredPicocolors_browser) return picocolors_browser.exports;\n\thasRequiredPicocolors_browser = 1;\n\tvar x=String;\n\tvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\n\tpicocolors_browser.exports=create();\n\tpicocolors_browser.exports.createColors = create;\n\treturn picocolors_browser.exports;\n}\n\nvar _nodeResolve_empty = {};\n\nvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  default: _nodeResolve_empty\n});\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);\n\nvar cssSyntaxError;\nvar hasRequiredCssSyntaxError;\n\nfunction requireCssSyntaxError () {\n\tif (hasRequiredCssSyntaxError) return cssSyntaxError;\n\thasRequiredCssSyntaxError = 1;\n\n\tlet pico = /*@__PURE__*/ requirePicocolors_browser();\n\n\tlet terminalHighlight = require$$2;\n\n\tclass CssSyntaxError extends Error {\n\t  constructor(message, line, column, source, file, plugin) {\n\t    super(message);\n\t    this.name = 'CssSyntaxError';\n\t    this.reason = message;\n\n\t    if (file) {\n\t      this.file = file;\n\t    }\n\t    if (source) {\n\t      this.source = source;\n\t    }\n\t    if (plugin) {\n\t      this.plugin = plugin;\n\t    }\n\t    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n\t      if (typeof line === 'number') {\n\t        this.line = line;\n\t        this.column = column;\n\t      } else {\n\t        this.line = line.line;\n\t        this.column = line.column;\n\t        this.endLine = column.line;\n\t        this.endColumn = column.column;\n\t      }\n\t    }\n\n\t    this.setMessage();\n\n\t    if (Error.captureStackTrace) {\n\t      Error.captureStackTrace(this, CssSyntaxError);\n\t    }\n\t  }\n\n\t  setMessage() {\n\t    this.message = this.plugin ? this.plugin + ': ' : '';\n\t    this.message += this.file ? this.file : '<css input>';\n\t    if (typeof this.line !== 'undefined') {\n\t      this.message += ':' + this.line + ':' + this.column;\n\t    }\n\t    this.message += ': ' + this.reason;\n\t  }\n\n\t  showSourceCode(color) {\n\t    if (!this.source) return ''\n\n\t    let css = this.source;\n\t    if (color == null) color = pico.isColorSupported;\n\n\t    let aside = text => text;\n\t    let mark = text => text;\n\t    let highlight = text => text;\n\t    if (color) {\n\t      let { bold, gray, red } = pico.createColors(true);\n\t      mark = text => bold(red(text));\n\t      aside = text => gray(text);\n\t      if (terminalHighlight) {\n\t        highlight = text => terminalHighlight(text);\n\t      }\n\t    }\n\n\t    let lines = css.split(/\\r?\\n/);\n\t    let start = Math.max(this.line - 3, 0);\n\t    let end = Math.min(this.line + 2, lines.length);\n\t    let maxWidth = String(end).length;\n\n\t    return lines\n\t      .slice(start, end)\n\t      .map((line, index) => {\n\t        let number = start + 1 + index;\n\t        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n\t        if (number === this.line) {\n\t          if (line.length > 160) {\n\t            let padding = 20;\n\t            let subLineStart = Math.max(0, this.column - padding);\n\t            let subLineEnd = Math.max(\n\t              this.column + padding,\n\t              this.endColumn + padding\n\t            );\n\t            let subLine = line.slice(subLineStart, subLineEnd);\n\n\t            let spacing =\n\t              aside(gutter.replace(/\\d/g, ' ')) +\n\t              line\n\t                .slice(0, Math.min(this.column - 1, padding - 1))\n\t                .replace(/[^\\t]/g, ' ');\n\n\t            return (\n\t              mark('>') +\n\t              aside(gutter) +\n\t              highlight(subLine) +\n\t              '\\n ' +\n\t              spacing +\n\t              mark('^')\n\t            )\n\t          }\n\n\t          let spacing =\n\t            aside(gutter.replace(/\\d/g, ' ')) +\n\t            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\n\n\t          return (\n\t            mark('>') +\n\t            aside(gutter) +\n\t            highlight(line) +\n\t            '\\n ' +\n\t            spacing +\n\t            mark('^')\n\t          )\n\t        }\n\n\t        return ' ' + aside(gutter) + highlight(line)\n\t      })\n\t      .join('\\n')\n\t  }\n\n\t  toString() {\n\t    let code = this.showSourceCode();\n\t    if (code) {\n\t      code = '\\n\\n' + code + '\\n';\n\t    }\n\t    return this.name + ': ' + this.message + code\n\t  }\n\t}\n\n\tcssSyntaxError = CssSyntaxError;\n\tCssSyntaxError.default = CssSyntaxError;\n\treturn cssSyntaxError;\n}\n\nvar stringifier;\nvar hasRequiredStringifier;\n\nfunction requireStringifier () {\n\tif (hasRequiredStringifier) return stringifier;\n\thasRequiredStringifier = 1;\n\n\tconst DEFAULT_RAW = {\n\t  after: '\\n',\n\t  beforeClose: '\\n',\n\t  beforeComment: '\\n',\n\t  beforeDecl: '\\n',\n\t  beforeOpen: ' ',\n\t  beforeRule: '\\n',\n\t  colon: ': ',\n\t  commentLeft: ' ',\n\t  commentRight: ' ',\n\t  emptyBody: '',\n\t  indent: '    ',\n\t  semicolon: false\n\t};\n\n\tfunction capitalize(str) {\n\t  return str[0].toUpperCase() + str.slice(1)\n\t}\n\n\tclass Stringifier {\n\t  constructor(builder) {\n\t    this.builder = builder;\n\t  }\n\n\t  atrule(node, semicolon) {\n\t    let name = '@' + node.name;\n\t    let params = node.params ? this.rawValue(node, 'params') : '';\n\n\t    if (typeof node.raws.afterName !== 'undefined') {\n\t      name += node.raws.afterName;\n\t    } else if (params) {\n\t      name += ' ';\n\t    }\n\n\t    if (node.nodes) {\n\t      this.block(node, name + params);\n\t    } else {\n\t      let end = (node.raws.between || '') + (semicolon ? ';' : '');\n\t      this.builder(name + params + end, node);\n\t    }\n\t  }\n\n\t  beforeAfter(node, detect) {\n\t    let value;\n\t    if (node.type === 'decl') {\n\t      value = this.raw(node, null, 'beforeDecl');\n\t    } else if (node.type === 'comment') {\n\t      value = this.raw(node, null, 'beforeComment');\n\t    } else if (detect === 'before') {\n\t      value = this.raw(node, null, 'beforeRule');\n\t    } else {\n\t      value = this.raw(node, null, 'beforeClose');\n\t    }\n\n\t    let buf = node.parent;\n\t    let depth = 0;\n\t    while (buf && buf.type !== 'root') {\n\t      depth += 1;\n\t      buf = buf.parent;\n\t    }\n\n\t    if (value.includes('\\n')) {\n\t      let indent = this.raw(node, null, 'indent');\n\t      if (indent.length) {\n\t        for (let step = 0; step < depth; step++) value += indent;\n\t      }\n\t    }\n\n\t    return value\n\t  }\n\n\t  block(node, start) {\n\t    let between = this.raw(node, 'between', 'beforeOpen');\n\t    this.builder(start + between + '{', node, 'start');\n\n\t    let after;\n\t    if (node.nodes && node.nodes.length) {\n\t      this.body(node);\n\t      after = this.raw(node, 'after');\n\t    } else {\n\t      after = this.raw(node, 'after', 'emptyBody');\n\t    }\n\n\t    if (after) this.builder(after);\n\t    this.builder('}', node, 'end');\n\t  }\n\n\t  body(node) {\n\t    let last = node.nodes.length - 1;\n\t    while (last > 0) {\n\t      if (node.nodes[last].type !== 'comment') break\n\t      last -= 1;\n\t    }\n\n\t    let semicolon = this.raw(node, 'semicolon');\n\t    for (let i = 0; i < node.nodes.length; i++) {\n\t      let child = node.nodes[i];\n\t      let before = this.raw(child, 'before');\n\t      if (before) this.builder(before);\n\t      this.stringify(child, last !== i || semicolon);\n\t    }\n\t  }\n\n\t  comment(node) {\n\t    let left = this.raw(node, 'left', 'commentLeft');\n\t    let right = this.raw(node, 'right', 'commentRight');\n\t    this.builder('/*' + left + node.text + right + '*/', node);\n\t  }\n\n\t  decl(node, semicolon) {\n\t    let between = this.raw(node, 'between', 'colon');\n\t    let string = node.prop + between + this.rawValue(node, 'value');\n\n\t    if (node.important) {\n\t      string += node.raws.important || ' !important';\n\t    }\n\n\t    if (semicolon) string += ';';\n\t    this.builder(string, node);\n\t  }\n\n\t  document(node) {\n\t    this.body(node);\n\t  }\n\n\t  raw(node, own, detect) {\n\t    let value;\n\t    if (!detect) detect = own;\n\n\t    // Already had\n\t    if (own) {\n\t      value = node.raws[own];\n\t      if (typeof value !== 'undefined') return value\n\t    }\n\n\t    let parent = node.parent;\n\n\t    if (detect === 'before') {\n\t      // Hack for first rule in CSS\n\t      if (!parent || (parent.type === 'root' && parent.first === node)) {\n\t        return ''\n\t      }\n\n\t      // `root` nodes in `document` should use only their own raws\n\t      if (parent && parent.type === 'document') {\n\t        return ''\n\t      }\n\t    }\n\n\t    // Floating child without parent\n\t    if (!parent) return DEFAULT_RAW[detect]\n\n\t    // Detect style by other nodes\n\t    let root = node.root();\n\t    if (!root.rawCache) root.rawCache = {};\n\t    if (typeof root.rawCache[detect] !== 'undefined') {\n\t      return root.rawCache[detect]\n\t    }\n\n\t    if (detect === 'before' || detect === 'after') {\n\t      return this.beforeAfter(node, detect)\n\t    } else {\n\t      let method = 'raw' + capitalize(detect);\n\t      if (this[method]) {\n\t        value = this[method](root, node);\n\t      } else {\n\t        root.walk(i => {\n\t          value = i.raws[own];\n\t          if (typeof value !== 'undefined') return false\n\t        });\n\t      }\n\t    }\n\n\t    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n\n\t    root.rawCache[detect] = value;\n\t    return value\n\t  }\n\n\t  rawBeforeClose(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length > 0) {\n\t        if (typeof i.raws.after !== 'undefined') {\n\t          value = i.raws.after;\n\t          if (value.includes('\\n')) {\n\t            value = value.replace(/[^\\n]+$/, '');\n\t          }\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    if (value) value = value.replace(/\\S/g, '');\n\t    return value\n\t  }\n\n\t  rawBeforeComment(root, node) {\n\t    let value;\n\t    root.walkComments(i => {\n\t      if (typeof i.raws.before !== 'undefined') {\n\t        value = i.raws.before;\n\t        if (value.includes('\\n')) {\n\t          value = value.replace(/[^\\n]+$/, '');\n\t        }\n\t        return false\n\t      }\n\t    });\n\t    if (typeof value === 'undefined') {\n\t      value = this.raw(node, null, 'beforeDecl');\n\t    } else if (value) {\n\t      value = value.replace(/\\S/g, '');\n\t    }\n\t    return value\n\t  }\n\n\t  rawBeforeDecl(root, node) {\n\t    let value;\n\t    root.walkDecls(i => {\n\t      if (typeof i.raws.before !== 'undefined') {\n\t        value = i.raws.before;\n\t        if (value.includes('\\n')) {\n\t          value = value.replace(/[^\\n]+$/, '');\n\t        }\n\t        return false\n\t      }\n\t    });\n\t    if (typeof value === 'undefined') {\n\t      value = this.raw(node, null, 'beforeRule');\n\t    } else if (value) {\n\t      value = value.replace(/\\S/g, '');\n\t    }\n\t    return value\n\t  }\n\n\t  rawBeforeOpen(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.type !== 'decl') {\n\t        value = i.raws.between;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawBeforeRule(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && (i.parent !== root || root.first !== i)) {\n\t        if (typeof i.raws.before !== 'undefined') {\n\t          value = i.raws.before;\n\t          if (value.includes('\\n')) {\n\t            value = value.replace(/[^\\n]+$/, '');\n\t          }\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    if (value) value = value.replace(/\\S/g, '');\n\t    return value\n\t  }\n\n\t  rawColon(root) {\n\t    let value;\n\t    root.walkDecls(i => {\n\t      if (typeof i.raws.between !== 'undefined') {\n\t        value = i.raws.between.replace(/[^\\s:]/g, '');\n\t        return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawEmptyBody(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length === 0) {\n\t        value = i.raws.after;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawIndent(root) {\n\t    if (root.raws.indent) return root.raws.indent\n\t    let value;\n\t    root.walk(i => {\n\t      let p = i.parent;\n\t      if (p && p !== root && p.parent && p.parent === root) {\n\t        if (typeof i.raws.before !== 'undefined') {\n\t          let parts = i.raws.before.split('\\n');\n\t          value = parts[parts.length - 1];\n\t          value = value.replace(/\\S/g, '');\n\t          return false\n\t        }\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawSemicolon(root) {\n\t    let value;\n\t    root.walk(i => {\n\t      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n\t        value = i.raws.semicolon;\n\t        if (typeof value !== 'undefined') return false\n\t      }\n\t    });\n\t    return value\n\t  }\n\n\t  rawValue(node, prop) {\n\t    let value = node[prop];\n\t    let raw = node.raws[prop];\n\t    if (raw && raw.value === value) {\n\t      return raw.raw\n\t    }\n\n\t    return value\n\t  }\n\n\t  root(node) {\n\t    this.body(node);\n\t    if (node.raws.after) this.builder(node.raws.after);\n\t  }\n\n\t  rule(node) {\n\t    this.block(node, this.rawValue(node, 'selector'));\n\t    if (node.raws.ownSemicolon) {\n\t      this.builder(node.raws.ownSemicolon, node, 'end');\n\t    }\n\t  }\n\n\t  stringify(node, semicolon) {\n\t    /* c8 ignore start */\n\t    if (!this[node.type]) {\n\t      throw new Error(\n\t        'Unknown AST node type ' +\n\t          node.type +\n\t          '. ' +\n\t          'Maybe you need to change PostCSS stringifier.'\n\t      )\n\t    }\n\t    /* c8 ignore stop */\n\t    this[node.type](node, semicolon);\n\t  }\n\t}\n\n\tstringifier = Stringifier;\n\tStringifier.default = Stringifier;\n\treturn stringifier;\n}\n\nvar stringify_1;\nvar hasRequiredStringify;\n\nfunction requireStringify () {\n\tif (hasRequiredStringify) return stringify_1;\n\thasRequiredStringify = 1;\n\n\tlet Stringifier = requireStringifier();\n\n\tfunction stringify(node, builder) {\n\t  let str = new Stringifier(builder);\n\t  str.stringify(node);\n\t}\n\n\tstringify_1 = stringify;\n\tstringify.default = stringify;\n\treturn stringify_1;\n}\n\nvar symbols = {};\n\nvar hasRequiredSymbols;\n\nfunction requireSymbols () {\n\tif (hasRequiredSymbols) return symbols;\n\thasRequiredSymbols = 1;\n\n\tsymbols.isClean = Symbol('isClean');\n\n\tsymbols.my = Symbol('my');\n\treturn symbols;\n}\n\nvar node;\nvar hasRequiredNode$1;\n\nfunction requireNode$1 () {\n\tif (hasRequiredNode$1) return node;\n\thasRequiredNode$1 = 1;\n\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet Stringifier = requireStringifier();\n\tlet stringify = requireStringify();\n\tlet { isClean, my } = requireSymbols();\n\n\tfunction cloneNode(obj, parent) {\n\t  let cloned = new obj.constructor();\n\n\t  for (let i in obj) {\n\t    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n\t      /* c8 ignore next 2 */\n\t      continue\n\t    }\n\t    if (i === 'proxyCache') continue\n\t    let value = obj[i];\n\t    let type = typeof value;\n\n\t    if (i === 'parent' && type === 'object') {\n\t      if (parent) cloned[i] = parent;\n\t    } else if (i === 'source') {\n\t      cloned[i] = value;\n\t    } else if (Array.isArray(value)) {\n\t      cloned[i] = value.map(j => cloneNode(j, cloned));\n\t    } else {\n\t      if (type === 'object' && value !== null) value = cloneNode(value);\n\t      cloned[i] = value;\n\t    }\n\t  }\n\n\t  return cloned\n\t}\n\n\tfunction sourceOffset(inputCSS, position) {\n\t  // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n\t  if (position && typeof position.offset !== 'undefined') {\n\t    return position.offset\n\t  }\n\n\t  let column = 1;\n\t  let line = 1;\n\t  let offset = 0;\n\n\t  for (let i = 0; i < inputCSS.length; i++) {\n\t    if (line === position.line && column === position.column) {\n\t      offset = i;\n\t      break\n\t    }\n\n\t    if (inputCSS[i] === '\\n') {\n\t      column = 1;\n\t      line += 1;\n\t    } else {\n\t      column += 1;\n\t    }\n\t  }\n\n\t  return offset\n\t}\n\n\tclass Node {\n\t  get proxyOf() {\n\t    return this\n\t  }\n\n\t  constructor(defaults = {}) {\n\t    this.raws = {};\n\t    this[isClean] = false;\n\t    this[my] = true;\n\n\t    for (let name in defaults) {\n\t      if (name === 'nodes') {\n\t        this.nodes = [];\n\t        for (let node of defaults[name]) {\n\t          if (typeof node.clone === 'function') {\n\t            this.append(node.clone());\n\t          } else {\n\t            this.append(node);\n\t          }\n\t        }\n\t      } else {\n\t        this[name] = defaults[name];\n\t      }\n\t    }\n\t  }\n\n\t  addToError(error) {\n\t    error.postcssNode = this;\n\t    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n\t      let s = this.source;\n\t      error.stack = error.stack.replace(\n\t        /\\n\\s{4}at /,\n\t        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n\t      );\n\t    }\n\t    return error\n\t  }\n\n\t  after(add) {\n\t    this.parent.insertAfter(this, add);\n\t    return this\n\t  }\n\n\t  assign(overrides = {}) {\n\t    for (let name in overrides) {\n\t      this[name] = overrides[name];\n\t    }\n\t    return this\n\t  }\n\n\t  before(add) {\n\t    this.parent.insertBefore(this, add);\n\t    return this\n\t  }\n\n\t  cleanRaws(keepBetween) {\n\t    delete this.raws.before;\n\t    delete this.raws.after;\n\t    if (!keepBetween) delete this.raws.between;\n\t  }\n\n\t  clone(overrides = {}) {\n\t    let cloned = cloneNode(this);\n\t    for (let name in overrides) {\n\t      cloned[name] = overrides[name];\n\t    }\n\t    return cloned\n\t  }\n\n\t  cloneAfter(overrides = {}) {\n\t    let cloned = this.clone(overrides);\n\t    this.parent.insertAfter(this, cloned);\n\t    return cloned\n\t  }\n\n\t  cloneBefore(overrides = {}) {\n\t    let cloned = this.clone(overrides);\n\t    this.parent.insertBefore(this, cloned);\n\t    return cloned\n\t  }\n\n\t  error(message, opts = {}) {\n\t    if (this.source) {\n\t      let { end, start } = this.rangeBy(opts);\n\t      return this.source.input.error(\n\t        message,\n\t        { column: start.column, line: start.line },\n\t        { column: end.column, line: end.line },\n\t        opts\n\t      )\n\t    }\n\t    return new CssSyntaxError(message)\n\t  }\n\n\t  getProxyProcessor() {\n\t    return {\n\t      get(node, prop) {\n\t        if (prop === 'proxyOf') {\n\t          return node\n\t        } else if (prop === 'root') {\n\t          return () => node.root().toProxy()\n\t        } else {\n\t          return node[prop]\n\t        }\n\t      },\n\n\t      set(node, prop, value) {\n\t        if (node[prop] === value) return true\n\t        node[prop] = value;\n\t        if (\n\t          prop === 'prop' ||\n\t          prop === 'value' ||\n\t          prop === 'name' ||\n\t          prop === 'params' ||\n\t          prop === 'important' ||\n\t          /* c8 ignore next */\n\t          prop === 'text'\n\t        ) {\n\t          node.markDirty();\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\n\t  /* c8 ignore next 3 */\n\t  markClean() {\n\t    this[isClean] = true;\n\t  }\n\n\t  markDirty() {\n\t    if (this[isClean]) {\n\t      this[isClean] = false;\n\t      let next = this;\n\t      while ((next = next.parent)) {\n\t        next[isClean] = false;\n\t      }\n\t    }\n\t  }\n\n\t  next() {\n\t    if (!this.parent) return undefined\n\t    let index = this.parent.index(this);\n\t    return this.parent.nodes[index + 1]\n\t  }\n\n\t  positionBy(opts = {}) {\n\t    let pos = this.source.start;\n\t    if (opts.index) {\n\t      pos = this.positionInside(opts.index);\n\t    } else if (opts.word) {\n\t      let inputString =\n\t        'document' in this.source.input\n\t          ? this.source.input.document\n\t          : this.source.input.css;\n\t      let stringRepresentation = inputString.slice(\n\t        sourceOffset(inputString, this.source.start),\n\t        sourceOffset(inputString, this.source.end)\n\t      );\n\t      let index = stringRepresentation.indexOf(opts.word);\n\t      if (index !== -1) pos = this.positionInside(index);\n\t    }\n\t    return pos\n\t  }\n\n\t  positionInside(index) {\n\t    let column = this.source.start.column;\n\t    let line = this.source.start.line;\n\t    let inputString =\n\t      'document' in this.source.input\n\t        ? this.source.input.document\n\t        : this.source.input.css;\n\t    let offset = sourceOffset(inputString, this.source.start);\n\t    let end = offset + index;\n\n\t    for (let i = offset; i < end; i++) {\n\t      if (inputString[i] === '\\n') {\n\t        column = 1;\n\t        line += 1;\n\t      } else {\n\t        column += 1;\n\t      }\n\t    }\n\n\t    return { column, line, offset: end }\n\t  }\n\n\t  prev() {\n\t    if (!this.parent) return undefined\n\t    let index = this.parent.index(this);\n\t    return this.parent.nodes[index - 1]\n\t  }\n\n\t  rangeBy(opts = {}) {\n\t    let inputString =\n\t      'document' in this.source.input\n\t        ? this.source.input.document\n\t        : this.source.input.css;\n\t    let start = {\n\t      column: this.source.start.column,\n\t      line: this.source.start.line,\n\t      offset: sourceOffset(inputString, this.source.start)\n\t    };\n\t    let end = this.source.end\n\t      ? {\n\t          column: this.source.end.column + 1,\n\t          line: this.source.end.line,\n\t          offset:\n\t            typeof this.source.end.offset === 'number'\n\t              ? // `source.end.offset` is exclusive, so we don't need to add 1\n\t                this.source.end.offset\n\t              : // Since line/column in this.source.end is inclusive,\n\t                // the `sourceOffset(... , this.source.end)` returns an inclusive offset.\n\t                // So, we add 1 to convert it to exclusive.\n\t                sourceOffset(inputString, this.source.end) + 1\n\t        }\n\t      : {\n\t          column: start.column + 1,\n\t          line: start.line,\n\t          offset: start.offset + 1\n\t        };\n\n\t    if (opts.word) {\n\t      let stringRepresentation = inputString.slice(\n\t        sourceOffset(inputString, this.source.start),\n\t        sourceOffset(inputString, this.source.end)\n\t      );\n\t      let index = stringRepresentation.indexOf(opts.word);\n\t      if (index !== -1) {\n\t        start = this.positionInside(index);\n\t        end = this.positionInside(index + opts.word.length);\n\t      }\n\t    } else {\n\t      if (opts.start) {\n\t        start = {\n\t          column: opts.start.column,\n\t          line: opts.start.line,\n\t          offset: sourceOffset(inputString, opts.start)\n\t        };\n\t      } else if (opts.index) {\n\t        start = this.positionInside(opts.index);\n\t      }\n\n\t      if (opts.end) {\n\t        end = {\n\t          column: opts.end.column,\n\t          line: opts.end.line,\n\t          offset: sourceOffset(inputString, opts.end)\n\t        };\n\t      } else if (typeof opts.endIndex === 'number') {\n\t        end = this.positionInside(opts.endIndex);\n\t      } else if (opts.index) {\n\t        end = this.positionInside(opts.index + 1);\n\t      }\n\t    }\n\n\t    if (\n\t      end.line < start.line ||\n\t      (end.line === start.line && end.column <= start.column)\n\t    ) {\n\t      end = {\n\t        column: start.column + 1,\n\t        line: start.line,\n\t        offset: start.offset + 1\n\t      };\n\t    }\n\n\t    return { end, start }\n\t  }\n\n\t  raw(prop, defaultType) {\n\t    let str = new Stringifier();\n\t    return str.raw(this, prop, defaultType)\n\t  }\n\n\t  remove() {\n\t    if (this.parent) {\n\t      this.parent.removeChild(this);\n\t    }\n\t    this.parent = undefined;\n\t    return this\n\t  }\n\n\t  replaceWith(...nodes) {\n\t    if (this.parent) {\n\t      let bookmark = this;\n\t      let foundSelf = false;\n\t      for (let node of nodes) {\n\t        if (node === this) {\n\t          foundSelf = true;\n\t        } else if (foundSelf) {\n\t          this.parent.insertAfter(bookmark, node);\n\t          bookmark = node;\n\t        } else {\n\t          this.parent.insertBefore(bookmark, node);\n\t        }\n\t      }\n\n\t      if (!foundSelf) {\n\t        this.remove();\n\t      }\n\t    }\n\n\t    return this\n\t  }\n\n\t  root() {\n\t    let result = this;\n\t    while (result.parent && result.parent.type !== 'document') {\n\t      result = result.parent;\n\t    }\n\t    return result\n\t  }\n\n\t  toJSON(_, inputs) {\n\t    let fixed = {};\n\t    let emitInputs = inputs == null;\n\t    inputs = inputs || new Map();\n\t    let inputsNextIndex = 0;\n\n\t    for (let name in this) {\n\t      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n\t        /* c8 ignore next 2 */\n\t        continue\n\t      }\n\t      if (name === 'parent' || name === 'proxyCache') continue\n\t      let value = this[name];\n\n\t      if (Array.isArray(value)) {\n\t        fixed[name] = value.map(i => {\n\t          if (typeof i === 'object' && i.toJSON) {\n\t            return i.toJSON(null, inputs)\n\t          } else {\n\t            return i\n\t          }\n\t        });\n\t      } else if (typeof value === 'object' && value.toJSON) {\n\t        fixed[name] = value.toJSON(null, inputs);\n\t      } else if (name === 'source') {\n\t        if (value == null) continue\n\t        let inputId = inputs.get(value.input);\n\t        if (inputId == null) {\n\t          inputId = inputsNextIndex;\n\t          inputs.set(value.input, inputsNextIndex);\n\t          inputsNextIndex++;\n\t        }\n\t        fixed[name] = {\n\t          end: value.end,\n\t          inputId,\n\t          start: value.start\n\t        };\n\t      } else {\n\t        fixed[name] = value;\n\t      }\n\t    }\n\n\t    if (emitInputs) {\n\t      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n\t    }\n\n\t    return fixed\n\t  }\n\n\t  toProxy() {\n\t    if (!this.proxyCache) {\n\t      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n\t    }\n\t    return this.proxyCache\n\t  }\n\n\t  toString(stringifier = stringify) {\n\t    if (stringifier.stringify) stringifier = stringifier.stringify;\n\t    let result = '';\n\t    stringifier(this, i => {\n\t      result += i;\n\t    });\n\t    return result\n\t  }\n\n\t  warn(result, text, opts = {}) {\n\t    let data = { node: this };\n\t    for (let i in opts) data[i] = opts[i];\n\t    return result.warn(text, data)\n\t  }\n\t}\n\n\tnode = Node;\n\tNode.default = Node;\n\treturn node;\n}\n\nvar comment;\nvar hasRequiredComment;\n\nfunction requireComment () {\n\tif (hasRequiredComment) return comment;\n\thasRequiredComment = 1;\n\n\tlet Node = requireNode$1();\n\n\tclass Comment extends Node {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'comment';\n\t  }\n\t}\n\n\tcomment = Comment;\n\tComment.default = Comment;\n\treturn comment;\n}\n\nvar declaration;\nvar hasRequiredDeclaration;\n\nfunction requireDeclaration () {\n\tif (hasRequiredDeclaration) return declaration;\n\thasRequiredDeclaration = 1;\n\n\tlet Node = requireNode$1();\n\n\tclass Declaration extends Node {\n\t  get variable() {\n\t    return this.prop.startsWith('--') || this.prop[0] === '$'\n\t  }\n\n\t  constructor(defaults) {\n\t    if (\n\t      defaults &&\n\t      typeof defaults.value !== 'undefined' &&\n\t      typeof defaults.value !== 'string'\n\t    ) {\n\t      defaults = { ...defaults, value: String(defaults.value) };\n\t    }\n\t    super(defaults);\n\t    this.type = 'decl';\n\t  }\n\t}\n\n\tdeclaration = Declaration;\n\tDeclaration.default = Declaration;\n\treturn declaration;\n}\n\nvar container;\nvar hasRequiredContainer$1;\n\nfunction requireContainer$1 () {\n\tif (hasRequiredContainer$1) return container;\n\thasRequiredContainer$1 = 1;\n\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Node = requireNode$1();\n\tlet { isClean, my } = requireSymbols();\n\n\tlet AtRule, parse, Root, Rule;\n\n\tfunction cleanSource(nodes) {\n\t  return nodes.map(i => {\n\t    if (i.nodes) i.nodes = cleanSource(i.nodes);\n\t    delete i.source;\n\t    return i\n\t  })\n\t}\n\n\tfunction markTreeDirty(node) {\n\t  node[isClean] = false;\n\t  if (node.proxyOf.nodes) {\n\t    for (let i of node.proxyOf.nodes) {\n\t      markTreeDirty(i);\n\t    }\n\t  }\n\t}\n\n\tclass Container extends Node {\n\t  get first() {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    return this.proxyOf.nodes[0]\n\t  }\n\n\t  get last() {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n\t  }\n\n\t  append(...children) {\n\t    for (let child of children) {\n\t      let nodes = this.normalize(child, this.last);\n\t      for (let node of nodes) this.proxyOf.nodes.push(node);\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  cleanRaws(keepBetween) {\n\t    super.cleanRaws(keepBetween);\n\t    if (this.nodes) {\n\t      for (let node of this.nodes) node.cleanRaws(keepBetween);\n\t    }\n\t  }\n\n\t  each(callback) {\n\t    if (!this.proxyOf.nodes) return undefined\n\t    let iterator = this.getIterator();\n\n\t    let index, result;\n\t    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n\t      index = this.indexes[iterator];\n\t      result = callback(this.proxyOf.nodes[index], index);\n\t      if (result === false) break\n\n\t      this.indexes[iterator] += 1;\n\t    }\n\n\t    delete this.indexes[iterator];\n\t    return result\n\t  }\n\n\t  every(condition) {\n\t    return this.nodes.every(condition)\n\t  }\n\n\t  getIterator() {\n\t    if (!this.lastEach) this.lastEach = 0;\n\t    if (!this.indexes) this.indexes = {};\n\n\t    this.lastEach += 1;\n\t    let iterator = this.lastEach;\n\t    this.indexes[iterator] = 0;\n\n\t    return iterator\n\t  }\n\n\t  getProxyProcessor() {\n\t    return {\n\t      get(node, prop) {\n\t        if (prop === 'proxyOf') {\n\t          return node\n\t        } else if (!node[prop]) {\n\t          return node[prop]\n\t        } else if (\n\t          prop === 'each' ||\n\t          (typeof prop === 'string' && prop.startsWith('walk'))\n\t        ) {\n\t          return (...args) => {\n\t            return node[prop](\n\t              ...args.map(i => {\n\t                if (typeof i === 'function') {\n\t                  return (child, index) => i(child.toProxy(), index)\n\t                } else {\n\t                  return i\n\t                }\n\t              })\n\t            )\n\t          }\n\t        } else if (prop === 'every' || prop === 'some') {\n\t          return cb => {\n\t            return node[prop]((child, ...other) =>\n\t              cb(child.toProxy(), ...other)\n\t            )\n\t          }\n\t        } else if (prop === 'root') {\n\t          return () => node.root().toProxy()\n\t        } else if (prop === 'nodes') {\n\t          return node.nodes.map(i => i.toProxy())\n\t        } else if (prop === 'first' || prop === 'last') {\n\t          return node[prop].toProxy()\n\t        } else {\n\t          return node[prop]\n\t        }\n\t      },\n\n\t      set(node, prop, value) {\n\t        if (node[prop] === value) return true\n\t        node[prop] = value;\n\t        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n\t          node.markDirty();\n\t        }\n\t        return true\n\t      }\n\t    }\n\t  }\n\n\t  index(child) {\n\t    if (typeof child === 'number') return child\n\t    if (child.proxyOf) child = child.proxyOf;\n\t    return this.proxyOf.nodes.indexOf(child)\n\t  }\n\n\t  insertAfter(exist, add) {\n\t    let existIndex = this.index(exist);\n\t    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n\t    existIndex = this.index(exist);\n\t    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (existIndex < index) {\n\t        this.indexes[id] = index + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  insertBefore(exist, add) {\n\t    let existIndex = this.index(exist);\n\t    let type = existIndex === 0 ? 'prepend' : false;\n\t    let nodes = this.normalize(\n\t      add,\n\t      this.proxyOf.nodes[existIndex],\n\t      type\n\t    ).reverse();\n\t    existIndex = this.index(exist);\n\t    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (existIndex <= index) {\n\t        this.indexes[id] = index + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  normalize(nodes, sample) {\n\t    if (typeof nodes === 'string') {\n\t      nodes = cleanSource(parse(nodes).nodes);\n\t    } else if (typeof nodes === 'undefined') {\n\t      nodes = [];\n\t    } else if (Array.isArray(nodes)) {\n\t      nodes = nodes.slice(0);\n\t      for (let i of nodes) {\n\t        if (i.parent) i.parent.removeChild(i, 'ignore');\n\t      }\n\t    } else if (nodes.type === 'root' && this.type !== 'document') {\n\t      nodes = nodes.nodes.slice(0);\n\t      for (let i of nodes) {\n\t        if (i.parent) i.parent.removeChild(i, 'ignore');\n\t      }\n\t    } else if (nodes.type) {\n\t      nodes = [nodes];\n\t    } else if (nodes.prop) {\n\t      if (typeof nodes.value === 'undefined') {\n\t        throw new Error('Value field is missed in node creation')\n\t      } else if (typeof nodes.value !== 'string') {\n\t        nodes.value = String(nodes.value);\n\t      }\n\t      nodes = [new Declaration(nodes)];\n\t    } else if (nodes.selector || nodes.selectors) {\n\t      nodes = [new Rule(nodes)];\n\t    } else if (nodes.name) {\n\t      nodes = [new AtRule(nodes)];\n\t    } else if (nodes.text) {\n\t      nodes = [new Comment(nodes)];\n\t    } else {\n\t      throw new Error('Unknown node type in node creation')\n\t    }\n\n\t    let processed = nodes.map(i => {\n\t      /* c8 ignore next */\n\t      if (!i[my]) Container.rebuild(i);\n\t      i = i.proxyOf;\n\t      if (i.parent) i.parent.removeChild(i);\n\t      if (i[isClean]) markTreeDirty(i);\n\n\t      if (!i.raws) i.raws = {};\n\t      if (typeof i.raws.before === 'undefined') {\n\t        if (sample && typeof sample.raws.before !== 'undefined') {\n\t          i.raws.before = sample.raws.before.replace(/\\S/g, '');\n\t        }\n\t      }\n\t      i.parent = this.proxyOf;\n\t      return i\n\t    });\n\n\t    return processed\n\t  }\n\n\t  prepend(...children) {\n\t    children = children.reverse();\n\t    for (let child of children) {\n\t      let nodes = this.normalize(child, this.first, 'prepend').reverse();\n\t      for (let node of nodes) this.proxyOf.nodes.unshift(node);\n\t      for (let id in this.indexes) {\n\t        this.indexes[id] = this.indexes[id] + nodes.length;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  push(child) {\n\t    child.parent = this;\n\t    this.proxyOf.nodes.push(child);\n\t    return this\n\t  }\n\n\t  removeAll() {\n\t    for (let node of this.proxyOf.nodes) node.parent = undefined;\n\t    this.proxyOf.nodes = [];\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  removeChild(child) {\n\t    child = this.index(child);\n\t    this.proxyOf.nodes[child].parent = undefined;\n\t    this.proxyOf.nodes.splice(child, 1);\n\n\t    let index;\n\t    for (let id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (index >= child) {\n\t        this.indexes[id] = index - 1;\n\t      }\n\t    }\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  replaceValues(pattern, opts, callback) {\n\t    if (!callback) {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\n\t    this.walkDecls(decl => {\n\t      if (opts.props && !opts.props.includes(decl.prop)) return\n\t      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n\t      decl.value = decl.value.replace(pattern, callback);\n\t    });\n\n\t    this.markDirty();\n\n\t    return this\n\t  }\n\n\t  some(condition) {\n\t    return this.nodes.some(condition)\n\t  }\n\n\t  walk(callback) {\n\t    return this.each((child, i) => {\n\t      let result;\n\t      try {\n\t        result = callback(child, i);\n\t      } catch (e) {\n\t        throw child.addToError(e)\n\t      }\n\t      if (result !== false && child.walk) {\n\t        result = child.walk(callback);\n\t      }\n\n\t      return result\n\t    })\n\t  }\n\n\t  walkAtRules(name, callback) {\n\t    if (!callback) {\n\t      callback = name;\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'atrule') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (name instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'atrule' && name.test(child.name)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'atrule' && child.name === name) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkComments(callback) {\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'comment') {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkDecls(prop, callback) {\n\t    if (!callback) {\n\t      callback = prop;\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'decl') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (prop instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'decl' && prop.test(child.prop)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'decl' && child.prop === prop) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\n\t  walkRules(selector, callback) {\n\t    if (!callback) {\n\t      callback = selector;\n\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'rule') {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    if (selector instanceof RegExp) {\n\t      return this.walk((child, i) => {\n\t        if (child.type === 'rule' && selector.test(child.selector)) {\n\t          return callback(child, i)\n\t        }\n\t      })\n\t    }\n\t    return this.walk((child, i) => {\n\t      if (child.type === 'rule' && child.selector === selector) {\n\t        return callback(child, i)\n\t      }\n\t    })\n\t  }\n\t}\n\n\tContainer.registerParse = dependant => {\n\t  parse = dependant;\n\t};\n\n\tContainer.registerRule = dependant => {\n\t  Rule = dependant;\n\t};\n\n\tContainer.registerAtRule = dependant => {\n\t  AtRule = dependant;\n\t};\n\n\tContainer.registerRoot = dependant => {\n\t  Root = dependant;\n\t};\n\n\tcontainer = Container;\n\tContainer.default = Container;\n\n\t/* c8 ignore start */\n\tContainer.rebuild = node => {\n\t  if (node.type === 'atrule') {\n\t    Object.setPrototypeOf(node, AtRule.prototype);\n\t  } else if (node.type === 'rule') {\n\t    Object.setPrototypeOf(node, Rule.prototype);\n\t  } else if (node.type === 'decl') {\n\t    Object.setPrototypeOf(node, Declaration.prototype);\n\t  } else if (node.type === 'comment') {\n\t    Object.setPrototypeOf(node, Comment.prototype);\n\t  } else if (node.type === 'root') {\n\t    Object.setPrototypeOf(node, Root.prototype);\n\t  }\n\n\t  node[my] = true;\n\n\t  if (node.nodes) {\n\t    node.nodes.forEach(child => {\n\t      Container.rebuild(child);\n\t    });\n\t  }\n\t};\n\t/* c8 ignore stop */\n\treturn container;\n}\n\nvar atRule;\nvar hasRequiredAtRule;\n\nfunction requireAtRule () {\n\tif (hasRequiredAtRule) return atRule;\n\thasRequiredAtRule = 1;\n\n\tlet Container = requireContainer$1();\n\n\tclass AtRule extends Container {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'atrule';\n\t  }\n\n\t  append(...children) {\n\t    if (!this.proxyOf.nodes) this.nodes = [];\n\t    return super.append(...children)\n\t  }\n\n\t  prepend(...children) {\n\t    if (!this.proxyOf.nodes) this.nodes = [];\n\t    return super.prepend(...children)\n\t  }\n\t}\n\n\tatRule = AtRule;\n\tAtRule.default = AtRule;\n\n\tContainer.registerAtRule(AtRule);\n\treturn atRule;\n}\n\nvar document;\nvar hasRequiredDocument;\n\nfunction requireDocument () {\n\tif (hasRequiredDocument) return document;\n\thasRequiredDocument = 1;\n\n\tlet Container = requireContainer$1();\n\n\tlet LazyResult, Processor;\n\n\tclass Document extends Container {\n\t  constructor(defaults) {\n\t    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n\t    super({ type: 'document', ...defaults });\n\n\t    if (!this.nodes) {\n\t      this.nodes = [];\n\t    }\n\t  }\n\n\t  toResult(opts = {}) {\n\t    let lazy = new LazyResult(new Processor(), this, opts);\n\n\t    return lazy.stringify()\n\t  }\n\t}\n\n\tDocument.registerLazyResult = dependant => {\n\t  LazyResult = dependant;\n\t};\n\n\tDocument.registerProcessor = dependant => {\n\t  Processor = dependant;\n\t};\n\n\tdocument = Document;\n\tDocument.default = Document;\n\treturn document;\n}\n\nvar nonSecure;\nvar hasRequiredNonSecure;\n\nfunction requireNonSecure () {\n\tif (hasRequiredNonSecure) return nonSecure;\n\thasRequiredNonSecure = 1;\n\t// This alphabet uses `A-Za-z0-9_-` symbols.\n\t// The order of characters is optimized for better gzip and brotli compression.\n\t// References to the same file (works both for gzip and brotli):\n\t// `'use`, `andom`, and `rict'`\n\t// References to the brotli default dictionary:\n\t// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n\tlet urlAlphabet =\n\t  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n\n\tlet customAlphabet = (alphabet, defaultSize = 21) => {\n\t  return (size = defaultSize) => {\n\t    let id = '';\n\t    // A compact alternative for `for (var i = 0; i < step; i++)`.\n\t    let i = size | 0;\n\t    while (i--) {\n\t      // `| 0` is more compact and faster than `Math.floor()`.\n\t      id += alphabet[(Math.random() * alphabet.length) | 0];\n\t    }\n\t    return id\n\t  }\n\t};\n\n\tlet nanoid = (size = 21) => {\n\t  let id = '';\n\t  // A compact alternative for `for (var i = 0; i < step; i++)`.\n\t  let i = size | 0;\n\t  while (i--) {\n\t    // `| 0` is more compact and faster than `Math.floor()`.\n\t    id += urlAlphabet[(Math.random() * 64) | 0];\n\t  }\n\t  return id\n\t};\n\n\tnonSecure = { nanoid, customAlphabet };\n\treturn nonSecure;\n}\n\nvar previousMap;\nvar hasRequiredPreviousMap;\n\nfunction requirePreviousMap () {\n\tif (hasRequiredPreviousMap) return previousMap;\n\thasRequiredPreviousMap = 1;\n\n\tlet { existsSync, readFileSync } = require$$2;\n\tlet { dirname, join } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\n\tfunction fromBase64(str) {\n\t  if (Buffer) {\n\t    return Buffer.from(str, 'base64').toString()\n\t  } else {\n\t    /* c8 ignore next 2 */\n\t    return window.atob(str)\n\t  }\n\t}\n\n\tclass PreviousMap {\n\t  constructor(css, opts) {\n\t    if (opts.map === false) return\n\t    this.loadAnnotation(css);\n\t    this.inline = this.startWith(this.annotation, 'data:');\n\n\t    let prev = opts.map ? opts.map.prev : undefined;\n\t    let text = this.loadMap(opts.from, prev);\n\t    if (!this.mapFile && opts.from) {\n\t      this.mapFile = opts.from;\n\t    }\n\t    if (this.mapFile) this.root = dirname(this.mapFile);\n\t    if (text) this.text = text;\n\t  }\n\n\t  consumer() {\n\t    if (!this.consumerCache) {\n\t      this.consumerCache = new SourceMapConsumer(this.text);\n\t    }\n\t    return this.consumerCache\n\t  }\n\n\t  decodeInline(text) {\n\t    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n\t    let baseUri = /^data:application\\/json;base64,/;\n\t    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n\t    let uri = /^data:application\\/json,/;\n\n\t    let uriMatch = text.match(charsetUri) || text.match(uri);\n\t    if (uriMatch) {\n\t      return decodeURIComponent(text.substr(uriMatch[0].length))\n\t    }\n\n\t    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri);\n\t    if (baseUriMatch) {\n\t      return fromBase64(text.substr(baseUriMatch[0].length))\n\t    }\n\n\t    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n\t    throw new Error('Unsupported source map encoding ' + encoding)\n\t  }\n\n\t  getAnnotationURL(sourceMapString) {\n\t    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n\t  }\n\n\t  isMap(map) {\n\t    if (typeof map !== 'object') return false\n\t    return (\n\t      typeof map.mappings === 'string' ||\n\t      typeof map._mappings === 'string' ||\n\t      Array.isArray(map.sections)\n\t    )\n\t  }\n\n\t  loadAnnotation(css) {\n\t    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g);\n\t    if (!comments) return\n\n\t    // sourceMappingURLs from comments, strings, etc.\n\t    let start = css.lastIndexOf(comments.pop());\n\t    let end = css.indexOf('*/', start);\n\n\t    if (start > -1 && end > -1) {\n\t      // Locate the last sourceMappingURL to avoid pickin\n\t      this.annotation = this.getAnnotationURL(css.substring(start, end));\n\t    }\n\t  }\n\n\t  loadFile(path) {\n\t    this.root = dirname(path);\n\t    if (existsSync(path)) {\n\t      this.mapFile = path;\n\t      return readFileSync(path, 'utf-8').toString().trim()\n\t    }\n\t  }\n\n\t  loadMap(file, prev) {\n\t    if (prev === false) return false\n\n\t    if (prev) {\n\t      if (typeof prev === 'string') {\n\t        return prev\n\t      } else if (typeof prev === 'function') {\n\t        let prevPath = prev(file);\n\t        if (prevPath) {\n\t          let map = this.loadFile(prevPath);\n\t          if (!map) {\n\t            throw new Error(\n\t              'Unable to load previous source map: ' + prevPath.toString()\n\t            )\n\t          }\n\t          return map\n\t        }\n\t      } else if (prev instanceof SourceMapConsumer) {\n\t        return SourceMapGenerator.fromSourceMap(prev).toString()\n\t      } else if (prev instanceof SourceMapGenerator) {\n\t        return prev.toString()\n\t      } else if (this.isMap(prev)) {\n\t        return JSON.stringify(prev)\n\t      } else {\n\t        throw new Error(\n\t          'Unsupported previous source map format: ' + prev.toString()\n\t        )\n\t      }\n\t    } else if (this.inline) {\n\t      return this.decodeInline(this.annotation)\n\t    } else if (this.annotation) {\n\t      let map = this.annotation;\n\t      if (file) map = join(dirname(file), map);\n\t      return this.loadFile(map)\n\t    }\n\t  }\n\n\t  startWith(string, start) {\n\t    if (!string) return false\n\t    return string.substr(0, start.length) === start\n\t  }\n\n\t  withContent() {\n\t    return !!(\n\t      this.consumer().sourcesContent &&\n\t      this.consumer().sourcesContent.length > 0\n\t    )\n\t  }\n\t}\n\n\tpreviousMap = PreviousMap;\n\tPreviousMap.default = PreviousMap;\n\treturn previousMap;\n}\n\nvar input;\nvar hasRequiredInput;\n\nfunction requireInput () {\n\tif (hasRequiredInput) return input;\n\thasRequiredInput = 1;\n\n\tlet { nanoid } = /*@__PURE__*/ requireNonSecure();\n\tlet { isAbsolute, resolve } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\tlet { fileURLToPath, pathToFileURL } = require$$2;\n\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet PreviousMap = requirePreviousMap();\n\tlet terminalHighlight = require$$2;\n\n\tlet lineToIndexCache = Symbol('lineToIndexCache');\n\n\tlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n\tlet pathAvailable = Boolean(resolve && isAbsolute);\n\n\tfunction getLineToIndex(input) {\n\t  if (input[lineToIndexCache]) return input[lineToIndexCache]\n\t  let lines = input.css.split('\\n');\n\t  let lineToIndex = new Array(lines.length);\n\t  let prevIndex = 0;\n\n\t  for (let i = 0, l = lines.length; i < l; i++) {\n\t    lineToIndex[i] = prevIndex;\n\t    prevIndex += lines[i].length + 1;\n\t  }\n\n\t  input[lineToIndexCache] = lineToIndex;\n\t  return lineToIndex\n\t}\n\n\tclass Input {\n\t  get from() {\n\t    return this.file || this.id\n\t  }\n\n\t  constructor(css, opts = {}) {\n\t    if (\n\t      css === null ||\n\t      typeof css === 'undefined' ||\n\t      (typeof css === 'object' && !css.toString)\n\t    ) {\n\t      throw new Error(`PostCSS received ${css} instead of CSS string`)\n\t    }\n\n\t    this.css = css.toString();\n\n\t    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n\t      this.hasBOM = true;\n\t      this.css = this.css.slice(1);\n\t    } else {\n\t      this.hasBOM = false;\n\t    }\n\n\t    this.document = this.css;\n\t    if (opts.document) this.document = opts.document.toString();\n\n\t    if (opts.from) {\n\t      if (\n\t        !pathAvailable ||\n\t        /^\\w+:\\/\\//.test(opts.from) ||\n\t        isAbsolute(opts.from)\n\t      ) {\n\t        this.file = opts.from;\n\t      } else {\n\t        this.file = resolve(opts.from);\n\t      }\n\t    }\n\n\t    if (pathAvailable && sourceMapAvailable) {\n\t      let map = new PreviousMap(this.css, opts);\n\t      if (map.text) {\n\t        this.map = map;\n\t        let file = map.consumer().file;\n\t        if (!this.file && file) this.file = this.mapResolve(file);\n\t      }\n\t    }\n\n\t    if (!this.file) {\n\t      this.id = '<input css ' + nanoid(6) + '>';\n\t    }\n\t    if (this.map) this.map.file = this.from;\n\t  }\n\n\t  error(message, line, column, opts = {}) {\n\t    let endColumn, endLine, endOffset, offset, result;\n\n\t    if (line && typeof line === 'object') {\n\t      let start = line;\n\t      let end = column;\n\t      if (typeof start.offset === 'number') {\n\t        offset = start.offset;\n\t        let pos = this.fromOffset(offset);\n\t        line = pos.line;\n\t        column = pos.col;\n\t      } else {\n\t        line = start.line;\n\t        column = start.column;\n\t        offset = this.fromLineAndColumn(line, column);\n\t      }\n\t      if (typeof end.offset === 'number') {\n\t        endOffset = end.offset;\n\t        let pos = this.fromOffset(endOffset);\n\t        endLine = pos.line;\n\t        endColumn = pos.col;\n\t      } else {\n\t        endLine = end.line;\n\t        endColumn = end.column;\n\t        endOffset = this.fromLineAndColumn(end.line, end.column);\n\t      }\n\t    } else if (!column) {\n\t      offset = line;\n\t      let pos = this.fromOffset(offset);\n\t      line = pos.line;\n\t      column = pos.col;\n\t    } else {\n\t      offset = this.fromLineAndColumn(line, column);\n\t    }\n\n\t    let origin = this.origin(line, column, endLine, endColumn);\n\t    if (origin) {\n\t      result = new CssSyntaxError(\n\t        message,\n\t        origin.endLine === undefined\n\t          ? origin.line\n\t          : { column: origin.column, line: origin.line },\n\t        origin.endLine === undefined\n\t          ? origin.column\n\t          : { column: origin.endColumn, line: origin.endLine },\n\t        origin.source,\n\t        origin.file,\n\t        opts.plugin\n\t      );\n\t    } else {\n\t      result = new CssSyntaxError(\n\t        message,\n\t        endLine === undefined ? line : { column, line },\n\t        endLine === undefined ? column : { column: endColumn, line: endLine },\n\t        this.css,\n\t        this.file,\n\t        opts.plugin\n\t      );\n\t    }\n\n\t    result.input = { column, endColumn, endLine, endOffset, line, offset, source: this.css };\n\t    if (this.file) {\n\t      if (pathToFileURL) {\n\t        result.input.url = pathToFileURL(this.file).toString();\n\t      }\n\t      result.input.file = this.file;\n\t    }\n\n\t    return result\n\t  }\n\n\t  fromLineAndColumn(line, column) {\n\t    let lineToIndex = getLineToIndex(this);\n\t    let index = lineToIndex[line - 1];\n\t    return index + column - 1\n\t  }\n\n\t  fromOffset(offset) {\n\t    let lineToIndex = getLineToIndex(this);\n\t    let lastLine = lineToIndex[lineToIndex.length - 1];\n\n\t    let min = 0;\n\t    if (offset >= lastLine) {\n\t      min = lineToIndex.length - 1;\n\t    } else {\n\t      let max = lineToIndex.length - 2;\n\t      let mid;\n\t      while (min < max) {\n\t        mid = min + ((max - min) >> 1);\n\t        if (offset < lineToIndex[mid]) {\n\t          max = mid - 1;\n\t        } else if (offset >= lineToIndex[mid + 1]) {\n\t          min = mid + 1;\n\t        } else {\n\t          min = mid;\n\t          break\n\t        }\n\t      }\n\t    }\n\t    return {\n\t      col: offset - lineToIndex[min] + 1,\n\t      line: min + 1\n\t    }\n\t  }\n\n\t  mapResolve(file) {\n\t    if (/^\\w+:\\/\\//.test(file)) {\n\t      return file\n\t    }\n\t    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n\t  }\n\n\t  origin(line, column, endLine, endColumn) {\n\t    if (!this.map) return false\n\t    let consumer = this.map.consumer();\n\n\t    let from = consumer.originalPositionFor({ column, line });\n\t    if (!from.source) return false\n\n\t    let to;\n\t    if (typeof endLine === 'number') {\n\t      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n\t    }\n\n\t    let fromUrl;\n\n\t    if (isAbsolute(from.source)) {\n\t      fromUrl = pathToFileURL(from.source);\n\t    } else {\n\t      fromUrl = new URL(\n\t        from.source,\n\t        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n\t      );\n\t    }\n\n\t    let result = {\n\t      column: from.column,\n\t      endColumn: to && to.column,\n\t      endLine: to && to.line,\n\t      line: from.line,\n\t      url: fromUrl.toString()\n\t    };\n\n\t    if (fromUrl.protocol === 'file:') {\n\t      if (fileURLToPath) {\n\t        result.file = fileURLToPath(fromUrl);\n\t      } else {\n\t        /* c8 ignore next 2 */\n\t        throw new Error(`file: protocol is not available in this PostCSS build`)\n\t      }\n\t    }\n\n\t    let source = consumer.sourceContentFor(from.source);\n\t    if (source) result.source = source;\n\n\t    return result\n\t  }\n\n\t  toJSON() {\n\t    let json = {};\n\t    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n\t      if (this[name] != null) {\n\t        json[name] = this[name];\n\t      }\n\t    }\n\t    if (this.map) {\n\t      json.map = { ...this.map };\n\t      if (json.map.consumerCache) {\n\t        json.map.consumerCache = undefined;\n\t      }\n\t    }\n\t    return json\n\t  }\n\t}\n\n\tinput = Input;\n\tInput.default = Input;\n\n\tif (terminalHighlight && terminalHighlight.registerInput) {\n\t  terminalHighlight.registerInput(Input);\n\t}\n\treturn input;\n}\n\nvar root;\nvar hasRequiredRoot;\n\nfunction requireRoot () {\n\tif (hasRequiredRoot) return root;\n\thasRequiredRoot = 1;\n\n\tlet Container = requireContainer$1();\n\n\tlet LazyResult, Processor;\n\n\tclass Root extends Container {\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'root';\n\t    if (!this.nodes) this.nodes = [];\n\t  }\n\n\t  normalize(child, sample, type) {\n\t    let nodes = super.normalize(child);\n\n\t    if (sample) {\n\t      if (type === 'prepend') {\n\t        if (this.nodes.length > 1) {\n\t          sample.raws.before = this.nodes[1].raws.before;\n\t        } else {\n\t          delete sample.raws.before;\n\t        }\n\t      } else if (this.first !== sample) {\n\t        for (let node of nodes) {\n\t          node.raws.before = sample.raws.before;\n\t        }\n\t      }\n\t    }\n\n\t    return nodes\n\t  }\n\n\t  removeChild(child, ignore) {\n\t    let index = this.index(child);\n\n\t    if (!ignore && index === 0 && this.nodes.length > 1) {\n\t      this.nodes[1].raws.before = this.nodes[index].raws.before;\n\t    }\n\n\t    return super.removeChild(child)\n\t  }\n\n\t  toResult(opts = {}) {\n\t    let lazy = new LazyResult(new Processor(), this, opts);\n\t    return lazy.stringify()\n\t  }\n\t}\n\n\tRoot.registerLazyResult = dependant => {\n\t  LazyResult = dependant;\n\t};\n\n\tRoot.registerProcessor = dependant => {\n\t  Processor = dependant;\n\t};\n\n\troot = Root;\n\tRoot.default = Root;\n\n\tContainer.registerRoot(Root);\n\treturn root;\n}\n\nvar list_1;\nvar hasRequiredList;\n\nfunction requireList () {\n\tif (hasRequiredList) return list_1;\n\thasRequiredList = 1;\n\n\tlet list = {\n\t  comma(string) {\n\t    return list.split(string, [','], true)\n\t  },\n\n\t  space(string) {\n\t    let spaces = [' ', '\\n', '\\t'];\n\t    return list.split(string, spaces)\n\t  },\n\n\t  split(string, separators, last) {\n\t    let array = [];\n\t    let current = '';\n\t    let split = false;\n\n\t    let func = 0;\n\t    let inQuote = false;\n\t    let prevQuote = '';\n\t    let escape = false;\n\n\t    for (let letter of string) {\n\t      if (escape) {\n\t        escape = false;\n\t      } else if (letter === '\\\\') {\n\t        escape = true;\n\t      } else if (inQuote) {\n\t        if (letter === prevQuote) {\n\t          inQuote = false;\n\t        }\n\t      } else if (letter === '\"' || letter === \"'\") {\n\t        inQuote = true;\n\t        prevQuote = letter;\n\t      } else if (letter === '(') {\n\t        func += 1;\n\t      } else if (letter === ')') {\n\t        if (func > 0) func -= 1;\n\t      } else if (func === 0) {\n\t        if (separators.includes(letter)) split = true;\n\t      }\n\n\t      if (split) {\n\t        if (current !== '') array.push(current.trim());\n\t        current = '';\n\t        split = false;\n\t      } else {\n\t        current += letter;\n\t      }\n\t    }\n\n\t    if (last || current !== '') array.push(current.trim());\n\t    return array\n\t  }\n\t};\n\n\tlist_1 = list;\n\tlist.default = list;\n\treturn list_1;\n}\n\nvar rule;\nvar hasRequiredRule;\n\nfunction requireRule () {\n\tif (hasRequiredRule) return rule;\n\thasRequiredRule = 1;\n\n\tlet Container = requireContainer$1();\n\tlet list = requireList();\n\n\tclass Rule extends Container {\n\t  get selectors() {\n\t    return list.comma(this.selector)\n\t  }\n\n\t  set selectors(values) {\n\t    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n\t    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n\t    this.selector = values.join(sep);\n\t  }\n\n\t  constructor(defaults) {\n\t    super(defaults);\n\t    this.type = 'rule';\n\t    if (!this.nodes) this.nodes = [];\n\t  }\n\t}\n\n\trule = Rule;\n\tRule.default = Rule;\n\n\tContainer.registerRule(Rule);\n\treturn rule;\n}\n\nvar fromJSON_1;\nvar hasRequiredFromJSON;\n\nfunction requireFromJSON () {\n\tif (hasRequiredFromJSON) return fromJSON_1;\n\thasRequiredFromJSON = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Input = requireInput();\n\tlet PreviousMap = requirePreviousMap();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\n\tfunction fromJSON(json, inputs) {\n\t  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n\t  let { inputs: ownInputs, ...defaults } = json;\n\t  if (ownInputs) {\n\t    inputs = [];\n\t    for (let input of ownInputs) {\n\t      let inputHydrated = { ...input, __proto__: Input.prototype };\n\t      if (inputHydrated.map) {\n\t        inputHydrated.map = {\n\t          ...inputHydrated.map,\n\t          __proto__: PreviousMap.prototype\n\t        };\n\t      }\n\t      inputs.push(inputHydrated);\n\t    }\n\t  }\n\t  if (defaults.nodes) {\n\t    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs));\n\t  }\n\t  if (defaults.source) {\n\t    let { inputId, ...source } = defaults.source;\n\t    defaults.source = source;\n\t    if (inputId != null) {\n\t      defaults.source.input = inputs[inputId];\n\t    }\n\t  }\n\t  if (defaults.type === 'root') {\n\t    return new Root(defaults)\n\t  } else if (defaults.type === 'decl') {\n\t    return new Declaration(defaults)\n\t  } else if (defaults.type === 'rule') {\n\t    return new Rule(defaults)\n\t  } else if (defaults.type === 'comment') {\n\t    return new Comment(defaults)\n\t  } else if (defaults.type === 'atrule') {\n\t    return new AtRule(defaults)\n\t  } else {\n\t    throw new Error('Unknown node type: ' + json.type)\n\t  }\n\t}\n\n\tfromJSON_1 = fromJSON;\n\tfromJSON.default = fromJSON;\n\treturn fromJSON_1;\n}\n\nvar mapGenerator;\nvar hasRequiredMapGenerator;\n\nfunction requireMapGenerator () {\n\tif (hasRequiredMapGenerator) return mapGenerator;\n\thasRequiredMapGenerator = 1;\n\n\tlet { dirname, relative, resolve, sep } = require$$2;\n\tlet { SourceMapConsumer, SourceMapGenerator } = require$$2;\n\tlet { pathToFileURL } = require$$2;\n\n\tlet Input = requireInput();\n\n\tlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);\n\tlet pathAvailable = Boolean(dirname && resolve && relative && sep);\n\n\tclass MapGenerator {\n\t  constructor(stringify, root, opts, cssString) {\n\t    this.stringify = stringify;\n\t    this.mapOpts = opts.map || {};\n\t    this.root = root;\n\t    this.opts = opts;\n\t    this.css = cssString;\n\t    this.originalCSS = cssString;\n\t    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n\n\t    this.memoizedFileURLs = new Map();\n\t    this.memoizedPaths = new Map();\n\t    this.memoizedURLs = new Map();\n\t  }\n\n\t  addAnnotation() {\n\t    let content;\n\n\t    if (this.isInline()) {\n\t      content =\n\t        'data:application/json;base64,' + this.toBase64(this.map.toString());\n\t    } else if (typeof this.mapOpts.annotation === 'string') {\n\t      content = this.mapOpts.annotation;\n\t    } else if (typeof this.mapOpts.annotation === 'function') {\n\t      content = this.mapOpts.annotation(this.opts.to, this.root);\n\t    } else {\n\t      content = this.outputFile() + '.map';\n\t    }\n\t    let eol = '\\n';\n\t    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n\n\t    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n\t  }\n\n\t  applyPrevMaps() {\n\t    for (let prev of this.previous()) {\n\t      let from = this.toUrl(this.path(prev.file));\n\t      let root = prev.root || dirname(prev.file);\n\t      let map;\n\n\t      if (this.mapOpts.sourcesContent === false) {\n\t        map = new SourceMapConsumer(prev.text);\n\t        if (map.sourcesContent) {\n\t          map.sourcesContent = null;\n\t        }\n\t      } else {\n\t        map = prev.consumer();\n\t      }\n\n\t      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n\t    }\n\t  }\n\n\t  clearAnnotation() {\n\t    if (this.mapOpts.annotation === false) return\n\n\t    if (this.root) {\n\t      let node;\n\t      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n\t        node = this.root.nodes[i];\n\t        if (node.type !== 'comment') continue\n\t        if (node.text.startsWith('# sourceMappingURL=')) {\n\t          this.root.removeChild(i);\n\t        }\n\t      }\n\t    } else if (this.css) {\n\t      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n\t    }\n\t  }\n\n\t  generate() {\n\t    this.clearAnnotation();\n\t    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n\t      return this.generateMap()\n\t    } else {\n\t      let result = '';\n\t      this.stringify(this.root, i => {\n\t        result += i;\n\t      });\n\t      return [result]\n\t    }\n\t  }\n\n\t  generateMap() {\n\t    if (this.root) {\n\t      this.generateString();\n\t    } else if (this.previous().length === 1) {\n\t      let prev = this.previous()[0].consumer();\n\t      prev.file = this.outputFile();\n\t      this.map = SourceMapGenerator.fromSourceMap(prev, {\n\t        ignoreInvalidMapping: true\n\t      });\n\t    } else {\n\t      this.map = new SourceMapGenerator({\n\t        file: this.outputFile(),\n\t        ignoreInvalidMapping: true\n\t      });\n\t      this.map.addMapping({\n\t        generated: { column: 0, line: 1 },\n\t        original: { column: 0, line: 1 },\n\t        source: this.opts.from\n\t          ? this.toUrl(this.path(this.opts.from))\n\t          : '<no source>'\n\t      });\n\t    }\n\n\t    if (this.isSourcesContent()) this.setSourcesContent();\n\t    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n\t    if (this.isAnnotation()) this.addAnnotation();\n\n\t    if (this.isInline()) {\n\t      return [this.css]\n\t    } else {\n\t      return [this.css, this.map]\n\t    }\n\t  }\n\n\t  generateString() {\n\t    this.css = '';\n\t    this.map = new SourceMapGenerator({\n\t      file: this.outputFile(),\n\t      ignoreInvalidMapping: true\n\t    });\n\n\t    let line = 1;\n\t    let column = 1;\n\n\t    let noSource = '<no source>';\n\t    let mapping = {\n\t      generated: { column: 0, line: 0 },\n\t      original: { column: 0, line: 0 },\n\t      source: ''\n\t    };\n\n\t    let last, lines;\n\t    this.stringify(this.root, (str, node, type) => {\n\t      this.css += str;\n\n\t      if (node && type !== 'end') {\n\t        mapping.generated.line = line;\n\t        mapping.generated.column = column - 1;\n\t        if (node.source && node.source.start) {\n\t          mapping.source = this.sourcePath(node);\n\t          mapping.original.line = node.source.start.line;\n\t          mapping.original.column = node.source.start.column - 1;\n\t          this.map.addMapping(mapping);\n\t        } else {\n\t          mapping.source = noSource;\n\t          mapping.original.line = 1;\n\t          mapping.original.column = 0;\n\t          this.map.addMapping(mapping);\n\t        }\n\t      }\n\n\t      lines = str.match(/\\n/g);\n\t      if (lines) {\n\t        line += lines.length;\n\t        last = str.lastIndexOf('\\n');\n\t        column = str.length - last;\n\t      } else {\n\t        column += str.length;\n\t      }\n\n\t      if (node && type !== 'start') {\n\t        let p = node.parent || { raws: {} };\n\t        let childless =\n\t          node.type === 'decl' || (node.type === 'atrule' && !node.nodes);\n\t        if (!childless || node !== p.last || p.raws.semicolon) {\n\t          if (node.source && node.source.end) {\n\t            mapping.source = this.sourcePath(node);\n\t            mapping.original.line = node.source.end.line;\n\t            mapping.original.column = node.source.end.column - 1;\n\t            mapping.generated.line = line;\n\t            mapping.generated.column = column - 2;\n\t            this.map.addMapping(mapping);\n\t          } else {\n\t            mapping.source = noSource;\n\t            mapping.original.line = 1;\n\t            mapping.original.column = 0;\n\t            mapping.generated.line = line;\n\t            mapping.generated.column = column - 1;\n\t            this.map.addMapping(mapping);\n\t          }\n\t        }\n\t      }\n\t    });\n\t  }\n\n\t  isAnnotation() {\n\t    if (this.isInline()) {\n\t      return true\n\t    }\n\t    if (typeof this.mapOpts.annotation !== 'undefined') {\n\t      return this.mapOpts.annotation\n\t    }\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.annotation)\n\t    }\n\t    return true\n\t  }\n\n\t  isInline() {\n\t    if (typeof this.mapOpts.inline !== 'undefined') {\n\t      return this.mapOpts.inline\n\t    }\n\n\t    let annotation = this.mapOpts.annotation;\n\t    if (typeof annotation !== 'undefined' && annotation !== true) {\n\t      return false\n\t    }\n\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.inline)\n\t    }\n\t    return true\n\t  }\n\n\t  isMap() {\n\t    if (typeof this.opts.map !== 'undefined') {\n\t      return !!this.opts.map\n\t    }\n\t    return this.previous().length > 0\n\t  }\n\n\t  isSourcesContent() {\n\t    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n\t      return this.mapOpts.sourcesContent\n\t    }\n\t    if (this.previous().length) {\n\t      return this.previous().some(i => i.withContent())\n\t    }\n\t    return true\n\t  }\n\n\t  outputFile() {\n\t    if (this.opts.to) {\n\t      return this.path(this.opts.to)\n\t    } else if (this.opts.from) {\n\t      return this.path(this.opts.from)\n\t    } else {\n\t      return 'to.css'\n\t    }\n\t  }\n\n\t  path(file) {\n\t    if (this.mapOpts.absolute) return file\n\t    if (file.charCodeAt(0) === 60 /* `<` */) return file\n\t    if (/^\\w+:\\/\\//.test(file)) return file\n\t    let cached = this.memoizedPaths.get(file);\n\t    if (cached) return cached\n\n\t    let from = this.opts.to ? dirname(this.opts.to) : '.';\n\n\t    if (typeof this.mapOpts.annotation === 'string') {\n\t      from = dirname(resolve(from, this.mapOpts.annotation));\n\t    }\n\n\t    let path = relative(from, file);\n\t    this.memoizedPaths.set(file, path);\n\n\t    return path\n\t  }\n\n\t  previous() {\n\t    if (!this.previousMaps) {\n\t      this.previousMaps = [];\n\t      if (this.root) {\n\t        this.root.walk(node => {\n\t          if (node.source && node.source.input.map) {\n\t            let map = node.source.input.map;\n\t            if (!this.previousMaps.includes(map)) {\n\t              this.previousMaps.push(map);\n\t            }\n\t          }\n\t        });\n\t      } else {\n\t        let input = new Input(this.originalCSS, this.opts);\n\t        if (input.map) this.previousMaps.push(input.map);\n\t      }\n\t    }\n\n\t    return this.previousMaps\n\t  }\n\n\t  setSourcesContent() {\n\t    let already = {};\n\t    if (this.root) {\n\t      this.root.walk(node => {\n\t        if (node.source) {\n\t          let from = node.source.input.from;\n\t          if (from && !already[from]) {\n\t            already[from] = true;\n\t            let fromUrl = this.usesFileUrls\n\t              ? this.toFileUrl(from)\n\t              : this.toUrl(this.path(from));\n\t            this.map.setSourceContent(fromUrl, node.source.input.css);\n\t          }\n\t        }\n\t      });\n\t    } else if (this.css) {\n\t      let from = this.opts.from\n\t        ? this.toUrl(this.path(this.opts.from))\n\t        : '<no source>';\n\t      this.map.setSourceContent(from, this.css);\n\t    }\n\t  }\n\n\t  sourcePath(node) {\n\t    if (this.mapOpts.from) {\n\t      return this.toUrl(this.mapOpts.from)\n\t    } else if (this.usesFileUrls) {\n\t      return this.toFileUrl(node.source.input.from)\n\t    } else {\n\t      return this.toUrl(this.path(node.source.input.from))\n\t    }\n\t  }\n\n\t  toBase64(str) {\n\t    if (Buffer) {\n\t      return Buffer.from(str).toString('base64')\n\t    } else {\n\t      return window.btoa(unescape(encodeURIComponent(str)))\n\t    }\n\t  }\n\n\t  toFileUrl(path) {\n\t    let cached = this.memoizedFileURLs.get(path);\n\t    if (cached) return cached\n\n\t    if (pathToFileURL) {\n\t      let fileURL = pathToFileURL(path).toString();\n\t      this.memoizedFileURLs.set(path, fileURL);\n\n\t      return fileURL\n\t    } else {\n\t      throw new Error(\n\t        '`map.absolute` option is not available in this PostCSS build'\n\t      )\n\t    }\n\t  }\n\n\t  toUrl(path) {\n\t    let cached = this.memoizedURLs.get(path);\n\t    if (cached) return cached\n\n\t    if (sep === '\\\\') {\n\t      path = path.replace(/\\\\/g, '/');\n\t    }\n\n\t    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n\t    this.memoizedURLs.set(path, url);\n\n\t    return url\n\t  }\n\t}\n\n\tmapGenerator = MapGenerator;\n\treturn mapGenerator;\n}\n\nvar tokenize;\nvar hasRequiredTokenize;\n\nfunction requireTokenize () {\n\tif (hasRequiredTokenize) return tokenize;\n\thasRequiredTokenize = 1;\n\n\tconst SINGLE_QUOTE = \"'\".charCodeAt(0);\n\tconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\n\tconst BACKSLASH = '\\\\'.charCodeAt(0);\n\tconst SLASH = '/'.charCodeAt(0);\n\tconst NEWLINE = '\\n'.charCodeAt(0);\n\tconst SPACE = ' '.charCodeAt(0);\n\tconst FEED = '\\f'.charCodeAt(0);\n\tconst TAB = '\\t'.charCodeAt(0);\n\tconst CR = '\\r'.charCodeAt(0);\n\tconst OPEN_SQUARE = '['.charCodeAt(0);\n\tconst CLOSE_SQUARE = ']'.charCodeAt(0);\n\tconst OPEN_PARENTHESES = '('.charCodeAt(0);\n\tconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\n\tconst OPEN_CURLY = '{'.charCodeAt(0);\n\tconst CLOSE_CURLY = '}'.charCodeAt(0);\n\tconst SEMICOLON = ';'.charCodeAt(0);\n\tconst ASTERISK = '*'.charCodeAt(0);\n\tconst COLON = ':'.charCodeAt(0);\n\tconst AT = '@'.charCodeAt(0);\n\n\tconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\n\tconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\n\tconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\n\tconst RE_HEX_ESCAPE = /[\\da-f]/i;\n\n\ttokenize = function tokenizer(input, options = {}) {\n\t  let css = input.css.valueOf();\n\t  let ignore = options.ignoreErrors;\n\n\t  let code, content, escape, next, quote;\n\t  let currentToken, escaped, escapePos, n, prev;\n\n\t  let length = css.length;\n\t  let pos = 0;\n\t  let buffer = [];\n\t  let returned = [];\n\n\t  function position() {\n\t    return pos\n\t  }\n\n\t  function unclosed(what) {\n\t    throw input.error('Unclosed ' + what, pos)\n\t  }\n\n\t  function endOfFile() {\n\t    return returned.length === 0 && pos >= length\n\t  }\n\n\t  function nextToken(opts) {\n\t    if (returned.length) return returned.pop()\n\t    if (pos >= length) return\n\n\t    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n\n\t    code = css.charCodeAt(pos);\n\n\t    switch (code) {\n\t      case NEWLINE:\n\t      case SPACE:\n\t      case TAB:\n\t      case CR:\n\t      case FEED: {\n\t        next = pos;\n\t        do {\n\t          next += 1;\n\t          code = css.charCodeAt(next);\n\t        } while (\n\t          code === SPACE ||\n\t          code === NEWLINE ||\n\t          code === TAB ||\n\t          code === CR ||\n\t          code === FEED\n\t        )\n\n\t        currentToken = ['space', css.slice(pos, next)];\n\t        pos = next - 1;\n\t        break\n\t      }\n\n\t      case OPEN_SQUARE:\n\t      case CLOSE_SQUARE:\n\t      case OPEN_CURLY:\n\t      case CLOSE_CURLY:\n\t      case COLON:\n\t      case SEMICOLON:\n\t      case CLOSE_PARENTHESES: {\n\t        let controlChar = String.fromCharCode(code);\n\t        currentToken = [controlChar, controlChar, pos];\n\t        break\n\t      }\n\n\t      case OPEN_PARENTHESES: {\n\t        prev = buffer.length ? buffer.pop()[1] : '';\n\t        n = css.charCodeAt(pos + 1);\n\t        if (\n\t          prev === 'url' &&\n\t          n !== SINGLE_QUOTE &&\n\t          n !== DOUBLE_QUOTE &&\n\t          n !== SPACE &&\n\t          n !== NEWLINE &&\n\t          n !== TAB &&\n\t          n !== FEED &&\n\t          n !== CR\n\t        ) {\n\t          next = pos;\n\t          do {\n\t            escaped = false;\n\t            next = css.indexOf(')', next + 1);\n\t            if (next === -1) {\n\t              if (ignore || ignoreUnclosed) {\n\t                next = pos;\n\t                break\n\t              } else {\n\t                unclosed('bracket');\n\t              }\n\t            }\n\t            escapePos = next;\n\t            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n\t              escapePos -= 1;\n\t              escaped = !escaped;\n\t            }\n\t          } while (escaped)\n\n\t          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\n\n\t          pos = next;\n\t        } else {\n\t          next = css.indexOf(')', pos + 1);\n\t          content = css.slice(pos, next + 1);\n\n\t          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n\t            currentToken = ['(', '(', pos];\n\t          } else {\n\t            currentToken = ['brackets', content, pos, next];\n\t            pos = next;\n\t          }\n\t        }\n\n\t        break\n\t      }\n\n\t      case SINGLE_QUOTE:\n\t      case DOUBLE_QUOTE: {\n\t        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n\t        next = pos;\n\t        do {\n\t          escaped = false;\n\t          next = css.indexOf(quote, next + 1);\n\t          if (next === -1) {\n\t            if (ignore || ignoreUnclosed) {\n\t              next = pos + 1;\n\t              break\n\t            } else {\n\t              unclosed('string');\n\t            }\n\t          }\n\t          escapePos = next;\n\t          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n\t            escapePos -= 1;\n\t            escaped = !escaped;\n\t          }\n\t        } while (escaped)\n\n\t        currentToken = ['string', css.slice(pos, next + 1), pos, next];\n\t        pos = next;\n\t        break\n\t      }\n\n\t      case AT: {\n\t        RE_AT_END.lastIndex = pos + 1;\n\t        RE_AT_END.test(css);\n\t        if (RE_AT_END.lastIndex === 0) {\n\t          next = css.length - 1;\n\t        } else {\n\t          next = RE_AT_END.lastIndex - 2;\n\t        }\n\n\t        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\n\n\t        pos = next;\n\t        break\n\t      }\n\n\t      case BACKSLASH: {\n\t        next = pos;\n\t        escape = true;\n\t        while (css.charCodeAt(next + 1) === BACKSLASH) {\n\t          next += 1;\n\t          escape = !escape;\n\t        }\n\t        code = css.charCodeAt(next + 1);\n\t        if (\n\t          escape &&\n\t          code !== SLASH &&\n\t          code !== SPACE &&\n\t          code !== NEWLINE &&\n\t          code !== TAB &&\n\t          code !== CR &&\n\t          code !== FEED\n\t        ) {\n\t          next += 1;\n\t          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n\t            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n\t              next += 1;\n\t            }\n\t            if (css.charCodeAt(next + 1) === SPACE) {\n\t              next += 1;\n\t            }\n\t          }\n\t        }\n\n\t        currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\n\t        pos = next;\n\t        break\n\t      }\n\n\t      default: {\n\t        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n\t          next = css.indexOf('*/', pos + 2) + 1;\n\t          if (next === 0) {\n\t            if (ignore || ignoreUnclosed) {\n\t              next = css.length;\n\t            } else {\n\t              unclosed('comment');\n\t            }\n\t          }\n\n\t          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\n\t          pos = next;\n\t        } else {\n\t          RE_WORD_END.lastIndex = pos + 1;\n\t          RE_WORD_END.test(css);\n\t          if (RE_WORD_END.lastIndex === 0) {\n\t            next = css.length - 1;\n\t          } else {\n\t            next = RE_WORD_END.lastIndex - 2;\n\t          }\n\n\t          currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\t          buffer.push(currentToken);\n\t          pos = next;\n\t        }\n\n\t        break\n\t      }\n\t    }\n\n\t    pos++;\n\t    return currentToken\n\t  }\n\n\t  function back(token) {\n\t    returned.push(token);\n\t  }\n\n\t  return {\n\t    back,\n\t    endOfFile,\n\t    nextToken,\n\t    position\n\t  }\n\t};\n\treturn tokenize;\n}\n\nvar parser;\nvar hasRequiredParser;\n\nfunction requireParser () {\n\tif (hasRequiredParser) return parser;\n\thasRequiredParser = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Declaration = requireDeclaration();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\tlet tokenizer = requireTokenize();\n\n\tconst SAFE_COMMENT_NEIGHBOR = {\n\t  empty: true,\n\t  space: true\n\t};\n\n\tfunction findLastWithPosition(tokens) {\n\t  for (let i = tokens.length - 1; i >= 0; i--) {\n\t    let token = tokens[i];\n\t    let pos = token[3] || token[2];\n\t    if (pos) return pos\n\t  }\n\t}\n\n\tclass Parser {\n\t  constructor(input) {\n\t    this.input = input;\n\n\t    this.root = new Root();\n\t    this.current = this.root;\n\t    this.spaces = '';\n\t    this.semicolon = false;\n\n\t    this.createTokenizer();\n\t    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } };\n\t  }\n\n\t  atrule(token) {\n\t    let node = new AtRule();\n\t    node.name = token[1].slice(1);\n\t    if (node.name === '') {\n\t      this.unnamedAtrule(node, token);\n\t    }\n\t    this.init(node, token[2]);\n\n\t    let type;\n\t    let prev;\n\t    let shift;\n\t    let last = false;\n\t    let open = false;\n\t    let params = [];\n\t    let brackets = [];\n\n\t    while (!this.tokenizer.endOfFile()) {\n\t      token = this.tokenizer.nextToken();\n\t      type = token[0];\n\n\t      if (type === '(' || type === '[') {\n\t        brackets.push(type === '(' ? ')' : ']');\n\t      } else if (type === '{' && brackets.length > 0) {\n\t        brackets.push('}');\n\t      } else if (type === brackets[brackets.length - 1]) {\n\t        brackets.pop();\n\t      }\n\n\t      if (brackets.length === 0) {\n\t        if (type === ';') {\n\t          node.source.end = this.getPosition(token[2]);\n\t          node.source.end.offset++;\n\t          this.semicolon = true;\n\t          break\n\t        } else if (type === '{') {\n\t          open = true;\n\t          break\n\t        } else if (type === '}') {\n\t          if (params.length > 0) {\n\t            shift = params.length - 1;\n\t            prev = params[shift];\n\t            while (prev && prev[0] === 'space') {\n\t              prev = params[--shift];\n\t            }\n\t            if (prev) {\n\t              node.source.end = this.getPosition(prev[3] || prev[2]);\n\t              node.source.end.offset++;\n\t            }\n\t          }\n\t          this.end(token);\n\t          break\n\t        } else {\n\t          params.push(token);\n\t        }\n\t      } else {\n\t        params.push(token);\n\t      }\n\n\t      if (this.tokenizer.endOfFile()) {\n\t        last = true;\n\t        break\n\t      }\n\t    }\n\n\t    node.raws.between = this.spacesAndCommentsFromEnd(params);\n\t    if (params.length) {\n\t      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n\t      this.raw(node, 'params', params);\n\t      if (last) {\n\t        token = params[params.length - 1];\n\t        node.source.end = this.getPosition(token[3] || token[2]);\n\t        node.source.end.offset++;\n\t        this.spaces = node.raws.between;\n\t        node.raws.between = '';\n\t      }\n\t    } else {\n\t      node.raws.afterName = '';\n\t      node.params = '';\n\t    }\n\n\t    if (open) {\n\t      node.nodes = [];\n\t      this.current = node;\n\t    }\n\t  }\n\n\t  checkMissedSemicolon(tokens) {\n\t    let colon = this.colon(tokens);\n\t    if (colon === false) return\n\n\t    let founded = 0;\n\t    let token;\n\t    for (let j = colon - 1; j >= 0; j--) {\n\t      token = tokens[j];\n\t      if (token[0] !== 'space') {\n\t        founded += 1;\n\t        if (founded === 2) break\n\t      }\n\t    }\n\t    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n\t    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n\t    // And because we need it after that one we do +1 to get the next one.\n\t    throw this.input.error(\n\t      'Missed semicolon',\n\t      token[0] === 'word' ? token[3] + 1 : token[2]\n\t    )\n\t  }\n\n\t  colon(tokens) {\n\t    let brackets = 0;\n\t    let prev, token, type;\n\t    for (let [i, element] of tokens.entries()) {\n\t      token = element;\n\t      type = token[0];\n\n\t      if (type === '(') {\n\t        brackets += 1;\n\t      }\n\t      if (type === ')') {\n\t        brackets -= 1;\n\t      }\n\t      if (brackets === 0 && type === ':') {\n\t        if (!prev) {\n\t          this.doubleColon(token);\n\t        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n\t          continue\n\t        } else {\n\t          return i\n\t        }\n\t      }\n\n\t      prev = token;\n\t    }\n\t    return false\n\t  }\n\n\t  comment(token) {\n\t    let node = new Comment();\n\t    this.init(node, token[2]);\n\t    node.source.end = this.getPosition(token[3] || token[2]);\n\t    node.source.end.offset++;\n\n\t    let text = token[1].slice(2, -2);\n\t    if (/^\\s*$/.test(text)) {\n\t      node.text = '';\n\t      node.raws.left = text;\n\t      node.raws.right = '';\n\t    } else {\n\t      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n\t      node.text = match[2];\n\t      node.raws.left = match[1];\n\t      node.raws.right = match[3];\n\t    }\n\t  }\n\n\t  createTokenizer() {\n\t    this.tokenizer = tokenizer(this.input);\n\t  }\n\n\t  decl(tokens, customProperty) {\n\t    let node = new Declaration();\n\t    this.init(node, tokens[0][2]);\n\n\t    let last = tokens[tokens.length - 1];\n\t    if (last[0] === ';') {\n\t      this.semicolon = true;\n\t      tokens.pop();\n\t    }\n\n\t    node.source.end = this.getPosition(\n\t      last[3] || last[2] || findLastWithPosition(tokens)\n\t    );\n\t    node.source.end.offset++;\n\n\t    while (tokens[0][0] !== 'word') {\n\t      if (tokens.length === 1) this.unknownWord(tokens);\n\t      node.raws.before += tokens.shift()[1];\n\t    }\n\t    node.source.start = this.getPosition(tokens[0][2]);\n\n\t    node.prop = '';\n\t    while (tokens.length) {\n\t      let type = tokens[0][0];\n\t      if (type === ':' || type === 'space' || type === 'comment') {\n\t        break\n\t      }\n\t      node.prop += tokens.shift()[1];\n\t    }\n\n\t    node.raws.between = '';\n\n\t    let token;\n\t    while (tokens.length) {\n\t      token = tokens.shift();\n\n\t      if (token[0] === ':') {\n\t        node.raws.between += token[1];\n\t        break\n\t      } else {\n\t        if (token[0] === 'word' && /\\w/.test(token[1])) {\n\t          this.unknownWord([token]);\n\t        }\n\t        node.raws.between += token[1];\n\t      }\n\t    }\n\n\t    if (node.prop[0] === '_' || node.prop[0] === '*') {\n\t      node.raws.before += node.prop[0];\n\t      node.prop = node.prop.slice(1);\n\t    }\n\n\t    let firstSpaces = [];\n\t    let next;\n\t    while (tokens.length) {\n\t      next = tokens[0][0];\n\t      if (next !== 'space' && next !== 'comment') break\n\t      firstSpaces.push(tokens.shift());\n\t    }\n\n\t    this.precheckMissedSemicolon(tokens);\n\n\t    for (let i = tokens.length - 1; i >= 0; i--) {\n\t      token = tokens[i];\n\t      if (token[1].toLowerCase() === '!important') {\n\t        node.important = true;\n\t        let string = this.stringFrom(tokens, i);\n\t        string = this.spacesFromEnd(tokens) + string;\n\t        if (string !== ' !important') node.raws.important = string;\n\t        break\n\t      } else if (token[1].toLowerCase() === 'important') {\n\t        let cache = tokens.slice(0);\n\t        let str = '';\n\t        for (let j = i; j > 0; j--) {\n\t          let type = cache[j][0];\n\t          if (str.trim().startsWith('!') && type !== 'space') {\n\t            break\n\t          }\n\t          str = cache.pop()[1] + str;\n\t        }\n\t        if (str.trim().startsWith('!')) {\n\t          node.important = true;\n\t          node.raws.important = str;\n\t          tokens = cache;\n\t        }\n\t      }\n\n\t      if (token[0] !== 'space' && token[0] !== 'comment') {\n\t        break\n\t      }\n\t    }\n\n\t    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\n\n\t    if (hasWord) {\n\t      node.raws.between += firstSpaces.map(i => i[1]).join('');\n\t      firstSpaces = [];\n\t    }\n\t    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);\n\n\t    if (node.value.includes(':') && !customProperty) {\n\t      this.checkMissedSemicolon(tokens);\n\t    }\n\t  }\n\n\t  doubleColon(token) {\n\t    throw this.input.error(\n\t      'Double colon',\n\t      { offset: token[2] },\n\t      { offset: token[2] + token[1].length }\n\t    )\n\t  }\n\n\t  emptyRule(token) {\n\t    let node = new Rule();\n\t    this.init(node, token[2]);\n\t    node.selector = '';\n\t    node.raws.between = '';\n\t    this.current = node;\n\t  }\n\n\t  end(token) {\n\t    if (this.current.nodes && this.current.nodes.length) {\n\t      this.current.raws.semicolon = this.semicolon;\n\t    }\n\t    this.semicolon = false;\n\n\t    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n\t    this.spaces = '';\n\n\t    if (this.current.parent) {\n\t      this.current.source.end = this.getPosition(token[2]);\n\t      this.current.source.end.offset++;\n\t      this.current = this.current.parent;\n\t    } else {\n\t      this.unexpectedClose(token);\n\t    }\n\t  }\n\n\t  endFile() {\n\t    if (this.current.parent) this.unclosedBlock();\n\t    if (this.current.nodes && this.current.nodes.length) {\n\t      this.current.raws.semicolon = this.semicolon;\n\t    }\n\t    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n\t    this.root.source.end = this.getPosition(this.tokenizer.position());\n\t  }\n\n\t  freeSemicolon(token) {\n\t    this.spaces += token[1];\n\t    if (this.current.nodes) {\n\t      let prev = this.current.nodes[this.current.nodes.length - 1];\n\t      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n\t        prev.raws.ownSemicolon = this.spaces;\n\t        this.spaces = '';\n\t        prev.source.end = this.getPosition(token[2]);\n\t        prev.source.end.offset += prev.raws.ownSemicolon.length;\n\t      }\n\t    }\n\t  }\n\n\t  // Helpers\n\n\t  getPosition(offset) {\n\t    let pos = this.input.fromOffset(offset);\n\t    return {\n\t      column: pos.col,\n\t      line: pos.line,\n\t      offset\n\t    }\n\t  }\n\n\t  init(node, offset) {\n\t    this.current.push(node);\n\t    node.source = {\n\t      input: this.input,\n\t      start: this.getPosition(offset)\n\t    };\n\t    node.raws.before = this.spaces;\n\t    this.spaces = '';\n\t    if (node.type !== 'comment') this.semicolon = false;\n\t  }\n\n\t  other(start) {\n\t    let end = false;\n\t    let type = null;\n\t    let colon = false;\n\t    let bracket = null;\n\t    let brackets = [];\n\t    let customProperty = start[1].startsWith('--');\n\n\t    let tokens = [];\n\t    let token = start;\n\t    while (token) {\n\t      type = token[0];\n\t      tokens.push(token);\n\n\t      if (type === '(' || type === '[') {\n\t        if (!bracket) bracket = token;\n\t        brackets.push(type === '(' ? ')' : ']');\n\t      } else if (customProperty && colon && type === '{') {\n\t        if (!bracket) bracket = token;\n\t        brackets.push('}');\n\t      } else if (brackets.length === 0) {\n\t        if (type === ';') {\n\t          if (colon) {\n\t            this.decl(tokens, customProperty);\n\t            return\n\t          } else {\n\t            break\n\t          }\n\t        } else if (type === '{') {\n\t          this.rule(tokens);\n\t          return\n\t        } else if (type === '}') {\n\t          this.tokenizer.back(tokens.pop());\n\t          end = true;\n\t          break\n\t        } else if (type === ':') {\n\t          colon = true;\n\t        }\n\t      } else if (type === brackets[brackets.length - 1]) {\n\t        brackets.pop();\n\t        if (brackets.length === 0) bracket = null;\n\t      }\n\n\t      token = this.tokenizer.nextToken();\n\t    }\n\n\t    if (this.tokenizer.endOfFile()) end = true;\n\t    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n\t    if (end && colon) {\n\t      if (!customProperty) {\n\t        while (tokens.length) {\n\t          token = tokens[tokens.length - 1][0];\n\t          if (token !== 'space' && token !== 'comment') break\n\t          this.tokenizer.back(tokens.pop());\n\t        }\n\t      }\n\t      this.decl(tokens, customProperty);\n\t    } else {\n\t      this.unknownWord(tokens);\n\t    }\n\t  }\n\n\t  parse() {\n\t    let token;\n\t    while (!this.tokenizer.endOfFile()) {\n\t      token = this.tokenizer.nextToken();\n\n\t      switch (token[0]) {\n\t        case 'space':\n\t          this.spaces += token[1];\n\t          break\n\n\t        case ';':\n\t          this.freeSemicolon(token);\n\t          break\n\n\t        case '}':\n\t          this.end(token);\n\t          break\n\n\t        case 'comment':\n\t          this.comment(token);\n\t          break\n\n\t        case 'at-word':\n\t          this.atrule(token);\n\t          break\n\n\t        case '{':\n\t          this.emptyRule(token);\n\t          break\n\n\t        default:\n\t          this.other(token);\n\t          break\n\t      }\n\t    }\n\t    this.endFile();\n\t  }\n\n\t  precheckMissedSemicolon(/* tokens */) {\n\t    // Hook for Safe Parser\n\t  }\n\n\t  raw(node, prop, tokens, customProperty) {\n\t    let token, type;\n\t    let length = tokens.length;\n\t    let value = '';\n\t    let clean = true;\n\t    let next, prev;\n\n\t    for (let i = 0; i < length; i += 1) {\n\t      token = tokens[i];\n\t      type = token[0];\n\t      if (type === 'space' && i === length - 1 && !customProperty) {\n\t        clean = false;\n\t      } else if (type === 'comment') {\n\t        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';\n\t        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';\n\t        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n\t          if (value.slice(-1) === ',') {\n\t            clean = false;\n\t          } else {\n\t            value += token[1];\n\t          }\n\t        } else {\n\t          clean = false;\n\t        }\n\t      } else {\n\t        value += token[1];\n\t      }\n\t    }\n\t    if (!clean) {\n\t      let raw = tokens.reduce((all, i) => all + i[1], '');\n\t      node.raws[prop] = { raw, value };\n\t    }\n\t    node[prop] = value;\n\t  }\n\n\t  rule(tokens) {\n\t    tokens.pop();\n\n\t    let node = new Rule();\n\t    this.init(node, tokens[0][2]);\n\n\t    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n\t    this.raw(node, 'selector', tokens);\n\t    this.current = node;\n\t  }\n\n\t  spacesAndCommentsFromEnd(tokens) {\n\t    let lastTokenType;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      lastTokenType = tokens[tokens.length - 1][0];\n\t      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n\t      spaces = tokens.pop()[1] + spaces;\n\t    }\n\t    return spaces\n\t  }\n\n\t  // Errors\n\n\t  spacesAndCommentsFromStart(tokens) {\n\t    let next;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      next = tokens[0][0];\n\t      if (next !== 'space' && next !== 'comment') break\n\t      spaces += tokens.shift()[1];\n\t    }\n\t    return spaces\n\t  }\n\n\t  spacesFromEnd(tokens) {\n\t    let lastTokenType;\n\t    let spaces = '';\n\t    while (tokens.length) {\n\t      lastTokenType = tokens[tokens.length - 1][0];\n\t      if (lastTokenType !== 'space') break\n\t      spaces = tokens.pop()[1] + spaces;\n\t    }\n\t    return spaces\n\t  }\n\n\t  stringFrom(tokens, from) {\n\t    let result = '';\n\t    for (let i = from; i < tokens.length; i++) {\n\t      result += tokens[i][1];\n\t    }\n\t    tokens.splice(from, tokens.length - from);\n\t    return result\n\t  }\n\n\t  unclosedBlock() {\n\t    let pos = this.current.source.start;\n\t    throw this.input.error('Unclosed block', pos.line, pos.column)\n\t  }\n\n\t  unclosedBracket(bracket) {\n\t    throw this.input.error(\n\t      'Unclosed bracket',\n\t      { offset: bracket[2] },\n\t      { offset: bracket[2] + 1 }\n\t    )\n\t  }\n\n\t  unexpectedClose(token) {\n\t    throw this.input.error(\n\t      'Unexpected }',\n\t      { offset: token[2] },\n\t      { offset: token[2] + 1 }\n\t    )\n\t  }\n\n\t  unknownWord(tokens) {\n\t    throw this.input.error(\n\t      'Unknown word ' + tokens[0][1],\n\t      { offset: tokens[0][2] },\n\t      { offset: tokens[0][2] + tokens[0][1].length }\n\t    )\n\t  }\n\n\t  unnamedAtrule(node, token) {\n\t    throw this.input.error(\n\t      'At-rule without name',\n\t      { offset: token[2] },\n\t      { offset: token[2] + token[1].length }\n\t    )\n\t  }\n\t}\n\n\tparser = Parser;\n\treturn parser;\n}\n\nvar parse_1;\nvar hasRequiredParse;\n\nfunction requireParse () {\n\tif (hasRequiredParse) return parse_1;\n\thasRequiredParse = 1;\n\n\tlet Container = requireContainer$1();\n\tlet Input = requireInput();\n\tlet Parser = requireParser();\n\n\tfunction parse(css, opts) {\n\t  let input = new Input(css, opts);\n\t  let parser = new Parser(input);\n\t  try {\n\t    parser.parse();\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n\t        if (/\\.scss$/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse SCSS with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-scss parser';\n\t        } else if (/\\.sass/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse Sass with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-sass parser';\n\t        } else if (/\\.less$/i.test(opts.from)) {\n\t          e.message +=\n\t            '\\nYou tried to parse Less with ' +\n\t            'the standard CSS parser; ' +\n\t            'try again with the postcss-less parser';\n\t        }\n\t      }\n\t    }\n\t    throw e\n\t  }\n\n\t  return parser.root\n\t}\n\n\tparse_1 = parse;\n\tparse.default = parse;\n\n\tContainer.registerParse(parse);\n\treturn parse_1;\n}\n\nvar warning;\nvar hasRequiredWarning;\n\nfunction requireWarning () {\n\tif (hasRequiredWarning) return warning;\n\thasRequiredWarning = 1;\n\n\tclass Warning {\n\t  constructor(text, opts = {}) {\n\t    this.type = 'warning';\n\t    this.text = text;\n\n\t    if (opts.node && opts.node.source) {\n\t      let range = opts.node.rangeBy(opts);\n\t      this.line = range.start.line;\n\t      this.column = range.start.column;\n\t      this.endLine = range.end.line;\n\t      this.endColumn = range.end.column;\n\t    }\n\n\t    for (let opt in opts) this[opt] = opts[opt];\n\t  }\n\n\t  toString() {\n\t    if (this.node) {\n\t      return this.node.error(this.text, {\n\t        index: this.index,\n\t        plugin: this.plugin,\n\t        word: this.word\n\t      }).message\n\t    }\n\n\t    if (this.plugin) {\n\t      return this.plugin + ': ' + this.text\n\t    }\n\n\t    return this.text\n\t  }\n\t}\n\n\twarning = Warning;\n\tWarning.default = Warning;\n\treturn warning;\n}\n\nvar result;\nvar hasRequiredResult;\n\nfunction requireResult () {\n\tif (hasRequiredResult) return result;\n\thasRequiredResult = 1;\n\n\tlet Warning = requireWarning();\n\n\tclass Result {\n\t  get content() {\n\t    return this.css\n\t  }\n\n\t  constructor(processor, root, opts) {\n\t    this.processor = processor;\n\t    this.messages = [];\n\t    this.root = root;\n\t    this.opts = opts;\n\t    this.css = '';\n\t    this.map = undefined;\n\t  }\n\n\t  toString() {\n\t    return this.css\n\t  }\n\n\t  warn(text, opts = {}) {\n\t    if (!opts.plugin) {\n\t      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n\t        opts.plugin = this.lastPlugin.postcssPlugin;\n\t      }\n\t    }\n\n\t    let warning = new Warning(text, opts);\n\t    this.messages.push(warning);\n\n\t    return warning\n\t  }\n\n\t  warnings() {\n\t    return this.messages.filter(i => i.type === 'warning')\n\t  }\n\t}\n\n\tresult = Result;\n\tResult.default = Result;\n\treturn result;\n}\n\n/* eslint-disable no-console */\n\nvar warnOnce;\nvar hasRequiredWarnOnce;\n\nfunction requireWarnOnce () {\n\tif (hasRequiredWarnOnce) return warnOnce;\n\thasRequiredWarnOnce = 1;\n\n\tlet printed = {};\n\n\twarnOnce = function warnOnce(message) {\n\t  if (printed[message]) return\n\t  printed[message] = true;\n\n\t  if (typeof console !== 'undefined' && console.warn) {\n\t    console.warn(message);\n\t  }\n\t};\n\treturn warnOnce;\n}\n\nvar lazyResult;\nvar hasRequiredLazyResult;\n\nfunction requireLazyResult () {\n\tif (hasRequiredLazyResult) return lazyResult;\n\thasRequiredLazyResult = 1;\n\n\tlet Container = requireContainer$1();\n\tlet Document = requireDocument();\n\tlet MapGenerator = requireMapGenerator();\n\tlet parse = requireParse();\n\tlet Result = requireResult();\n\tlet Root = requireRoot();\n\tlet stringify = requireStringify();\n\tlet { isClean, my } = requireSymbols();\n\tlet warnOnce = requireWarnOnce();\n\n\tconst TYPE_TO_CLASS_NAME = {\n\t  atrule: 'AtRule',\n\t  comment: 'Comment',\n\t  decl: 'Declaration',\n\t  document: 'Document',\n\t  root: 'Root',\n\t  rule: 'Rule'\n\t};\n\n\tconst PLUGIN_PROPS = {\n\t  AtRule: true,\n\t  AtRuleExit: true,\n\t  Comment: true,\n\t  CommentExit: true,\n\t  Declaration: true,\n\t  DeclarationExit: true,\n\t  Document: true,\n\t  DocumentExit: true,\n\t  Once: true,\n\t  OnceExit: true,\n\t  postcssPlugin: true,\n\t  prepare: true,\n\t  Root: true,\n\t  RootExit: true,\n\t  Rule: true,\n\t  RuleExit: true\n\t};\n\n\tconst NOT_VISITORS = {\n\t  Once: true,\n\t  postcssPlugin: true,\n\t  prepare: true\n\t};\n\n\tconst CHILDREN = 0;\n\n\tfunction isPromise(obj) {\n\t  return typeof obj === 'object' && typeof obj.then === 'function'\n\t}\n\n\tfunction getEvents(node) {\n\t  let key = false;\n\t  let type = TYPE_TO_CLASS_NAME[node.type];\n\t  if (node.type === 'decl') {\n\t    key = node.prop.toLowerCase();\n\t  } else if (node.type === 'atrule') {\n\t    key = node.name.toLowerCase();\n\t  }\n\n\t  if (key && node.append) {\n\t    return [\n\t      type,\n\t      type + '-' + key,\n\t      CHILDREN,\n\t      type + 'Exit',\n\t      type + 'Exit-' + key\n\t    ]\n\t  } else if (key) {\n\t    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n\t  } else if (node.append) {\n\t    return [type, CHILDREN, type + 'Exit']\n\t  } else {\n\t    return [type, type + 'Exit']\n\t  }\n\t}\n\n\tfunction toStack(node) {\n\t  let events;\n\t  if (node.type === 'document') {\n\t    events = ['Document', CHILDREN, 'DocumentExit'];\n\t  } else if (node.type === 'root') {\n\t    events = ['Root', CHILDREN, 'RootExit'];\n\t  } else {\n\t    events = getEvents(node);\n\t  }\n\n\t  return {\n\t    eventIndex: 0,\n\t    events,\n\t    iterator: 0,\n\t    node,\n\t    visitorIndex: 0,\n\t    visitors: []\n\t  }\n\t}\n\n\tfunction cleanMarks(node) {\n\t  node[isClean] = false;\n\t  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n\t  return node\n\t}\n\n\tlet postcss = {};\n\n\tclass LazyResult {\n\t  get content() {\n\t    return this.stringify().content\n\t  }\n\n\t  get css() {\n\t    return this.stringify().css\n\t  }\n\n\t  get map() {\n\t    return this.stringify().map\n\t  }\n\n\t  get messages() {\n\t    return this.sync().messages\n\t  }\n\n\t  get opts() {\n\t    return this.result.opts\n\t  }\n\n\t  get processor() {\n\t    return this.result.processor\n\t  }\n\n\t  get root() {\n\t    return this.sync().root\n\t  }\n\n\t  get [Symbol.toStringTag]() {\n\t    return 'LazyResult'\n\t  }\n\n\t  constructor(processor, css, opts) {\n\t    this.stringified = false;\n\t    this.processed = false;\n\n\t    let root;\n\t    if (\n\t      typeof css === 'object' &&\n\t      css !== null &&\n\t      (css.type === 'root' || css.type === 'document')\n\t    ) {\n\t      root = cleanMarks(css);\n\t    } else if (css instanceof LazyResult || css instanceof Result) {\n\t      root = cleanMarks(css.root);\n\t      if (css.map) {\n\t        if (typeof opts.map === 'undefined') opts.map = {};\n\t        if (!opts.map.inline) opts.map.inline = false;\n\t        opts.map.prev = css.map;\n\t      }\n\t    } else {\n\t      let parser = parse;\n\t      if (opts.syntax) parser = opts.syntax.parse;\n\t      if (opts.parser) parser = opts.parser;\n\t      if (parser.parse) parser = parser.parse;\n\n\t      try {\n\t        root = parser(css, opts);\n\t      } catch (error) {\n\t        this.processed = true;\n\t        this.error = error;\n\t      }\n\n\t      if (root && !root[my]) {\n\t        /* c8 ignore next 2 */\n\t        Container.rebuild(root);\n\t      }\n\t    }\n\n\t    this.result = new Result(processor, root, opts);\n\t    this.helpers = { ...postcss, postcss, result: this.result };\n\t    this.plugins = this.processor.plugins.map(plugin => {\n\t      if (typeof plugin === 'object' && plugin.prepare) {\n\t        return { ...plugin, ...plugin.prepare(this.result) }\n\t      } else {\n\t        return plugin\n\t      }\n\t    });\n\t  }\n\n\t  async() {\n\t    if (this.error) return Promise.reject(this.error)\n\t    if (this.processed) return Promise.resolve(this.result)\n\t    if (!this.processing) {\n\t      this.processing = this.runAsync();\n\t    }\n\t    return this.processing\n\t  }\n\n\t  catch(onRejected) {\n\t    return this.async().catch(onRejected)\n\t  }\n\n\t  finally(onFinally) {\n\t    return this.async().then(onFinally, onFinally)\n\t  }\n\n\t  getAsyncError() {\n\t    throw new Error('Use process(css).then(cb) to work with async plugins')\n\t  }\n\n\t  handleError(error, node) {\n\t    let plugin = this.result.lastPlugin;\n\t    try {\n\t      if (node) node.addToError(error);\n\t      this.error = error;\n\t      if (error.name === 'CssSyntaxError' && !error.plugin) {\n\t        error.plugin = plugin.postcssPlugin;\n\t        error.setMessage();\n\t      } else if (plugin.postcssVersion) {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          let pluginName = plugin.postcssPlugin;\n\t          let pluginVer = plugin.postcssVersion;\n\t          let runtimeVer = this.result.processor.version;\n\t          let a = pluginVer.split('.');\n\t          let b = runtimeVer.split('.');\n\n\t          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n\t            // eslint-disable-next-line no-console\n\t            console.error(\n\t              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n\t                'version is ' +\n\t                runtimeVer +\n\t                ', but ' +\n\t                pluginName +\n\t                ' uses ' +\n\t                pluginVer +\n\t                '. Perhaps this is the source of the error below.'\n\t            );\n\t          }\n\t        }\n\t      }\n\t    } catch (err) {\n\t      /* c8 ignore next 3 */\n\t      // eslint-disable-next-line no-console\n\t      if (console && console.error) console.error(err);\n\t    }\n\t    return error\n\t  }\n\n\t  prepareVisitors() {\n\t    this.listeners = {};\n\t    let add = (plugin, type, cb) => {\n\t      if (!this.listeners[type]) this.listeners[type] = [];\n\t      this.listeners[type].push([plugin, cb]);\n\t    };\n\t    for (let plugin of this.plugins) {\n\t      if (typeof plugin === 'object') {\n\t        for (let event in plugin) {\n\t          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n\t            throw new Error(\n\t              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n\t                `Try to update PostCSS (${this.processor.version} now).`\n\t            )\n\t          }\n\t          if (!NOT_VISITORS[event]) {\n\t            if (typeof plugin[event] === 'object') {\n\t              for (let filter in plugin[event]) {\n\t                if (filter === '*') {\n\t                  add(plugin, event, plugin[event][filter]);\n\t                } else {\n\t                  add(\n\t                    plugin,\n\t                    event + '-' + filter.toLowerCase(),\n\t                    plugin[event][filter]\n\t                  );\n\t                }\n\t              }\n\t            } else if (typeof plugin[event] === 'function') {\n\t              add(plugin, event, plugin[event]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    this.hasListener = Object.keys(this.listeners).length > 0;\n\t  }\n\n\t  async runAsync() {\n\t    this.plugin = 0;\n\t    for (let i = 0; i < this.plugins.length; i++) {\n\t      let plugin = this.plugins[i];\n\t      let promise = this.runOnRoot(plugin);\n\t      if (isPromise(promise)) {\n\t        try {\n\t          await promise;\n\t        } catch (error) {\n\t          throw this.handleError(error)\n\t        }\n\t      }\n\t    }\n\n\t    this.prepareVisitors();\n\t    if (this.hasListener) {\n\t      let root = this.result.root;\n\t      while (!root[isClean]) {\n\t        root[isClean] = true;\n\t        let stack = [toStack(root)];\n\t        while (stack.length > 0) {\n\t          let promise = this.visitTick(stack);\n\t          if (isPromise(promise)) {\n\t            try {\n\t              await promise;\n\t            } catch (e) {\n\t              let node = stack[stack.length - 1].node;\n\t              throw this.handleError(e, node)\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      if (this.listeners.OnceExit) {\n\t        for (let [plugin, visitor] of this.listeners.OnceExit) {\n\t          this.result.lastPlugin = plugin;\n\t          try {\n\t            if (root.type === 'document') {\n\t              let roots = root.nodes.map(subRoot =>\n\t                visitor(subRoot, this.helpers)\n\t              );\n\n\t              await Promise.all(roots);\n\t            } else {\n\t              await visitor(root, this.helpers);\n\t            }\n\t          } catch (e) {\n\t            throw this.handleError(e)\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    this.processed = true;\n\t    return this.stringify()\n\t  }\n\n\t  runOnRoot(plugin) {\n\t    this.result.lastPlugin = plugin;\n\t    try {\n\t      if (typeof plugin === 'object' && plugin.Once) {\n\t        if (this.result.root.type === 'document') {\n\t          let roots = this.result.root.nodes.map(root =>\n\t            plugin.Once(root, this.helpers)\n\t          );\n\n\t          if (isPromise(roots[0])) {\n\t            return Promise.all(roots)\n\t          }\n\n\t          return roots\n\t        }\n\n\t        return plugin.Once(this.result.root, this.helpers)\n\t      } else if (typeof plugin === 'function') {\n\t        return plugin(this.result.root, this.result)\n\t      }\n\t    } catch (error) {\n\t      throw this.handleError(error)\n\t    }\n\t  }\n\n\t  stringify() {\n\t    if (this.error) throw this.error\n\t    if (this.stringified) return this.result\n\t    this.stringified = true;\n\n\t    this.sync();\n\n\t    let opts = this.result.opts;\n\t    let str = stringify;\n\t    if (opts.syntax) str = opts.syntax.stringify;\n\t    if (opts.stringifier) str = opts.stringifier;\n\t    if (str.stringify) str = str.stringify;\n\n\t    let map = new MapGenerator(str, this.result.root, this.result.opts);\n\t    let data = map.generate();\n\t    this.result.css = data[0];\n\t    this.result.map = data[1];\n\n\t    return this.result\n\t  }\n\n\t  sync() {\n\t    if (this.error) throw this.error\n\t    if (this.processed) return this.result\n\t    this.processed = true;\n\n\t    if (this.processing) {\n\t      throw this.getAsyncError()\n\t    }\n\n\t    for (let plugin of this.plugins) {\n\t      let promise = this.runOnRoot(plugin);\n\t      if (isPromise(promise)) {\n\t        throw this.getAsyncError()\n\t      }\n\t    }\n\n\t    this.prepareVisitors();\n\t    if (this.hasListener) {\n\t      let root = this.result.root;\n\t      while (!root[isClean]) {\n\t        root[isClean] = true;\n\t        this.walkSync(root);\n\t      }\n\t      if (this.listeners.OnceExit) {\n\t        if (root.type === 'document') {\n\t          for (let subRoot of root.nodes) {\n\t            this.visitSync(this.listeners.OnceExit, subRoot);\n\t          }\n\t        } else {\n\t          this.visitSync(this.listeners.OnceExit, root);\n\t        }\n\t      }\n\t    }\n\n\t    return this.result\n\t  }\n\n\t  then(onFulfilled, onRejected) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!('from' in this.opts)) {\n\t        warnOnce(\n\t          'Without `from` option PostCSS could generate wrong source map ' +\n\t            'and will not find Browserslist config. Set it to CSS file path ' +\n\t            'or to `undefined` to prevent this warning.'\n\t        );\n\t      }\n\t    }\n\t    return this.async().then(onFulfilled, onRejected)\n\t  }\n\n\t  toString() {\n\t    return this.css\n\t  }\n\n\t  visitSync(visitors, node) {\n\t    for (let [plugin, visitor] of visitors) {\n\t      this.result.lastPlugin = plugin;\n\t      let promise;\n\t      try {\n\t        promise = visitor(node, this.helpers);\n\t      } catch (e) {\n\t        throw this.handleError(e, node.proxyOf)\n\t      }\n\t      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n\t        return true\n\t      }\n\t      if (isPromise(promise)) {\n\t        throw this.getAsyncError()\n\t      }\n\t    }\n\t  }\n\n\t  visitTick(stack) {\n\t    let visit = stack[stack.length - 1];\n\t    let { node, visitors } = visit;\n\n\t    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n\t      stack.pop();\n\t      return\n\t    }\n\n\t    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n\t      let [plugin, visitor] = visitors[visit.visitorIndex];\n\t      visit.visitorIndex += 1;\n\t      if (visit.visitorIndex === visitors.length) {\n\t        visit.visitors = [];\n\t        visit.visitorIndex = 0;\n\t      }\n\t      this.result.lastPlugin = plugin;\n\t      try {\n\t        return visitor(node.toProxy(), this.helpers)\n\t      } catch (e) {\n\t        throw this.handleError(e, node)\n\t      }\n\t    }\n\n\t    if (visit.iterator !== 0) {\n\t      let iterator = visit.iterator;\n\t      let child;\n\t      while ((child = node.nodes[node.indexes[iterator]])) {\n\t        node.indexes[iterator] += 1;\n\t        if (!child[isClean]) {\n\t          child[isClean] = true;\n\t          stack.push(toStack(child));\n\t          return\n\t        }\n\t      }\n\t      visit.iterator = 0;\n\t      delete node.indexes[iterator];\n\t    }\n\n\t    let events = visit.events;\n\t    while (visit.eventIndex < events.length) {\n\t      let event = events[visit.eventIndex];\n\t      visit.eventIndex += 1;\n\t      if (event === CHILDREN) {\n\t        if (node.nodes && node.nodes.length) {\n\t          node[isClean] = true;\n\t          visit.iterator = node.getIterator();\n\t        }\n\t        return\n\t      } else if (this.listeners[event]) {\n\t        visit.visitors = this.listeners[event];\n\t        return\n\t      }\n\t    }\n\t    stack.pop();\n\t  }\n\n\t  walkSync(node) {\n\t    node[isClean] = true;\n\t    let events = getEvents(node);\n\t    for (let event of events) {\n\t      if (event === CHILDREN) {\n\t        if (node.nodes) {\n\t          node.each(child => {\n\t            if (!child[isClean]) this.walkSync(child);\n\t          });\n\t        }\n\t      } else {\n\t        let visitors = this.listeners[event];\n\t        if (visitors) {\n\t          if (this.visitSync(visitors, node.toProxy())) return\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  warnings() {\n\t    return this.sync().warnings()\n\t  }\n\t}\n\n\tLazyResult.registerPostcss = dependant => {\n\t  postcss = dependant;\n\t};\n\n\tlazyResult = LazyResult;\n\tLazyResult.default = LazyResult;\n\n\tRoot.registerLazyResult(LazyResult);\n\tDocument.registerLazyResult(LazyResult);\n\treturn lazyResult;\n}\n\nvar noWorkResult;\nvar hasRequiredNoWorkResult;\n\nfunction requireNoWorkResult () {\n\tif (hasRequiredNoWorkResult) return noWorkResult;\n\thasRequiredNoWorkResult = 1;\n\n\tlet MapGenerator = requireMapGenerator();\n\tlet parse = requireParse();\n\tconst Result = requireResult();\n\tlet stringify = requireStringify();\n\tlet warnOnce = requireWarnOnce();\n\n\tclass NoWorkResult {\n\t  get content() {\n\t    return this.result.css\n\t  }\n\n\t  get css() {\n\t    return this.result.css\n\t  }\n\n\t  get map() {\n\t    return this.result.map\n\t  }\n\n\t  get messages() {\n\t    return []\n\t  }\n\n\t  get opts() {\n\t    return this.result.opts\n\t  }\n\n\t  get processor() {\n\t    return this.result.processor\n\t  }\n\n\t  get root() {\n\t    if (this._root) {\n\t      return this._root\n\t    }\n\n\t    let root;\n\t    let parser = parse;\n\n\t    try {\n\t      root = parser(this._css, this._opts);\n\t    } catch (error) {\n\t      this.error = error;\n\t    }\n\n\t    if (this.error) {\n\t      throw this.error\n\t    } else {\n\t      this._root = root;\n\t      return root\n\t    }\n\t  }\n\n\t  get [Symbol.toStringTag]() {\n\t    return 'NoWorkResult'\n\t  }\n\n\t  constructor(processor, css, opts) {\n\t    css = css.toString();\n\t    this.stringified = false;\n\n\t    this._processor = processor;\n\t    this._css = css;\n\t    this._opts = opts;\n\t    this._map = undefined;\n\t    let root;\n\n\t    let str = stringify;\n\t    this.result = new Result(this._processor, root, this._opts);\n\t    this.result.css = css;\n\n\t    let self = this;\n\t    Object.defineProperty(this.result, 'root', {\n\t      get() {\n\t        return self.root\n\t      }\n\t    });\n\n\t    let map = new MapGenerator(str, root, this._opts, css);\n\t    if (map.isMap()) {\n\t      let [generatedCSS, generatedMap] = map.generate();\n\t      if (generatedCSS) {\n\t        this.result.css = generatedCSS;\n\t      }\n\t      if (generatedMap) {\n\t        this.result.map = generatedMap;\n\t      }\n\t    } else {\n\t      map.clearAnnotation();\n\t      this.result.css = map.css;\n\t    }\n\t  }\n\n\t  async() {\n\t    if (this.error) return Promise.reject(this.error)\n\t    return Promise.resolve(this.result)\n\t  }\n\n\t  catch(onRejected) {\n\t    return this.async().catch(onRejected)\n\t  }\n\n\t  finally(onFinally) {\n\t    return this.async().then(onFinally, onFinally)\n\t  }\n\n\t  sync() {\n\t    if (this.error) throw this.error\n\t    return this.result\n\t  }\n\n\t  then(onFulfilled, onRejected) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!('from' in this._opts)) {\n\t        warnOnce(\n\t          'Without `from` option PostCSS could generate wrong source map ' +\n\t            'and will not find Browserslist config. Set it to CSS file path ' +\n\t            'or to `undefined` to prevent this warning.'\n\t        );\n\t      }\n\t    }\n\n\t    return this.async().then(onFulfilled, onRejected)\n\t  }\n\n\t  toString() {\n\t    return this._css\n\t  }\n\n\t  warnings() {\n\t    return []\n\t  }\n\t}\n\n\tnoWorkResult = NoWorkResult;\n\tNoWorkResult.default = NoWorkResult;\n\treturn noWorkResult;\n}\n\nvar processor;\nvar hasRequiredProcessor;\n\nfunction requireProcessor () {\n\tif (hasRequiredProcessor) return processor;\n\thasRequiredProcessor = 1;\n\n\tlet Document = requireDocument();\n\tlet LazyResult = requireLazyResult();\n\tlet NoWorkResult = requireNoWorkResult();\n\tlet Root = requireRoot();\n\n\tclass Processor {\n\t  constructor(plugins = []) {\n\t    this.version = '8.5.6';\n\t    this.plugins = this.normalize(plugins);\n\t  }\n\n\t  normalize(plugins) {\n\t    let normalized = [];\n\t    for (let i of plugins) {\n\t      if (i.postcss === true) {\n\t        i = i();\n\t      } else if (i.postcss) {\n\t        i = i.postcss;\n\t      }\n\n\t      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n\t        normalized = normalized.concat(i.plugins);\n\t      } else if (typeof i === 'object' && i.postcssPlugin) {\n\t        normalized.push(i);\n\t      } else if (typeof i === 'function') {\n\t        normalized.push(i);\n\t      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          throw new Error(\n\t            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n\t              'one of the syntax/parser/stringifier options as outlined ' +\n\t              'in your PostCSS runner documentation.'\n\t          )\n\t        }\n\t      } else {\n\t        throw new Error(i + ' is not a PostCSS plugin')\n\t      }\n\t    }\n\t    return normalized\n\t  }\n\n\t  process(css, opts = {}) {\n\t    if (\n\t      !this.plugins.length &&\n\t      !opts.parser &&\n\t      !opts.stringifier &&\n\t      !opts.syntax\n\t    ) {\n\t      return new NoWorkResult(this, css, opts)\n\t    } else {\n\t      return new LazyResult(this, css, opts)\n\t    }\n\t  }\n\n\t  use(plugin) {\n\t    this.plugins = this.plugins.concat(this.normalize([plugin]));\n\t    return this\n\t  }\n\t}\n\n\tprocessor = Processor;\n\tProcessor.default = Processor;\n\n\tRoot.registerProcessor(Processor);\n\tDocument.registerProcessor(Processor);\n\treturn processor;\n}\n\nvar postcss_1;\nvar hasRequiredPostcss;\n\nfunction requirePostcss () {\n\tif (hasRequiredPostcss) return postcss_1;\n\thasRequiredPostcss = 1;\n\n\tlet AtRule = requireAtRule();\n\tlet Comment = requireComment();\n\tlet Container = requireContainer$1();\n\tlet CssSyntaxError = requireCssSyntaxError();\n\tlet Declaration = requireDeclaration();\n\tlet Document = requireDocument();\n\tlet fromJSON = requireFromJSON();\n\tlet Input = requireInput();\n\tlet LazyResult = requireLazyResult();\n\tlet list = requireList();\n\tlet Node = requireNode$1();\n\tlet parse = requireParse();\n\tlet Processor = requireProcessor();\n\tlet Result = requireResult();\n\tlet Root = requireRoot();\n\tlet Rule = requireRule();\n\tlet stringify = requireStringify();\n\tlet Warning = requireWarning();\n\n\tfunction postcss(...plugins) {\n\t  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n\t    plugins = plugins[0];\n\t  }\n\t  return new Processor(plugins)\n\t}\n\n\tpostcss.plugin = function plugin(name, initializer) {\n\t  let warningPrinted = false;\n\t  function creator(...args) {\n\t    // eslint-disable-next-line no-console\n\t    if (console && console.warn && !warningPrinted) {\n\t      warningPrinted = true;\n\t      // eslint-disable-next-line no-console\n\t      console.warn(\n\t        name +\n\t          ': postcss.plugin was deprecated. Migration guide:\\n' +\n\t          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n\t      );\n\t      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n\t        /* c8 ignore next 7 */\n\t        // eslint-disable-next-line no-console\n\t        console.warn(\n\t          name +\n\t            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n\t            'https://www.w3ctech.com/topic/2226'\n\t        );\n\t      }\n\t    }\n\t    let transformer = initializer(...args);\n\t    transformer.postcssPlugin = name;\n\t    transformer.postcssVersion = new Processor().version;\n\t    return transformer\n\t  }\n\n\t  let cache;\n\t  Object.defineProperty(creator, 'postcss', {\n\t    get() {\n\t      if (!cache) cache = creator();\n\t      return cache\n\t    }\n\t  });\n\n\t  creator.process = function (css, processOpts, pluginOpts) {\n\t    return postcss([creator(pluginOpts)]).process(css, processOpts)\n\t  };\n\n\t  return creator\n\t};\n\n\tpostcss.stringify = stringify;\n\tpostcss.parse = parse;\n\tpostcss.fromJSON = fromJSON;\n\tpostcss.list = list;\n\n\tpostcss.comment = defaults => new Comment(defaults);\n\tpostcss.atRule = defaults => new AtRule(defaults);\n\tpostcss.decl = defaults => new Declaration(defaults);\n\tpostcss.rule = defaults => new Rule(defaults);\n\tpostcss.root = defaults => new Root(defaults);\n\tpostcss.document = defaults => new Document(defaults);\n\n\tpostcss.CssSyntaxError = CssSyntaxError;\n\tpostcss.Declaration = Declaration;\n\tpostcss.Container = Container;\n\tpostcss.Processor = Processor;\n\tpostcss.Document = Document;\n\tpostcss.Comment = Comment;\n\tpostcss.Warning = Warning;\n\tpostcss.AtRule = AtRule;\n\tpostcss.Result = Result;\n\tpostcss.Input = Input;\n\tpostcss.Rule = Rule;\n\tpostcss.Root = Root;\n\tpostcss.Node = Node;\n\n\tLazyResult.registerPostcss(postcss);\n\n\tpostcss_1 = postcss;\n\tpostcss.default = postcss;\n\treturn postcss_1;\n}\n\nvar postcssExports = requirePostcss();\nvar postcss = /*@__PURE__*/getDefaultExportFromCjs(postcssExports);\n\nconst stringify = postcss.stringify;\npostcss.fromJSON;\npostcss.plugin;\nconst parse$2 = postcss.parse;\npostcss.list;\n\npostcss.document;\npostcss.comment;\npostcss.atRule;\npostcss.rule;\npostcss.decl;\npostcss.root;\n\npostcss.CssSyntaxError;\npostcss.Declaration;\npostcss.Container;\npostcss.Processor;\npostcss.Document;\npostcss.Comment;\npostcss.Warning;\npostcss.AtRule;\npostcss.Result;\npostcss.Input;\npostcss.Rule;\npostcss.Root;\npostcss.Node;\n\nvar dist = {};\n\nvar Container = {};\n\nvar Node$1 = {};\n\nvar hasRequiredNode;\n\nfunction requireNode () {\n\tif (hasRequiredNode) return Node$1;\n\thasRequiredNode = 1;\n\n\tObject.defineProperty(Node$1, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\r\n\t * A very generic node. Pretty much any element of a media query\r\n\t */\n\n\tfunction Node(opts) {\n\t  this.after = opts.after;\n\t  this.before = opts.before;\n\t  this.type = opts.type;\n\t  this.value = opts.value;\n\t  this.sourceIndex = opts.sourceIndex;\n\t}\n\n\tNode$1.default = Node;\n\treturn Node$1;\n}\n\nvar hasRequiredContainer;\n\nfunction requireContainer () {\n\tif (hasRequiredContainer) return Container;\n\thasRequiredContainer = 1;\n\n\tObject.defineProperty(Container, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Node = requireNode();\n\n\tvar _Node2 = _interopRequireDefault(_Node);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction Container$1(opts) {\n\t  var _this = this;\n\n\t  this.constructor(opts);\n\n\t  this.nodes = opts.nodes;\n\n\t  if (this.after === undefined) {\n\t    this.after = this.nodes.length > 0 ? this.nodes[this.nodes.length - 1].after : '';\n\t  }\n\n\t  if (this.before === undefined) {\n\t    this.before = this.nodes.length > 0 ? this.nodes[0].before : '';\n\t  }\n\n\t  if (this.sourceIndex === undefined) {\n\t    this.sourceIndex = this.before.length;\n\t  }\n\n\t  this.nodes.forEach(function (node) {\n\t    node.parent = _this; // eslint-disable-line no-param-reassign\n\t  });\n\t} /**\r\n\t   * A node that contains other nodes and support traversing over them\r\n\t   */\n\n\tContainer$1.prototype = Object.create(_Node2.default.prototype);\n\tContainer$1.constructor = _Node2.default;\n\n\t/**\r\n\t * Iterate over descendant nodes of the node\r\n\t *\r\n\t * @param {RegExp|string} filter - Optional. Only nodes with node.type that\r\n\t *    satisfies the filter will be traversed over\r\n\t * @param {function} cb - callback to call on each node. Takes theese params:\r\n\t *    node - the node being processed, i - it's index, nodes - the array\r\n\t *    of all nodes\r\n\t *    If false is returned, the iteration breaks\r\n\t *\r\n\t * @return (boolean) false, if the iteration was broken\r\n\t */\n\tContainer$1.prototype.walk = function walk(filter, cb) {\n\t  var hasFilter = typeof filter === 'string' || filter instanceof RegExp;\n\t  var callback = hasFilter ? cb : filter;\n\t  var filterReg = typeof filter === 'string' ? new RegExp(filter) : filter;\n\n\t  for (var i = 0; i < this.nodes.length; i++) {\n\t    var node = this.nodes[i];\n\t    var filtered = hasFilter ? filterReg.test(node.type) : true;\n\t    if (filtered && callback && callback(node, i, this.nodes) === false) {\n\t      return false;\n\t    }\n\t    if (node.nodes && node.walk(filter, cb) === false) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\t/**\r\n\t * Iterate over immediate children of the node\r\n\t *\r\n\t * @param {function} cb - callback to call on each node. Takes theese params:\r\n\t *    node - the node being processed, i - it's index, nodes - the array\r\n\t *    of all nodes\r\n\t *    If false is returned, the iteration breaks\r\n\t *\r\n\t * @return (boolean) false, if the iteration was broken\r\n\t */\n\tContainer$1.prototype.each = function each() {\n\t  var cb = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\n\t  for (var i = 0; i < this.nodes.length; i++) {\n\t    var node = this.nodes[i];\n\t    if (cb(node, i, this.nodes) === false) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t};\n\n\tContainer.default = Container$1;\n\treturn Container;\n}\n\nvar parsers = {};\n\nvar hasRequiredParsers;\n\nfunction requireParsers () {\n\tif (hasRequiredParsers) return parsers;\n\thasRequiredParsers = 1;\n\n\tObject.defineProperty(parsers, \"__esModule\", {\n\t  value: true\n\t});\n\tparsers.parseMediaFeature = parseMediaFeature;\n\tparsers.parseMediaQuery = parseMediaQuery;\n\tparsers.parseMediaList = parseMediaList;\n\n\tvar _Node = requireNode();\n\n\tvar _Node2 = _interopRequireDefault(_Node);\n\n\tvar _Container = requireContainer();\n\n\tvar _Container2 = _interopRequireDefault(_Container);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t/**\r\n\t * Parses a media feature expression, e.g. `max-width: 10px`, `(color)`\r\n\t *\r\n\t * @param {string} string - the source expression string, can be inside parens\r\n\t * @param {Number} index - the index of `string` in the overall input\r\n\t *\r\n\t * @return {Array} an array of Nodes, the first element being a media feature,\r\n\t *    the secont - its value (may be missing)\r\n\t */\n\n\tfunction parseMediaFeature(string) {\n\t  var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\t  var modesEntered = [{\n\t    mode: 'normal',\n\t    character: null\n\t  }];\n\t  var result = [];\n\t  var lastModeIndex = 0;\n\t  var mediaFeature = '';\n\t  var colon = null;\n\t  var mediaFeatureValue = null;\n\t  var indexLocal = index;\n\n\t  var stringNormalized = string;\n\t  // Strip trailing parens (if any), and correct the starting index\n\t  if (string[0] === '(' && string[string.length - 1] === ')') {\n\t    stringNormalized = string.substring(1, string.length - 1);\n\t    indexLocal++;\n\t  }\n\n\t  for (var i = 0; i < stringNormalized.length; i++) {\n\t    var character = stringNormalized[i];\n\n\t    // If entering/exiting a string\n\t    if (character === '\\'' || character === '\"') {\n\t      if (modesEntered[lastModeIndex].isCalculationEnabled === true) {\n\t        modesEntered.push({\n\t          mode: 'string',\n\t          isCalculationEnabled: false,\n\t          character: character\n\t        });\n\t        lastModeIndex++;\n\t      } else if (modesEntered[lastModeIndex].mode === 'string' && modesEntered[lastModeIndex].character === character && stringNormalized[i - 1] !== '\\\\') {\n\t        modesEntered.pop();\n\t        lastModeIndex--;\n\t      }\n\t    }\n\n\t    // If entering/exiting interpolation\n\t    if (character === '{') {\n\t      modesEntered.push({\n\t        mode: 'interpolation',\n\t        isCalculationEnabled: true\n\t      });\n\t      lastModeIndex++;\n\t    } else if (character === '}') {\n\t      modesEntered.pop();\n\t      lastModeIndex--;\n\t    }\n\n\t    // If a : is met outside of a string, function call or interpolation, than\n\t    // this : separates a media feature and a value\n\t    if (modesEntered[lastModeIndex].mode === 'normal' && character === ':') {\n\t      var mediaFeatureValueStr = stringNormalized.substring(i + 1);\n\t      mediaFeatureValue = {\n\t        type: 'value',\n\t        before: /^(\\s*)/.exec(mediaFeatureValueStr)[1],\n\t        after: /(\\s*)$/.exec(mediaFeatureValueStr)[1],\n\t        value: mediaFeatureValueStr.trim()\n\t      };\n\t      // +1 for the colon\n\t      mediaFeatureValue.sourceIndex = mediaFeatureValue.before.length + i + 1 + indexLocal;\n\t      colon = {\n\t        type: 'colon',\n\t        sourceIndex: i + indexLocal,\n\t        after: mediaFeatureValue.before,\n\t        value: ':' };\n\t      break;\n\t    }\n\n\t    mediaFeature += character;\n\t  }\n\n\t  // Forming a media feature node\n\t  mediaFeature = {\n\t    type: 'media-feature',\n\t    before: /^(\\s*)/.exec(mediaFeature)[1],\n\t    after: /(\\s*)$/.exec(mediaFeature)[1],\n\t    value: mediaFeature.trim()\n\t  };\n\t  mediaFeature.sourceIndex = mediaFeature.before.length + indexLocal;\n\t  result.push(mediaFeature);\n\n\t  if (colon !== null) {\n\t    colon.before = mediaFeature.after;\n\t    result.push(colon);\n\t  }\n\n\t  if (mediaFeatureValue !== null) {\n\t    result.push(mediaFeatureValue);\n\t  }\n\n\t  return result;\n\t}\n\n\t/**\r\n\t * Parses a media query, e.g. `screen and (color)`, `only tv`\r\n\t *\r\n\t * @param {string} string - the source media query string\r\n\t * @param {Number} index - the index of `string` in the overall input\r\n\t *\r\n\t * @return {Array} an array of Nodes and Containers\r\n\t */\n\n\tfunction parseMediaQuery(string) {\n\t  var index = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\t  var result = [];\n\n\t  // How many timies the parser entered parens/curly braces\n\t  var localLevel = 0;\n\t  // Has any keyword, media type, media feature expression or interpolation\n\t  // ('element' hereafter) started\n\t  var insideSomeValue = false;\n\t  var node = void 0;\n\n\t  function resetNode() {\n\t    return {\n\t      before: '',\n\t      after: '',\n\t      value: ''\n\t    };\n\t  }\n\n\t  node = resetNode();\n\n\t  for (var i = 0; i < string.length; i++) {\n\t    var character = string[i];\n\t    // If not yet entered any element\n\t    if (!insideSomeValue) {\n\t      if (character.search(/\\s/) !== -1) {\n\t        // A whitespace\n\t        // Don't form 'after' yet; will do it later\n\t        node.before += character;\n\t      } else {\n\t        // Not a whitespace - entering an element\n\t        // Expression start\n\t        if (character === '(') {\n\t          node.type = 'media-feature-expression';\n\t          localLevel++;\n\t        }\n\t        node.value = character;\n\t        node.sourceIndex = index + i;\n\t        insideSomeValue = true;\n\t      }\n\t    } else {\n\t      // Already in the middle of some alement\n\t      node.value += character;\n\n\t      // Here parens just increase localLevel and don't trigger a start of\n\t      // a media feature expression (since they can't be nested)\n\t      // Interpolation start\n\t      if (character === '{' || character === '(') {\n\t        localLevel++;\n\t      }\n\t      // Interpolation/function call/media feature expression end\n\t      if (character === ')' || character === '}') {\n\t        localLevel--;\n\t      }\n\t    }\n\n\t    // If exited all parens/curlies and the next symbol\n\t    if (insideSomeValue && localLevel === 0 && (character === ')' || i === string.length - 1 || string[i + 1].search(/\\s/) !== -1)) {\n\t      if (['not', 'only', 'and'].indexOf(node.value) !== -1) {\n\t        node.type = 'keyword';\n\t      }\n\t      // if it's an expression, parse its contents\n\t      if (node.type === 'media-feature-expression') {\n\t        node.nodes = parseMediaFeature(node.value, node.sourceIndex);\n\t      }\n\t      result.push(Array.isArray(node.nodes) ? new _Container2.default(node) : new _Node2.default(node));\n\t      node = resetNode();\n\t      insideSomeValue = false;\n\t    }\n\t  }\n\n\t  // Now process the result array - to specify undefined types of the nodes\n\t  // and specify the `after` prop\n\t  for (var _i = 0; _i < result.length; _i++) {\n\t    node = result[_i];\n\t    if (_i > 0) {\n\t      result[_i - 1].after = node.before;\n\t    }\n\n\t    // Node types. Might not be set because contains interpolation/function\n\t    // calls or fully consists of them\n\t    if (node.type === undefined) {\n\t      if (_i > 0) {\n\t        // only `and` can follow an expression\n\t        if (result[_i - 1].type === 'media-feature-expression') {\n\t          node.type = 'keyword';\n\t          continue;\n\t        }\n\t        // Anything after 'only|not' is a media type\n\t        if (result[_i - 1].value === 'not' || result[_i - 1].value === 'only') {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\t        // Anything after 'and' is an expression\n\t        if (result[_i - 1].value === 'and') {\n\t          node.type = 'media-feature-expression';\n\t          continue;\n\t        }\n\n\t        if (result[_i - 1].type === 'media-type') {\n\t          // if it is the last element - it might be an expression\n\t          // or 'and' depending on what is after it\n\t          if (!result[_i + 1]) {\n\t            node.type = 'media-feature-expression';\n\t          } else {\n\t            node.type = result[_i + 1].type === 'media-feature-expression' ? 'keyword' : 'media-feature-expression';\n\t          }\n\t        }\n\t      }\n\n\t      if (_i === 0) {\n\t        // `screen`, `fn( ... )`, `#{ ... }`. Not an expression, since then\n\t        // its type would have been set by now\n\t        if (!result[_i + 1]) {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\n\t        // `screen and` or `#{...} (max-width: 10px)`\n\t        if (result[_i + 1] && (result[_i + 1].type === 'media-feature-expression' || result[_i + 1].type === 'keyword')) {\n\t          node.type = 'media-type';\n\t          continue;\n\t        }\n\t        if (result[_i + 2]) {\n\t          // `screen and (color) ...`\n\t          if (result[_i + 2].type === 'media-feature-expression') {\n\t            node.type = 'media-type';\n\t            result[_i + 1].type = 'keyword';\n\t            continue;\n\t          }\n\t          // `only screen and ...`\n\t          if (result[_i + 2].type === 'keyword') {\n\t            node.type = 'keyword';\n\t            result[_i + 1].type = 'media-type';\n\t            continue;\n\t          }\n\t        }\n\t        if (result[_i + 3]) {\n\t          // `screen and (color) ...`\n\t          if (result[_i + 3].type === 'media-feature-expression') {\n\t            node.type = 'keyword';\n\t            result[_i + 1].type = 'media-type';\n\t            result[_i + 2].type = 'keyword';\n\t            continue;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\n\t/**\r\n\t * Parses a media query list. Takes a possible `url()` at the start into\r\n\t * account, and divides the list into media queries that are parsed separately\r\n\t *\r\n\t * @param {string} string - the source media query list string\r\n\t *\r\n\t * @return {Array} an array of Nodes/Containers\r\n\t */\n\n\tfunction parseMediaList(string) {\n\t  var result = [];\n\t  var interimIndex = 0;\n\t  var levelLocal = 0;\n\n\t  // Check for a `url(...)` part (if it is contents of an @import rule)\n\t  var doesHaveUrl = /^(\\s*)url\\s*\\(/.exec(string);\n\t  if (doesHaveUrl !== null) {\n\t    var i = doesHaveUrl[0].length;\n\t    var parenthesesLv = 1;\n\t    while (parenthesesLv > 0) {\n\t      var character = string[i];\n\t      if (character === '(') {\n\t        parenthesesLv++;\n\t      }\n\t      if (character === ')') {\n\t        parenthesesLv--;\n\t      }\n\t      i++;\n\t    }\n\t    result.unshift(new _Node2.default({\n\t      type: 'url',\n\t      value: string.substring(0, i).trim(),\n\t      sourceIndex: doesHaveUrl[1].length,\n\t      before: doesHaveUrl[1],\n\t      after: /^(\\s*)/.exec(string.substring(i))[1]\n\t    }));\n\t    interimIndex = i;\n\t  }\n\n\t  // Start processing the media query list\n\t  for (var _i2 = interimIndex; _i2 < string.length; _i2++) {\n\t    var _character = string[_i2];\n\n\t    // Dividing the media query list into comma-separated media queries\n\t    // Only count commas that are outside of any parens\n\t    // (i.e., not part of function call params list, etc.)\n\t    if (_character === '(') {\n\t      levelLocal++;\n\t    }\n\t    if (_character === ')') {\n\t      levelLocal--;\n\t    }\n\t    if (levelLocal === 0 && _character === ',') {\n\t      var _mediaQueryString = string.substring(interimIndex, _i2);\n\t      var _spaceBefore = /^(\\s*)/.exec(_mediaQueryString)[1];\n\t      result.push(new _Container2.default({\n\t        type: 'media-query',\n\t        value: _mediaQueryString.trim(),\n\t        sourceIndex: interimIndex + _spaceBefore.length,\n\t        nodes: parseMediaQuery(_mediaQueryString, interimIndex),\n\t        before: _spaceBefore,\n\t        after: /(\\s*)$/.exec(_mediaQueryString)[1]\n\t      }));\n\t      interimIndex = _i2 + 1;\n\t    }\n\t  }\n\n\t  var mediaQueryString = string.substring(interimIndex);\n\t  var spaceBefore = /^(\\s*)/.exec(mediaQueryString)[1];\n\t  result.push(new _Container2.default({\n\t    type: 'media-query',\n\t    value: mediaQueryString.trim(),\n\t    sourceIndex: interimIndex + spaceBefore.length,\n\t    nodes: parseMediaQuery(mediaQueryString, interimIndex),\n\t    before: spaceBefore,\n\t    after: /(\\s*)$/.exec(mediaQueryString)[1]\n\t  }));\n\n\t  return result;\n\t}\n\treturn parsers;\n}\n\nvar hasRequiredDist;\n\nfunction requireDist () {\n\tif (hasRequiredDist) return dist;\n\thasRequiredDist = 1;\n\n\tObject.defineProperty(dist, \"__esModule\", {\n\t  value: true\n\t});\n\tdist.default = parseMedia;\n\n\tvar _Container = requireContainer();\n\n\tvar _Container2 = _interopRequireDefault(_Container);\n\n\tvar _parsers = requireParsers();\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\t/**\r\n\t * Parses a media query list into an array of nodes. A typical node signature:\r\n\t *  {string} node.type -- one of: 'media-query', 'media-type', 'keyword',\r\n\t *    'media-feature-expression', 'media-feature', 'colon', 'value'\r\n\t *  {string} node.value -- the contents of a particular element, trimmed\r\n\t *    e.g.: `screen`, `max-width`, `1024px`\r\n\t *  {string} node.after -- whitespaces that follow the element\r\n\t *  {string} node.before -- whitespaces that precede the element\r\n\t *  {string} node.sourceIndex -- the index of the element in a source media\r\n\t *    query list, 0-based\r\n\t *  {object} node.parent -- a link to the parent node (a container)\r\n\t *\r\n\t * Some nodes (media queries, media feature expressions) contain other nodes.\r\n\t * They additionally have:\r\n\t *  {array} node.nodes -- an array of nodes of the type described here\r\n\t *  {funciton} node.each -- traverses direct children of the node, calling\r\n\t *    a callback for each one\r\n\t *  {funciton} node.walk -- traverses ALL descendants of the node, calling\r\n\t *    a callback for each one\r\n\t */\n\n\tfunction parseMedia(value) {\n\t  return new _Container2.default({\n\t    nodes: (0, _parsers.parseMediaList)(value),\n\t    type: 'media-query-list',\n\t    value: value.trim()\n\t  });\n\t}\n\treturn dist;\n}\n\nvar distExports = requireDist();\nvar mediaParser = /*@__PURE__*/getDefaultExportFromCjs(distExports);\n\nvar boolbase$1;\nvar hasRequiredBoolbase;\n\nfunction requireBoolbase () {\n\tif (hasRequiredBoolbase) return boolbase$1;\n\thasRequiredBoolbase = 1;\n\tboolbase$1 = {\n\t\ttrueFunc: function trueFunc(){\n\t\t\treturn true;\n\t\t},\n\t\tfalseFunc: function falseFunc(){\n\t\t\treturn false;\n\t\t}\n\t};\n\treturn boolbase$1;\n}\n\nvar boolbaseExports = requireBoolbase();\nvar boolbase = /*@__PURE__*/getDefaultExportFromCjs(boolbaseExports);\n\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\nvar AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n\nconst reName = /^[^#\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\u00B0-\\uFFFF-])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar CharCode;\n(function (CharCode) {\n    CharCode[CharCode[\"LeftParenthesis\"] = 40] = \"LeftParenthesis\";\n    CharCode[CharCode[\"RightParenthesis\"] = 41] = \"RightParenthesis\";\n    CharCode[CharCode[\"LeftSquareBracket\"] = 91] = \"LeftSquareBracket\";\n    CharCode[CharCode[\"RightSquareBracket\"] = 93] = \"RightSquareBracket\";\n    CharCode[CharCode[\"Comma\"] = 44] = \"Comma\";\n    CharCode[CharCode[\"Period\"] = 46] = \"Period\";\n    CharCode[CharCode[\"Colon\"] = 58] = \"Colon\";\n    CharCode[CharCode[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCode[CharCode[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCode[CharCode[\"Plus\"] = 43] = \"Plus\";\n    CharCode[CharCode[\"Tilde\"] = 126] = \"Tilde\";\n    CharCode[CharCode[\"QuestionMark\"] = 63] = \"QuestionMark\";\n    CharCode[CharCode[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCode[CharCode[\"Slash\"] = 47] = \"Slash\";\n    CharCode[CharCode[\"Equal\"] = 61] = \"Equal\";\n    CharCode[CharCode[\"Dollar\"] = 36] = \"Dollar\";\n    CharCode[CharCode[\"Pipe\"] = 124] = \"Pipe\";\n    CharCode[CharCode[\"Circumflex\"] = 94] = \"Circumflex\";\n    CharCode[CharCode[\"Asterisk\"] = 42] = \"Asterisk\";\n    CharCode[CharCode[\"GreaterThan\"] = 62] = \"GreaterThan\";\n    CharCode[CharCode[\"LessThan\"] = 60] = \"LessThan\";\n    CharCode[CharCode[\"Hash\"] = 35] = \"Hash\";\n    CharCode[CharCode[\"LowerI\"] = 105] = \"LowerI\";\n    CharCode[CharCode[\"LowerS\"] = 115] = \"LowerS\";\n    CharCode[CharCode[\"BackSlash\"] = 92] = \"BackSlash\";\n    // Whitespace\n    CharCode[CharCode[\"Space\"] = 32] = \"Space\";\n    CharCode[CharCode[\"Tab\"] = 9] = \"Tab\";\n    CharCode[CharCode[\"NewLine\"] = 10] = \"NewLine\";\n    CharCode[CharCode[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCode[CharCode[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n})(CharCode || (CharCode = {}));\nconst actionTypes = new Map([\n    [CharCode.Tilde, AttributeAction.Element],\n    [CharCode.Circumflex, AttributeAction.Start],\n    [CharCode.Dollar, AttributeAction.End],\n    [CharCode.Asterisk, AttributeAction.Any],\n    [CharCode.ExclamationMark, AttributeAction.Not],\n    [CharCode.Pipe, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Pseudo elements defined in CSS Level 1 and CSS Level 2 can be written with\n * a single colon; eg. :before will turn into ::before.\n *\n * @see {@link https://www.w3.org/TR/2018/WD-selectors-4-20181121/#pseudo-element-syntax}\n */\nconst pseudosToPseudoElements = new Set([\n    \"before\",\n    \"after\",\n    \"first-line\",\n    \"first-letter\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal$1(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = Number.parseInt(escaped, 16) - 65536;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 65536)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 55296, (high & 1023) | 56320);\n}\nfunction unescapeCSS(cssString) {\n    return cssString.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === CharCode.SingleQuote || c === CharCode.DoubleQuote;\n}\nfunction isWhitespace$1(c) {\n    return (c === CharCode.Space ||\n        c === CharCode.Tab ||\n        c === CharCode.NewLine ||\n        c === CharCode.FormFeed ||\n        c === CharCode.CarriageReturn);\n}\n/**\n * Parses `selector`.\n *\n * @param selector Selector to parse.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse$1(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace$1(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        for (let counter = 1; selectorIndex < selector.length; selectorIndex++) {\n            switch (selector.charCodeAt(selectorIndex)) {\n                case CharCode.BackSlash: {\n                    // Skip next character\n                    selectorIndex += 1;\n                    break;\n                }\n                case CharCode.LeftParenthesis: {\n                    counter += 1;\n                    break;\n                }\n                case CharCode.RightParenthesis: {\n                    counter -= 1;\n                    if (counter === 0) {\n                        return unescapeCSS(selector.slice(start, selectorIndex++));\n                    }\n                    break;\n                }\n            }\n        }\n        throw new Error(\"Parenthesis not matched\");\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal$1(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case CharCode.Space:\n            case CharCode.Tab:\n            case CharCode.NewLine:\n            case CharCode.FormFeed:\n            case CharCode.CarriageReturn: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case CharCode.GreaterThan: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.LessThan: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.Tilde: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case CharCode.Plus: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case CharCode.Period: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case CharCode.Hash: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case CharCode.LeftSquareBracket: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === CharCode.Pipe) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === CharCode.Pipe &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            CharCode.Equal) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        CharCode.Equal) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === CharCode.Equal) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        selectorIndex += 1;\n                        const sectionStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            selector.charCodeAt(selectorIndex) !== quote) {\n                            selectorIndex +=\n                                // Skip next character if it is escaped\n                                selector.charCodeAt(selectorIndex) ===\n                                    CharCode.BackSlash\n                                    ? 2\n                                    : 1;\n                        }\n                        if (selector.charCodeAt(selectorIndex) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(sectionStart, selectorIndex));\n                        selectorIndex += 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            !isWhitespace$1(selector.charCodeAt(selectorIndex)) &&\n                            selector.charCodeAt(selectorIndex) !==\n                                CharCode.RightSquareBracket) {\n                            selectorIndex +=\n                                // Skip next character if it is escaped\n                                selector.charCodeAt(selectorIndex) ===\n                                    CharCode.BackSlash\n                                    ? 2\n                                    : 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    switch (selector.charCodeAt(selectorIndex) | 0x20) {\n                        // If the forceIgnore flag is set (either `i` or `s`), use that value\n                        case CharCode.LowerI: {\n                            ignoreCase = true;\n                            stripWhitespace(1);\n                            break;\n                        }\n                        case CharCode.LowerS: {\n                            ignoreCase = false;\n                            stripWhitespace(1);\n                            break;\n                        }\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    CharCode.RightSquareBracket) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case CharCode.Colon: {\n                if (selector.charCodeAt(selectorIndex + 1) === CharCode.Colon) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            CharCode.LeftParenthesis\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    break;\n                }\n                const name = getName(1).toLowerCase();\n                if (pseudosToPseudoElements.has(name)) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name,\n                        data: null,\n                    });\n                    break;\n                }\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    CharCode.LeftParenthesis) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            CharCode.RightParenthesis) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case CharCode.Comma: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === CharCode.Asterisk) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === CharCode.Pipe) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === CharCode.Pipe) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === CharCode.Pipe &&\n                    selector.charCodeAt(selectorIndex + 1) !== CharCode.Pipe) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        CharCode.Asterisk) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n\n/** Types of elements found in htmlparser2's DOM */\nvar ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nfunction isTag$1(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nconst Root = ElementType.Root;\n/** Type for Text */\nconst Text$1 = ElementType.Text;\n/** Type for <? ... ?> */\nconst Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nconst Comment$1 = ElementType.Comment;\n/** Type for <script> tags */\nconst Script = ElementType.Script;\n/** Type for <style> tags */\nconst Style = ElementType.Style;\n/** Type for Any tag */\nconst Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nconst CDATA$1 = ElementType.CDATA;\n/** Type for <!doctype ...> */\nconst Doctype = ElementType.Doctype;\n\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nclass Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nclass DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nclass Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nclass Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nclass ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nclass NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nclass CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nclass Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nclass Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nfunction isTag(node) {\n    return isTag$1(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nfunction isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nfunction isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nfunction isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nfunction isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nfunction hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nclass DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\n\nconst xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nconst getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nfunction encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nconst escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n\nconst elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nconst attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n\n/*\n * Module dependencies\n */\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nfunction render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case Doctype:\n        case Directive:\n            return renderDirective(node);\n        case Comment$1:\n            return renderComment(node);\n        case CDATA$1:\n            return renderCdata(node);\n        case Script:\n        case Style:\n        case Tag:\n            return renderTag(node, options);\n        case Text$1:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return render(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nfunction getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nfunction nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nfunction prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n\n/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nfunction removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nfunction replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nfunction appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nfunction append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nfunction prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nfunction prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nfunction find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nfunction findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nfunction findOne$1(test, nodes, recurse = true) {\n    const searchedNodes = Array.isArray(nodes) ? nodes : [nodes];\n    for (let i = 0; i < searchedNodes.length; i++) {\n        const node = searchedNodes[i];\n        if (isTag(node) && test(node)) {\n            return node;\n        }\n        if (recurse && hasChildren(node) && node.children.length > 0) {\n            const found = findOne$1(test, node.children, true);\n            if (found)\n                return found;\n        }\n    }\n    return null;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nfunction existsOne(test, nodes) {\n    return (Array.isArray(nodes) ? nodes : [nodes]).some((node) => (isTag(node) && test(node)) ||\n        (hasChildren(node) && existsOne(test, node.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nfunction findAll$1(test, nodes) {\n    const result = [];\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (isTag(elem) && test(elem))\n            result.push(elem);\n        if (hasChildren(elem) && elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne$1(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `className`.\n *\n * @category Legacy Query Functions\n * @param className Class name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `className`.\n */\nfunction getElementsByClassName(className, nodes, recurse = true, limit = Infinity) {\n    return filter(getAttribCheck(\"class\", className), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nfunction removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nvar DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nfunction compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nfunction uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n\nvar DomUtils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get DocumentPosition () { return DocumentPosition; },\n  append: append,\n  appendChild: appendChild,\n  compareDocumentPosition: compareDocumentPosition,\n  existsOne: existsOne,\n  filter: filter,\n  find: find,\n  findAll: findAll$1,\n  findOne: findOne$1,\n  findOneChild: findOneChild,\n  getAttributeValue: getAttributeValue,\n  getChildren: getChildren,\n  getElementById: getElementById,\n  getElements: getElements,\n  getElementsByClassName: getElementsByClassName,\n  getElementsByTagName: getElementsByTagName,\n  getElementsByTagType: getElementsByTagType,\n  getFeed: getFeed,\n  getInnerHTML: getInnerHTML,\n  getName: getName,\n  getOuterHTML: getOuterHTML,\n  getParent: getParent,\n  getSiblings: getSiblings,\n  getText: getText,\n  hasAttrib: hasAttrib,\n  hasChildren: hasChildren,\n  innerText: innerText,\n  isCDATA: isCDATA,\n  isComment: isComment,\n  isDocument: isDocument,\n  isTag: isTag,\n  isText: isText,\n  nextElementSibling: nextElementSibling,\n  prepend: prepend,\n  prependChild: prependChild,\n  prevElementSibling: prevElementSibling,\n  removeElement: removeElement,\n  removeSubsets: removeSubsets,\n  replaceElement: replaceElement,\n  testElement: testElement,\n  textContent: textContent,\n  uniqueSort: uniqueSort\n});\n\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nconst attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbaseExports.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.startsWith(value) &&\n            next(elem);\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => adapter\n                .getAttributeValue(elem, name)\n                ?.substr(len)\n                .toLowerCase() === value && next(elem);\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.endsWith(value) &&\n            next(elem);\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbaseExports.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => !!adapter.getAttributeValue(elem, name)?.includes(value) &&\n            next(elem);\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n\n/**\n * Find all elements matching the query. If not in XML mode, the query will ignore\n * the contents of `<template>` elements.\n *\n * @param query - Function that returns true if the element matches the query.\n * @param elems - Nodes to query. If a node is an element, its children will be queried.\n * @param options - Options for querying the document.\n * @returns All matching elements.\n */\nfunction findAll(query, elems, options) {\n    const { adapter, xmlMode = false } = options;\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [elems];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!adapter.isTag(elem)) {\n            continue;\n        }\n        if (query(elem)) {\n            result.push(elem);\n        }\n        if (xmlMode || adapter.getName(elem) !== \"template\") {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            const children = adapter.getChildren(elem);\n            if (children.length > 0) {\n                nodeStack.unshift(children);\n                indexStack.unshift(0);\n            }\n        }\n    }\n}\n/**\n * Find the first element matching the query. If not in XML mode, the query will ignore\n * the contents of `<template>` elements.\n *\n * @param query - Function that returns true if the element matches the query.\n * @param elems - Nodes to query. If a node is an element, its children will be queried.\n * @param options - Options for querying the document.\n * @returns The first matching element, or null if there was no match.\n */\nfunction findOne(query, elems, options) {\n    const { adapter, xmlMode = false } = options;\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [elems];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (nodeStack.length === 1) {\n                return null;\n            }\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!adapter.isTag(elem)) {\n            continue;\n        }\n        if (query(elem)) {\n            return elem;\n        }\n        if (xmlMode || adapter.getName(elem) !== \"template\") {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            const children = adapter.getChildren(elem);\n            if (children.length > 0) {\n                nodeStack.unshift(children);\n                indexStack.unshift(0);\n            }\n        }\n    }\n}\nfunction getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1) {\n        return [];\n    }\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1) {\n        return [];\n    }\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    return parent != null && adapter.isTag(parent) ? parent : null;\n}\n\n/**\n * Only text controls can be made read-only, since for other controls (such\n * as checkboxes and buttons) there is no useful distinction between being\n * read-only and being disabled.\n *\n * @see {@link https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly}\n */\nconst textControl = \"input:is([type=text i],[type=search i],[type=url i],[type=tel i],[type=email i],[type=password i],[type=date i],[type=month i],[type=week i],[type=time i],[type=datetime-local i],[type=number i])\";\n/**\n * Aliases are pseudos that are expressed as selectors.\n */\nconst aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], :selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    \"read-only\": `[readonly]:is(textarea, ${textControl})`,\n    \"read-write\": `:not([readonly]):is(textarea, ${textControl})`,\n    // JQuery extensions\n    /**\n     * `:selected` matches option elements that have the `selected` attribute,\n     * or are the first option element in a select element that does not have\n     * the `multiple` attribute and does not have any option elements with the\n     * `selected` attribute.\n     *\n     * @see https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n     */\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n\n// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nfunction parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nfunction compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n    return compile(parse(formula));\n}\n\n/**\n * Some selectors such as `:contains` and (non-relative) `:has` will only be\n * able to match elements if their parents match the selector (as they contain\n * a subset of the elements that the parent contains).\n *\n * This function wraps the given `matches` function in a function that caches\n * the results of the parent elements, so that the `matches` function only\n * needs to be called once for each subtree.\n */\nfunction cacheParentResults(next, { adapter, cacheResults }, matches) {\n    if (cacheResults === false || typeof WeakMap === \"undefined\") {\n        return (elem) => next(elem) && matches(elem);\n    }\n    // Use a cache to avoid re-checking children of an element.\n    // @ts-expect-error `Node` is not extending object\n    const resultCache = new WeakMap();\n    function addResultToCache(elem) {\n        const result = matches(elem);\n        resultCache.set(elem, result);\n        return result;\n    }\n    return function cachedMatcher(elem) {\n        if (!next(elem)) {\n            return false;\n        }\n        if (resultCache.has(elem)) {\n            return resultCache.get(elem);\n        }\n        // Check all of the element's parents.\n        let node = elem;\n        do {\n            const parent = getElementParent(node, adapter);\n            if (parent === null) {\n                return addResultToCache(elem);\n            }\n            node = parent;\n        } while (!resultCache.has(node));\n        return resultCache.get(node) && addResultToCache(elem);\n    };\n}\n\nconst filters = {\n    contains(next, text, options) {\n        const { getText } = options.adapter;\n        return cacheParentResults(next, options, (elem) => getText(elem).includes(text));\n    },\n    icontains(next, text, options) {\n        const itext = text.toLowerCase();\n        const { getText } = options.adapter;\n        return cacheParentResults(next, options, (elem) => getText(elem).toLowerCase().includes(itext));\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i])) {\n                    break;\n                }\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i])) {\n                    break;\n                }\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) {\n                    break;\n                }\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = nthCheck(rule);\n        if (func === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        if (func === boolbaseExports.trueFunc) {\n            return (elem) => getElementParent(elem, adapter) !== null && next(elem);\n        }\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling)) {\n                    break;\n                }\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => getElementParent(elem, adapter) === null && next(elem);\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbaseExports.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n\n/**\n * CSS limits the characters considered as whitespace to space, tab & line\n * feed. We add carriage returns as htmlparser2 doesn't normalize them to\n * line feeds.\n *\n * @see {@link https://www.w3.org/TR/css-text-3/#white-space}\n */\nconst isDocumentWhiteSpace = /^[ \\t\\r\\n]*$/;\n// While filters are precompiled, pseudos get called when they are needed\nconst pseudos = {\n    empty(elem, { adapter }) {\n        const children = adapter.getChildren(elem);\n        return (\n        // First, make sure the tag does not have any element children.\n        children.every((elem) => !adapter.isTag(elem)) &&\n            // Then, check that the text content is only whitespace.\n            children.every((elem) => \n            // FIXME: `getText` call is potentially expensive.\n            isDocumentWhiteSpace.test(adapter.getText(elem))));\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i])) {\n                return true;\n            }\n            if (adapter.isTag(siblings[i])) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) {\n                return true;\n            }\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling)) {\n                return true;\n            }\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nfunction verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n\nfunction isTraversal(token) {\n    return token.type === \"_flexibleDescendant\" || isTraversal$1(token);\n}\n/**\n * Sort the parts of the passed selector, as there is potential for\n * optimization (some types of selectors are faster than others).\n *\n * @param arr Selector to sort\n */\nfunction sortRules(arr) {\n    const ratings = arr.map(getQuality);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = ratings[i];\n        if (procNew < 0) {\n            continue;\n        }\n        // Use insertion sort to move the token to the correct position.\n        for (let j = i; j > 0 && procNew < ratings[j - 1]; j--) {\n            const token = arr[j];\n            arr[j] = arr[j - 1];\n            arr[j - 1] = token;\n            ratings[j] = ratings[j - 1];\n            ratings[j - 1] = procNew;\n        }\n    }\n}\nfunction getAttributeQuality(token) {\n    switch (token.action) {\n        case AttributeAction.Exists: {\n            return 10;\n        }\n        case AttributeAction.Equals: {\n            // Prefer ID selectors (eg. #ID)\n            return token.name === \"id\" ? 9 : 8;\n        }\n        case AttributeAction.Not: {\n            return 7;\n        }\n        case AttributeAction.Start: {\n            return 6;\n        }\n        case AttributeAction.End: {\n            return 6;\n        }\n        case AttributeAction.Any: {\n            return 5;\n        }\n        case AttributeAction.Hyphen: {\n            return 4;\n        }\n        case AttributeAction.Element: {\n            return 3;\n        }\n    }\n}\n/**\n * Determine the quality of the passed token. The higher the number, the\n * faster the token is to execute.\n *\n * @param token Token to get the quality of.\n * @returns The token's quality.\n */\nfunction getQuality(token) {\n    switch (token.type) {\n        case SelectorType.Universal: {\n            return 50;\n        }\n        case SelectorType.Tag: {\n            return 30;\n        }\n        case SelectorType.Attribute: {\n            return Math.floor(getAttributeQuality(token) /\n                // `ignoreCase` adds some overhead, half the result if applicable.\n                (token.ignoreCase ? 2 : 1));\n        }\n        case SelectorType.Pseudo: {\n            return !token.data\n                ? 3\n                : token.name === \"has\" ||\n                    token.name === \"contains\" ||\n                    token.name === \"icontains\"\n                    ? // Expensive in any case — run as late as possible.\n                        0\n                    : Array.isArray(token.data)\n                        ? // Eg. `:is`, `:not`\n                            Math.max(\n                            // If we have traversals, try to avoid executing this selector\n                            0, Math.min(...token.data.map((d) => Math.min(...d.map(getQuality)))))\n                        : 2;\n        }\n        default: {\n            return -1;\n        }\n    }\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\n\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nconst PLACEHOLDER_ELEMENT = {};\n/**\n * Check if the selector has any properties that rely on the current element.\n * If not, we can cache the result of the selector.\n *\n * We can't cache selectors that start with a traversal (e.g. `>`, `+`, `~`),\n * or include a `:scope`.\n *\n * @param selector - The selector to check.\n * @returns Whether the selector has any properties that rely on the current element.\n */\nfunction hasDependsOnCurrentElement(selector) {\n    return selector.some((sel) => sel.length > 0 &&\n        (isTraversal(sel[0]) || sel.some(includesScopePseudo)));\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbaseExports.trueFunc\n        ? next\n        : func === boolbaseExports.falseFunc\n            ? boolbaseExports.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nconst subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbaseExports.falseFunc\n            ? next\n            : func === boolbaseExports.trueFunc\n                ? boolbaseExports.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const skipCache = hasDependsOnCurrentElement(subselect);\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbaseExports.falseFunc) {\n            return boolbaseExports.falseFunc;\n        }\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbaseExports.trueFunc) {\n            return skipCache\n                ? (elem) => {\n                    if (!next(elem)) {\n                        return false;\n                    }\n                    context[0] = elem;\n                    const childs = adapter.getChildren(elem);\n                    return (findOne(compiled, compiled.shouldTestNextSiblings\n                        ? [\n                            ...childs,\n                            ...getNextSiblings(elem, adapter),\n                        ]\n                        : childs, options) !== null);\n                }\n                : cacheParentResults(next, options, (elem) => {\n                    context[0] = elem;\n                    return (findOne(compiled, adapter.getChildren(elem), options) !== null);\n                });\n        }\n        const hasOne = (elem) => findOne(compiled, adapter.getChildren(elem), options) !== null;\n        return skipCache\n            ? (elem) => next(elem) && hasOne(elem)\n            : cacheParentResults(next, options, hasOne);\n    },\n};\n\n/*\n * Pseudo selectors\n *\n * Pseudo selectors are available in three forms:\n *\n * 1. Filters are called when the selector is compiled and return a function\n *  that has to return either false, or the results of `next()`.\n * 2. Pseudos are called on execution. They have to return a boolean.\n * 3. Subselects work like filters, but have an embedded selector that will be run separately.\n *\n * Filters are great if you want to do some pre-processing, or change the call order\n * of `next()` and your code.\n * Pseudos should be used to implement simple checks.\n */\nfunction compilePseudoSelector(next, selector, options, context, compileToken) {\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = options.pseudos?.[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse$1(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n\n/*\n * All available rules\n */\nfunction compileGeneralSelector(next, selector, options, context, compileToken, hasExpensiveSubselector) {\n    const { adapter, equals, cacheResults } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (!hasExpensiveSubselector ||\n                cacheResults === false ||\n                typeof WeakMap === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    // biome-ignore lint/suspicious/noAssignInExpressions: TODO\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            const resultCache = new WeakMap();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                let result;\n                // biome-ignore lint/suspicious/noAssignInExpressions: TODO\n                while ((current = getElementParent(current, adapter))) {\n                    const cached = resultCache.get(current);\n                    if (cached === undefined) {\n                        result ?? (result = { matches: false });\n                        result.matches = next(current);\n                        resultCache.set(current, result);\n                        if (result.matches) {\n                            return true;\n                        }\n                    }\n                    else {\n                        if (result) {\n                            result.matches = cached.matches;\n                        }\n                        return cached.matches;\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current)) {\n                        return true;\n                    }\n                    current = getElementParent(current, adapter);\n                } while (current);\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = getElementParent(elem, adapter);\n                return parent !== null && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) {\n                        break;\n                    }\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling)) {\n                        break;\n                    }\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!context?.every((e) => e === PLACEHOLDER_ELEMENT ||\n        (adapter.isTag(e) && getElementParent(e, adapter) !== null));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) ;\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nfunction compileToken(token, options, ctx) {\n    token.forEach(sortRules);\n    const { context = ctx, rootFunc = boolbaseExports.trueFunc } = options;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    let query = boolbaseExports.falseFunc;\n    combineLoop: for (const rules of token) {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo || first.name !== \"scope\") ;\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        let next = rootFunc;\n        let hasExpensiveSubselector = false;\n        for (const rule of rules) {\n            next = compileGeneralSelector(next, rule, options, finalContext, compileToken, hasExpensiveSubselector);\n            const quality = getQuality(rule);\n            if (quality === 0) {\n                hasExpensiveSubselector = true;\n            }\n            // If the sub-selector won't match any elements, skip it.\n            if (next === boolbaseExports.falseFunc) {\n                continue combineLoop;\n            }\n        }\n        // If we have a function that always returns true, we can stop here.\n        if (next === rootFunc) {\n            return rootFunc;\n        }\n        query = query === boolbaseExports.falseFunc ? next : or(query, next);\n    }\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction or(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options ?? defaultOptions;\n    // @ts-expect-error Same as above.\n    opts.adapter ?? (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    opts.equals ?? (opts.equals = opts.adapter?.equals ?? defaultEquals);\n    return opts;\n}\n/**\n * Like `compile`, but does not add a check if elements are tags.\n */\nfunction _compileUnsafe(selector, options, context) {\n    return _compileToken(typeof selector === \"string\" ? parse$1(selector) : selector, options, context);\n}\n/**\n * @deprecated Use `_compileUnsafe` instead.\n */\nfunction _compileToken(selector, options, context) {\n    return compileToken(selector, convertOptionFormats(options), context);\n}\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = _compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nfunction prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nconst selectAll = getSelectorFunc((query, elems, options) => query === boolbaseExports.falseFunc || !elems || elems.length === 0\n    ? []\n    : findAll(query, elems, options));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nconst selectOne = getSelectorFunc((query, elems, options) => query === boolbaseExports.falseFunc || !elems || elems.length === 0\n    ? null\n    : findOne(query, elems, options));\n\n// Generated using scripts/write-decode-map.ts\nconst htmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nconst xmlDecodeTree = /* #__PURE__ */ new Uint16Array(\n// prettier-ignore\n/* #__PURE__ */ \"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n        codePoint -= 65536;\n        output += String.fromCharCode(((codePoint >>> 10) & 1023) | 55296);\n        codePoint = 56320 | (codePoint & 1023);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 55296 && codePoint <= 57343) ||\n        codePoint > 1114111) {\n        return 65533;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n\nvar CharCodes$1;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes$1 || (CharCodes$1 = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes$1.ZERO && code <= CharCodes$1.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_F) ||\n        (code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes$1.UPPER_A && code <= CharCodes$1.UPPER_Z) ||\n        (code >= CharCodes$1.LOWER_A && code <= CharCodes$1.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes$1.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nclass EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes$1.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(input, offset) {\n        if (offset >= input.length) {\n            return -1;\n        }\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes$1.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n    addToNumericResult(input, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(input, offset) {\n        const startIndex = offset;\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes$1.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes$1.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(input, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes$1.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIndex, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n        if (midValue < char) {\n            lo = mid + 1;\n        }\n        else if (midValue > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\n\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n    State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nvar QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n    TextareaEnd: new Uint8Array([\n        0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61,\n    ]), // `</textarea`\n    XmpEnd: new Uint8Array([0x3c, 0x2f, 0x78, 0x6d, 0x70]), // `</xmp`\n};\nclass Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (this.xmlMode) {\n                this.state = State.InTagName;\n            }\n            else if (lower === Sequences.ScriptEnd[2]) {\n                this.state = State.BeforeSpecialS;\n            }\n            else if (lower === Sequences.TitleEnd[2] ||\n                lower === Sequences.XmpEnd[2]) {\n                this.state = State.BeforeSpecialT;\n            }\n            else {\n                this.state = State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) ;\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = this.index;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index + 1);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeSpecialT(c) {\n        const lower = c | 0x20;\n        switch (lower) {\n            case Sequences.TitleEnd[3]: {\n                this.startSpecial(Sequences.TitleEnd, 4);\n                break;\n            }\n            case Sequences.TextareaEnd[3]: {\n                this.startSpecial(Sequences.TextareaEnd, 4);\n                break;\n            }\n            case Sequences.XmpEnd[3]: {\n                this.startSpecial(Sequences.XmpEnd, 4);\n                break;\n            }\n            default: {\n                this.state = State.InTagName;\n                this.stateInTagName(c); // Consume the token again\n            }\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? DecodingMode.Legacy\n                : DecodingMode.Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.BeforeSpecialT: {\n                    this.stateBeforeSpecialT(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) ;\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nclass Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.recognizeSelfClosing =\n            (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n        this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n        this.foreignContext = [!this.htmlMode];\n        (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */\n    isVoidElement(name) {\n        return this.htmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n                const element = this.stack.shift();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if (foreignContextElements.has(name)) {\n                    this.foreignContext.unshift(true);\n                }\n                else if (htmlIntegrationElements.has(name)) {\n                    this.foreignContext.unshift(false);\n                }\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (this.htmlMode &&\n            (foreignContextElements.has(name) ||\n                htmlIntegrationElements.has(name))) {\n            this.foreignContext.shift();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) {\n                for (let index = 0; index <= pos; index++) {\n                    const element = this.stack.shift();\n                    // We know the stack has sufficient elements.\n                    (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n                }\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = 0; index < this.stack.length; index++) {\n                this.cbs.onclosetag(this.stack[index], true);\n            }\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nfunction parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n\nvar picocolors_browserExports = /*@__PURE__*/ requirePicocolors_browser();\nvar pc = /*@__PURE__*/getDefaultExportFromCjs(picocolors_browserExports);\n\nfunction parseStylesheet(stylesheet) {\n  return parse$2(stylesheet);\n}\nfunction serializeStylesheet(ast, options) {\n  const cssParts = [];\n  stringify(ast, (result, node, type) => {\n    if (node?.type === \"decl\" && node.value.includes(\"</style>\")) {\n      return;\n    }\n    if (!options.compress) {\n      cssParts.push(result);\n      return;\n    }\n    if (node?.type === \"comment\")\n      return;\n    if (node?.type === \"decl\") {\n      const prefix = node.prop + node.raws.between;\n      cssParts.push(result.replace(prefix, prefix.trim()));\n      return;\n    }\n    if (type === \"start\") {\n      if (node?.type === \"rule\" && node.selectors) {\n        if (node.selectors.length === 1) {\n          cssParts.push(node.selectors[0] ?? \"\", \"{\");\n        } else {\n          cssParts.push(node.selectors.join(\",\"), \"{\");\n        }\n      } else {\n        cssParts.push(result.trim());\n      }\n      return;\n    }\n    if (type === \"end\" && result === \"}\" && node?.raws?.semicolon) {\n      const lastItemIdx = cssParts.length - 2;\n      if (lastItemIdx >= 0 && cssParts[lastItemIdx]) {\n        cssParts[lastItemIdx] = cssParts[lastItemIdx].slice(0, -1);\n      }\n    }\n    cssParts.push(result.trim());\n  });\n  return cssParts.join(\"\");\n}\nfunction markOnly(predicate) {\n  return (rule) => {\n    const sel = \"selectors\" in rule ? rule.selectors : void 0;\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n    if (\"selectors\" in rule) {\n      rule.$$markedSelectors = rule.selectors;\n      rule.selectors = sel;\n    }\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n  };\n}\nfunction applyMarkedSelectors(rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\nfunction walkStyleRules(node, iterator) {\n  if (!(\"nodes\" in node)) {\n    return;\n  }\n  node.nodes = node.nodes?.filter((rule) => {\n    if (hasNestedRules(rule)) {\n      walkStyleRules(rule, iterator);\n    }\n    rule._other = void 0;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\nfunction walkStyleRulesWithReverseMirror(node, node2, iterator) {\n  if (!node2)\n    return walkStyleRules(node, iterator);\n  [node.nodes, node2.nodes] = splitFilter(\n    node.nodes,\n    node2.nodes,\n    (rule, index, _rules, rules2) => {\n      const rule2 = rules2?.[index];\n      if (hasNestedRules(rule)) {\n        walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n      }\n      rule._other = rule2;\n      rule.filterSelectors = filterSelectors;\n      return iterator(rule) !== false;\n    }\n  );\n}\nfunction hasNestedRules(rule) {\n  return \"nodes\" in rule && !!rule.nodes?.length && (!(\"name\" in rule) || rule.name !== \"keyframes\" && rule.name !== \"-webkit-keyframes\") && rule.nodes.some((n) => n.type === \"rule\" || n.type === \"atrule\");\n}\nfunction splitFilter(a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n  for (let index = 0; index < a.length; index++) {\n    const item = a[index];\n    if (predicate(item, index, a, b)) {\n      aOut.push(item);\n    } else {\n      bOut.push(item);\n    }\n  }\n  return [aOut, bOut];\n}\nfunction filterSelectors(predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(\n      this.selectors,\n      this._other.selectors,\n      predicate\n    );\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\nconst MEDIA_TYPES = /* @__PURE__ */ new Set([\"all\", \"print\", \"screen\", \"speech\"]);\nconst MEDIA_KEYWORDS = /* @__PURE__ */ new Set([\"and\", \"not\", \",\"]);\nconst MEDIA_FEATURES = new Set(\n  [\n    \"width\",\n    \"aspect-ratio\",\n    \"color\",\n    \"color-index\",\n    \"grid\",\n    \"height\",\n    \"monochrome\",\n    \"orientation\",\n    \"resolution\",\n    \"scan\"\n  ].flatMap((feature) => [feature, `min-${feature}`, `max-${feature}`])\n);\nfunction validateMediaType(node) {\n  const { type: nodeType, value: nodeValue } = node;\n  if (nodeType === \"media-type\") {\n    return MEDIA_TYPES.has(nodeValue);\n  } else if (nodeType === \"keyword\") {\n    return MEDIA_KEYWORDS.has(nodeValue);\n  } else if (nodeType === \"media-feature\") {\n    return MEDIA_FEATURES.has(nodeValue);\n  }\n}\nfunction validateMediaQuery(query) {\n  const mediaParserFn = \"default\" in mediaParser ? mediaParser.default : mediaParser;\n  const mediaTree = mediaParserFn(query);\n  const nodeTypes = /* @__PURE__ */ new Set([\"media-type\", \"keyword\", \"media-feature\"]);\n  const stack = [mediaTree];\n  while (stack.length > 0) {\n    const node = stack.pop();\n    if (nodeTypes.has(node.type) && !validateMediaType(node)) {\n      return false;\n    }\n    if (node.nodes) {\n      stack.push(...node.nodes);\n    }\n  }\n  return true;\n}\n\nlet classCache = null;\nlet idCache = null;\nfunction buildCache(container) {\n  classCache = /* @__PURE__ */ new Set();\n  idCache = /* @__PURE__ */ new Set();\n  const queue = [container];\n  while (queue.length) {\n    const node = queue.shift();\n    if (node.hasAttribute?.(\"class\")) {\n      const classList = node.getAttribute(\"class\").trim().split(\" \");\n      classList.forEach((cls) => {\n        classCache.add(cls);\n      });\n    }\n    if (node.hasAttribute?.(\"id\")) {\n      const id = node.getAttribute(\"id\").trim();\n      idCache.add(id);\n    }\n    if (\"children\" in node) {\n      queue.push(...node.children.filter((child) => child.type === \"tag\"));\n    }\n  }\n}\nfunction createDocument(html) {\n  const document = parseDocument(html, { decodeEntities: false });\n  extendDocument(document);\n  extendElement(Element.prototype);\n  let beastiesContainer = document.querySelector(\"[data-beasties-container]\");\n  if (!beastiesContainer) {\n    document.documentElement?.setAttribute(\"data-beasties-container\", \"\");\n    beastiesContainer = document.documentElement || document;\n  }\n  document.beastiesContainer = beastiesContainer;\n  buildCache(beastiesContainer);\n  return document;\n}\nfunction serializeDocument(document) {\n  return render(document, { decodeEntities: false });\n}\nlet extended = false;\nfunction extendElement(element) {\n  if (extended) {\n    return;\n  }\n  extended = true;\n  Object.defineProperties(element, {\n    nodeName: {\n      get() {\n        return this.tagName.toUpperCase();\n      }\n    },\n    id: {\n      get() {\n        return this.getAttribute(\"id\");\n      },\n      set(value) {\n        this.setAttribute(\"id\", value);\n      }\n    },\n    className: {\n      get() {\n        return this.getAttribute(\"class\");\n      },\n      set(value) {\n        this.setAttribute(\"class\", value);\n      }\n    },\n    insertBefore: {\n      value(child, referenceNode) {\n        if (!referenceNode)\n          return this.appendChild(child);\n        prepend(referenceNode, child);\n        return child;\n      }\n    },\n    appendChild: {\n      value(child) {\n        appendChild(this, child);\n        return child;\n      }\n    },\n    removeChild: {\n      value(child) {\n        removeElement(child);\n      }\n    },\n    remove: {\n      value() {\n        removeElement(this);\n      }\n    },\n    textContent: {\n      get() {\n        return getText(this);\n      },\n      set(text) {\n        this.children = [];\n        appendChild(this, new Text(text));\n      }\n    },\n    setAttribute: {\n      value(name, value) {\n        if (this.attribs == null)\n          this.attribs = {};\n        if (value == null)\n          value = \"\";\n        this.attribs[name] = value;\n      }\n    },\n    removeAttribute: {\n      value(name) {\n        if (this.attribs != null) {\n          delete this.attribs[name];\n        }\n      }\n    },\n    getAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name];\n      }\n    },\n    hasAttribute: {\n      value(name) {\n        return this.attribs != null && this.attribs[name] != null;\n      }\n    },\n    getAttributeNode: {\n      value(name) {\n        const value = this.getAttribute(name);\n        if (value != null)\n          return { specified: true, value };\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nfunction extendDocument(document) {\n  Object.defineProperties(document, {\n    // document is just an Element in htmlparser2, giving it a nodeType of ELEMENT_NODE.\n    // TODO: verify if these are needed for css-select\n    nodeType: {\n      get() {\n        return 9;\n      }\n    },\n    contentType: {\n      get() {\n        return \"text/html\";\n      }\n    },\n    nodeName: {\n      get() {\n        return \"#document\";\n      }\n    },\n    documentElement: {\n      get() {\n        return this.children.find(\n          (child) => \"tagName\" in child && String(child.tagName).toLowerCase() === \"html\"\n        );\n      }\n    },\n    head: {\n      get() {\n        return this.querySelector(\"head\");\n      }\n    },\n    body: {\n      get() {\n        return this.querySelector(\"body\");\n      }\n    },\n    createElement: {\n      value(name) {\n        return new Element(name, {});\n      }\n    },\n    createTextNode: {\n      value(text) {\n        return new Text(text);\n      }\n    },\n    exists: {\n      value(sel) {\n        return cachedQuerySelector(sel, this);\n      }\n    },\n    querySelector: {\n      value(sel) {\n        return selectOne(sel, this);\n      }\n    },\n    querySelectorAll: {\n      value(sel) {\n        if (sel === \":root\") {\n          return this;\n        }\n        return selectAll(sel, this);\n      }\n    }\n  });\n}\nconst selectorTokensCache = /* @__PURE__ */ new Map();\nfunction cachedQuerySelector(sel, node) {\n  let selectorTokens = selectorTokensCache.get(sel);\n  if (selectorTokens === void 0) {\n    selectorTokens = parseRelevantSelectors(sel);\n    selectorTokensCache.set(sel, selectorTokens);\n  }\n  if (selectorTokens) {\n    for (const token of selectorTokens) {\n      if (token.name === \"class\") {\n        return classCache.has(token.value);\n      }\n      if (token.name === \"id\") {\n        return idCache.has(token.value);\n      }\n    }\n  }\n  return !!selectOne(sel, node);\n}\nfunction parseRelevantSelectors(sel) {\n  const tokens = parse$1(sel);\n  const relevantTokens = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const tokenGroup = tokens[i];\n    if (tokenGroup?.length !== 1) {\n      continue;\n    }\n    const token = tokenGroup[0];\n    if (token?.type === \"attribute\" && (token.name === \"class\" || token.name === \"id\")) {\n      relevantTokens.push(token);\n    }\n  }\n  return relevantTokens.length > 0 ? relevantTokens : null;\n}\n\nconst LOG_LEVELS = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"silent\"];\nconst defaultLogger = {\n  trace(msg) {\n    console.trace(msg);\n  },\n  debug(msg) {\n    console.debug(msg);\n  },\n  warn(msg) {\n    console.warn(pc.yellow(msg));\n  },\n  error(msg) {\n    console.error(pc.bold(pc.red(msg)));\n  },\n  info(msg) {\n    console.info(pc.bold(pc.blue(msg)));\n  },\n  silent() {\n  }\n};\nfunction createLogger(logLevel) {\n  const logLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  return LOG_LEVELS.reduce((logger, type, index) => {\n    if (index >= logLevelIdx) {\n      logger[type] = defaultLogger[type];\n    } else {\n      logger[type] = defaultLogger.silent;\n    }\n    return logger;\n  }, {});\n}\nfunction isSubpath(basePath, currentPath) {\n  return !_pathModule.relative(basePath, currentPath).startsWith(\"..\");\n}\n\nconst removePseudoClassesAndElementsPattern = /(?<!\\\\)::?[a-z-]+(?:\\(.+\\))?/gi;\nconst implicitUniversalPattern = /([>+~])\\s*(?!\\1)([>+~])/g;\nconst emptyCombinatorPattern = /([>+~])\\s*(?=\\1|$)/g;\nconst removeTrailingCommasPattern = /\\(\\s*,|,\\s*\\)/g;\nclass Beasties {\n  #selectorCache = /* @__PURE__ */ new Map();\n  options;\n  logger;\n  fs;\n  constructor(options = {}) {\n    this.options = Object.assign({\n      logLevel: \"info\",\n      path: \"\",\n      publicPath: \"\",\n      reduceInlineStyles: true,\n      pruneSource: false,\n      additionalStylesheets: [],\n      allowRules: []\n    }, options);\n    this.logger = this.options.logger || createLogger(this.options.logLevel);\n  }\n  /**\n   * Read the contents of a file from the specified filesystem or disk\n   */\n  readFile(filename) {\n    const fs = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err)\n          reject(err);\n        else resolve(data.toString());\n      };\n      if (fs && fs.readFile) {\n        fs.readFile(filename, callback);\n      } else {\n        readFile(filename, \"utf-8\", callback);\n      }\n    });\n  }\n  /**\n   * Write content to a file\n   */\n  writeFile(filename, data) {\n    const fs = this.fs;\n    return new Promise((resolve, reject) => {\n      const callback = (err) => {\n        if (err)\n          reject(err);\n        else resolve();\n      };\n      if (fs && fs.writeFile) {\n        fs.writeFile(filename, data, callback);\n      } else {\n        writeFile(filename, data, callback);\n      }\n    });\n  }\n  /**\n   * Apply critical CSS processing to the html\n   */\n  async process(html) {\n    const start = Date.now();\n    const document = createDocument(html);\n    if (this.options.additionalStylesheets.length > 0) {\n      await this.embedAdditionalStylesheet(document);\n    }\n    if (this.options.external !== false) {\n      const externalSheets = [...document.querySelectorAll('link[rel=\"stylesheet\"]')];\n      await Promise.all(\n        externalSheets.map((link) => this.embedLinkedStylesheet(link, document))\n      );\n    }\n    const styles = this.getAffectedStyleTags(document);\n    for (const style of styles) {\n      this.processStyle(style, document);\n    }\n    if (this.options.mergeStylesheets !== false && styles.length !== 0) {\n      this.mergeStylesheets(document);\n    }\n    const output = serializeDocument(document);\n    const end = Date.now();\n    this.logger.info?.(`Time ${end - start}ms`);\n    return output;\n  }\n  /**\n   * Get the style tags that need processing\n   */\n  getAffectedStyleTags(document) {\n    const styles = [...document.querySelectorAll(\"style\")];\n    if (this.options.reduceInlineStyles === false) {\n      return styles.filter((style) => style.$$external);\n    }\n    return styles;\n  }\n  mergeStylesheets(document) {\n    const styles = this.getAffectedStyleTags(document);\n    if (styles.length === 0) {\n      this.logger.warn?.(\n        \"Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge\"\n      );\n      return;\n    }\n    const first = styles[0];\n    let sheet = first.textContent;\n    for (let i = 1; i < styles.length; i++) {\n      const node = styles[i];\n      sheet += node.textContent;\n      node.remove();\n    }\n    first.textContent = sheet;\n  }\n  /**\n   * Given href, find the corresponding CSS asset\n   */\n  async getCssAsset(href, _style) {\n    const outputPath = this.options.path;\n    const publicPath = this.options.publicPath;\n    let normalizedPath = href.replace(/^\\//, \"\");\n    const pathPrefix = `${(publicPath || \"\").replace(/(^\\/|\\/$)/g, \"\")}/`;\n    if (normalizedPath.startsWith(pathPrefix)) {\n      normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, \"\");\n    }\n    if (/^https?:\\/\\//.test(normalizedPath) || href.startsWith(\"//\")) {\n      return void 0;\n    }\n    const filename = _pathModule.resolve(outputPath, normalizedPath);\n    if (!isSubpath(outputPath, filename)) {\n      return void 0;\n    }\n    let sheet;\n    try {\n      sheet = await this.readFile(filename);\n    } catch {\n      this.logger.warn?.(`Unable to locate stylesheet: ${filename}`);\n    }\n    return sheet;\n  }\n  checkInlineThreshold(link, style, sheet) {\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      const href = style.$$name;\n      style.$$reduce = false;\n      this.logger.info?.(\n        `\\x1B[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\x1B[39m`\n      );\n      link.remove();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Inline the stylesheets from options.additionalStylesheets (assuming it passes `options.filter`)\n   */\n  async embedAdditionalStylesheet(document) {\n    const styleSheetsIncluded = [];\n    const sources = await Promise.all(\n      this.options.additionalStylesheets.map((cssFile) => {\n        if (styleSheetsIncluded.includes(cssFile)) {\n          return [];\n        }\n        styleSheetsIncluded.push(cssFile);\n        const style = document.createElement(\"style\");\n        style.$$external = true;\n        return this.getCssAsset(cssFile, style).then((sheet) => [sheet, style]);\n      })\n    );\n    for (const [sheet, style] of sources) {\n      if (sheet) {\n        style.textContent = sheet;\n        document.head.appendChild(style);\n      }\n    }\n  }\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n  async embedLinkedStylesheet(link, document) {\n    const href = link.getAttribute(\"href\");\n    if (!href?.endsWith(\".css\")) {\n      return void 0;\n    }\n    const style = document.createElement(\"style\");\n    style.$$external = true;\n    const sheet = await this.getCssAsset(href, style);\n    if (!sheet) {\n      return;\n    }\n    style.textContent = sheet;\n    style.$$name = href;\n    style.$$links = [link];\n    link.parentNode?.insertBefore(style, link);\n    if (this.checkInlineThreshold(link, style, sheet)) {\n      return;\n    }\n    let media = link.getAttribute(\"media\");\n    if (media && !validateMediaQuery(media)) {\n      media = void 0;\n    }\n    const preloadMode = this.options.preload;\n    let cssLoaderPreamble = \"function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}\";\n    const lazy = preloadMode === \"js-lazy\";\n    if (lazy) {\n      cssLoaderPreamble = cssLoaderPreamble.replace(\n        \"l.href\",\n        \"l.media='print';l.onload=function(){l.media=m};l.href\"\n      );\n    }\n    if (preloadMode === false)\n      return;\n    let noscriptFallback = false;\n    let updateLinkToPreload = false;\n    const noscriptLink = link.cloneNode(false);\n    if (preloadMode === \"body\") {\n      document.body.appendChild(link);\n    } else {\n      if (preloadMode === \"js\" || preloadMode === \"js-lazy\") {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-href\", href);\n        script.setAttribute(\"data-media\", media || \"all\");\n        const js = `${cssLoaderPreamble}$loadcss(document.currentScript.dataset.href,document.currentScript.dataset.media)`;\n        script.textContent = js;\n        link.parentNode.insertBefore(script, link.nextSibling);\n        style.$$links.push(script);\n        cssLoaderPreamble = \"\";\n        noscriptFallback = true;\n        updateLinkToPreload = true;\n      } else if (preloadMode === \"media\") {\n        link.setAttribute(\"media\", \"print\");\n        link.setAttribute(\"onload\", `this.media='${media || \"all\"}'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-high\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet preload\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap-low\") {\n        link.setAttribute(\"rel\", \"alternate stylesheet\");\n        link.setAttribute(\"title\", \"styles\");\n        link.setAttribute(\"onload\", `this.title='';this.rel='stylesheet'`);\n        noscriptFallback = true;\n      } else if (preloadMode === \"swap\") {\n        link.setAttribute(\"onload\", \"this.rel='stylesheet'\");\n        updateLinkToPreload = true;\n        noscriptFallback = true;\n      } else {\n        const bodyLink = link.cloneNode(false);\n        bodyLink.removeAttribute(\"id\");\n        document.body.appendChild(bodyLink);\n        style.$$links.push(bodyLink);\n        updateLinkToPreload = true;\n      }\n    }\n    if (this.options.noscriptFallback !== false && noscriptFallback && !href.includes(\"</noscript>\")) {\n      const noscript = document.createElement(\"noscript\");\n      noscriptLink.removeAttribute(\"id\");\n      noscript.appendChild(noscriptLink);\n      link.parentNode.insertBefore(noscript, link.nextSibling);\n      style.$$links.push(noscript);\n    }\n    if (updateLinkToPreload) {\n      link.setAttribute(\"rel\", \"preload\");\n      link.setAttribute(\"as\", \"style\");\n    }\n  }\n  /**\n   * Prune the source CSS files\n   */\n  pruneSource(style, before, sheetInverse) {\n    const minSize = this.options.minimumExternalSize;\n    const name = style.$$name;\n    const shouldInline = minSize && sheetInverse.length < minSize;\n    if (shouldInline) {\n      this.logger.info?.(\n        `\\x1B[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\x1B[39m`\n      );\n    }\n    if (shouldInline || !sheetInverse) {\n      style.textContent = before;\n      if (style.$$links) {\n        for (const link of style.$$links) {\n          const parent = link.parentNode;\n          parent?.removeChild(link);\n        }\n      }\n    }\n    return !!shouldInline;\n  }\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n  processStyle(style, document) {\n    if (style.$$reduce === false)\n      return;\n    const name = style.$$name ? style.$$name.replace(/^\\//, \"\") : \"inline CSS\";\n    const options = this.options;\n    const beastiesContainer = document.beastiesContainer;\n    let keyframesMode = options.keyframes ?? \"critical\";\n    if (keyframesMode === true)\n      keyframesMode = \"all\";\n    if (keyframesMode === false)\n      keyframesMode = \"none\";\n    let sheet = style.textContent;\n    const before = sheet;\n    if (!sheet)\n      return;\n    const ast = parseStylesheet(sheet);\n    const astInverse = options.pruneSource ? parseStylesheet(sheet) : null;\n    let criticalFonts = \"\";\n    const failedSelectors = [];\n    const criticalKeyframeNames = /* @__PURE__ */ new Set();\n    let includeNext = false;\n    let includeAll = false;\n    let excludeNext = false;\n    let excludeAll = false;\n    const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n    const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n    walkStyleRules(\n      ast,\n      markOnly((rule) => {\n        if (rule.type === \"comment\") {\n          const beastiesComment = rule.text.match(/^(?<!! )beasties:(.*)/);\n          const command = beastiesComment && beastiesComment[1];\n          if (command) {\n            switch (command) {\n              case \"include\":\n                includeNext = true;\n                break;\n              case \"exclude\":\n                excludeNext = true;\n                break;\n              case \"include start\":\n                includeAll = true;\n                break;\n              case \"include end\":\n                includeAll = false;\n                break;\n              case \"exclude start\":\n                excludeAll = true;\n                break;\n              case \"exclude end\":\n                excludeAll = false;\n                break;\n            }\n          }\n        }\n        if (rule.type === \"rule\") {\n          if (includeNext) {\n            includeNext = false;\n            return true;\n          }\n          if (excludeNext) {\n            excludeNext = false;\n            return false;\n          }\n          if (includeAll) {\n            return true;\n          }\n          if (excludeAll) {\n            return false;\n          }\n          rule.filterSelectors?.((sel) => {\n            const isAllowedRule = options.allowRules.some((exp) => {\n              if (exp instanceof RegExp) {\n                return exp.test(sel);\n              }\n              return exp === sel;\n            });\n            if (isAllowedRule)\n              return true;\n            if (sel === \":root\" || sel === \"html\" || sel === \"body\" || sel[0] === \":\" && /^::?(?:before|after)$/.test(sel)) {\n              return true;\n            }\n            sel = this.normalizeCssSelector(sel);\n            if (!sel)\n              return false;\n            try {\n              return beastiesContainer.exists(sel);\n            } catch (e) {\n              failedSelectors.push(`${sel} -> ${e.message || e.toString()}`);\n              return false;\n            }\n          });\n          if (!rule.selector) {\n            return false;\n          }\n          if (rule.nodes) {\n            for (const decl of rule.nodes) {\n              if (!(\"prop\" in decl)) {\n                continue;\n              }\n              if (shouldInlineFonts && /\\bfont(?:-family)?\\b/i.test(decl.prop)) {\n                criticalFonts += ` ${decl.value}`;\n              }\n              if (decl.prop === \"animation\" || decl.prop === \"animation-name\") {\n                for (const name2 of decl.value.split(/\\s+/)) {\n                  const nameTrimmed = name2.trim();\n                  if (nameTrimmed)\n                    criticalKeyframeNames.add(nameTrimmed);\n                }\n              }\n            }\n          }\n        }\n        if (rule.type === \"atrule\" && (rule.name === \"font-face\" || rule.name === \"layer\"))\n          return;\n        const hasRemainingRules = (\"nodes\" in rule && rule.nodes?.some((rule2) => !rule2.$$remove)) ?? true;\n        return hasRemainingRules;\n      })\n    );\n    if (failedSelectors.length !== 0) {\n      this.logger.warn?.(\n        `${failedSelectors.length} rules skipped due to selector errors:\n  ${failedSelectors.join(\"\\n  \")}`\n      );\n    }\n    const preloadedFonts = /* @__PURE__ */ new Set();\n    walkStyleRulesWithReverseMirror(ast, astInverse, (rule) => {\n      if (rule.$$remove === true)\n        return false;\n      if (\"selectors\" in rule) {\n        applyMarkedSelectors(rule);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"keyframes\") {\n        if (keyframesMode === \"none\")\n          return false;\n        if (keyframesMode === \"all\")\n          return true;\n        return criticalKeyframeNames.has(rule.params);\n      }\n      if (rule.type === \"atrule\" && rule.name === \"font-face\") {\n        let family, src;\n        if (rule.nodes) {\n          for (const decl of rule.nodes) {\n            if (!(\"prop\" in decl)) {\n              continue;\n            }\n            if (decl.prop === \"src\") {\n              src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n            } else if (decl.prop === \"font-family\") {\n              family = decl.value;\n            }\n          }\n          if (src && shouldPreloadFonts && !preloadedFonts.has(src)) {\n            preloadedFonts.add(src);\n            const preload = document.createElement(\"link\");\n            preload.setAttribute(\"rel\", \"preload\");\n            preload.setAttribute(\"as\", \"font\");\n            preload.setAttribute(\"crossorigin\", \"anonymous\");\n            preload.setAttribute(\"href\", src.trim());\n            document.head.appendChild(preload);\n          }\n        }\n        if (!shouldInlineFonts || !family || !src || !criticalFonts.includes(family)) {\n          return false;\n        }\n      }\n    });\n    sheet = serializeStylesheet(ast, {\n      compress: this.options.compress !== false\n    });\n    if (sheet.trim().length === 0) {\n      if (style.parentNode) {\n        style.remove();\n      }\n      return;\n    }\n    let afterText = \"\";\n    let styleInlinedCompletely = false;\n    if (options.pruneSource) {\n      const sheetInverse = serializeStylesheet(astInverse, {\n        compress: this.options.compress !== false\n      });\n      styleInlinedCompletely = this.pruneSource(style, before, sheetInverse);\n      if (styleInlinedCompletely) {\n        const percent2 = sheetInverse.length / before.length * 100;\n        afterText = `, reducing non-inlined size ${percent2 | 0}% to ${formatSize(sheetInverse.length)}`;\n      }\n      const cssFilePath = _pathModule.resolve(this.options.path, name);\n      this.writeFile(cssFilePath, sheetInverse).then(() => this.logger.info?.(`${name} was successfully updated`)).catch((err) => this.logger.error?.(err));\n    }\n    if (!styleInlinedCompletely) {\n      style.textContent = sheet;\n    }\n    const percent = sheet.length / before.length * 100 | 0;\n    this.logger.info?.(\n      `\\x1B[32mInlined ${formatSize(sheet.length)} (${percent}% of original ${formatSize(before.length)}) of ${name}${afterText}.\\x1B[39m`\n    );\n  }\n  normalizeCssSelector(sel) {\n    let normalizedSelector = this.#selectorCache.get(sel);\n    if (normalizedSelector !== void 0) {\n      return normalizedSelector;\n    }\n    normalizedSelector = sel.replace(removePseudoClassesAndElementsPattern, \"\").replace(removeTrailingCommasPattern, (match) => match.includes(\"(\") ? \"(\" : \")\").replace(implicitUniversalPattern, \"$1 * $2\").replace(emptyCombinatorPattern, \"$1 *\").trim();\n    this.#selectorCache.set(sel, normalizedSelector);\n    return normalizedSelector;\n  }\n}\nfunction formatSize(size) {\n  if (size <= 0) {\n    return \"0 bytes\";\n  }\n  const abbreviations = [\"bytes\", \"kB\", \"MB\", \"GB\"];\n  const index = Math.floor(Math.log(size) / Math.log(1024));\n  const roundedSize = size / 1024 ** index;\n  const fractionDigits = index === 0 ? 0 : 2;\n  return `${roundedSize.toFixed(fractionDigits)} ${abbreviations[index]}`;\n}\n\nexport { Beasties as default };\n\n", "import { ɵConsole as _Console, ApplicationRef, InjectionToken, provideEnvironmentInitializer, inject, makeEnvironmentProviders, ɵENABLE_ROOT_COMPONENT_BOOTSTRAP as _ENABLE_ROOT_COMPONENT_BOOTSTRAP, Compiler, createEnvironmentInjector, EnvironmentInjector, runInInjectionContext, ɵresetCompiledComponents as _resetCompiledComponents, REQUEST, REQUEST_CONTEXT, RESPONSE_INIT, LOCALE_ID } from '@angular/core';\nimport { platformServer, INITIAL_CONFIG, ɵSERVER_CONTEXT as _SERVER_CONTEXT, ɵrenderInternal as _renderInternal, provideServerRendering as provideServerRendering$1 } from '@angular/platform-server';\nimport { ActivatedRoute, Router, ROUTES, ɵloadChildren as _loadChildren } from '@angular/router';\nimport { PlatformLocation, APP_BASE_HREF } from '@angular/common';\nimport Beasties from '../third_party/beasties/index.js';\n\n/**\n * Manages server-side assets.\n */\nclass ServerAssets {\n    manifest;\n    /**\n     * Creates an instance of ServerAsset.\n     *\n     * @param manifest - The manifest containing the server assets.\n     */\n    constructor(manifest) {\n        this.manifest = manifest;\n    }\n    /**\n     * Retrieves the content of a server-side asset using its path.\n     *\n     * @param path - The path to the server asset within the manifest.\n     * @returns The server asset associated with the provided path, as a `ServerAsset` object.\n     * @throws Error - Throws an error if the asset does not exist.\n     */\n    getServerAsset(path) {\n        const asset = this.manifest.assets[path];\n        if (!asset) {\n            throw new Error(`Server asset '${path}' does not exist.`);\n        }\n        return asset;\n    }\n    /**\n     * Checks if a specific server-side asset exists.\n     *\n     * @param path - The path to the server asset.\n     * @returns A boolean indicating whether the asset exists.\n     */\n    hasServerAsset(path) {\n        return !!this.manifest.assets[path];\n    }\n    /**\n     * Retrieves the asset for 'index.server.html'.\n     *\n     * @returns The `ServerAsset` object for 'index.server.html'.\n     * @throws Error - Throws an error if 'index.server.html' does not exist.\n     */\n    getIndexServerHtml() {\n        return this.getServerAsset('index.server.html');\n    }\n}\n\n/**\n * A set of log messages that should be ignored and not printed to the console.\n */\nconst IGNORED_LOGS = new Set(['Angular is running in development mode.']);\n/**\n * Custom implementation of the Angular Console service that filters out specific log messages.\n *\n * This class extends the internal Angular `ɵConsole` class to provide customized logging behavior.\n * It overrides the `log` method to suppress logs that match certain predefined messages.\n */\nclass Console extends _Console {\n    /**\n     * Logs a message to the console if it is not in the set of ignored messages.\n     *\n     * @param message - The message to log to the console.\n     *\n     * This method overrides the `log` method of the `ɵConsole` class. It checks if the\n     * message is in the `IGNORED_LOGS` set. If it is not, it delegates the logging to\n     * the parent class's `log` method. Otherwise, the message is suppressed.\n     */\n    log(message) {\n        if (!IGNORED_LOGS.has(message)) {\n            super.log(message);\n        }\n    }\n}\n\n/**\n * The Angular app manifest object.\n * This is used internally to store the current Angular app manifest.\n */\nlet angularAppManifest;\n/**\n * Sets the Angular app manifest.\n *\n * @param manifest - The manifest object to set for the Angular application.\n */\nfunction setAngularAppManifest(manifest) {\n    angularAppManifest = manifest;\n}\n/**\n * Gets the Angular app manifest.\n *\n * @returns The Angular app manifest.\n * @throws Will throw an error if the Angular app manifest is not set.\n */\nfunction getAngularAppManifest() {\n    if (!angularAppManifest) {\n        throw new Error('Angular app manifest is not set. ' +\n            `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n    }\n    return angularAppManifest;\n}\n/**\n * The Angular app engine manifest object.\n * This is used internally to store the current Angular app engine manifest.\n */\nlet angularAppEngineManifest;\n/**\n * Sets the Angular app engine manifest.\n *\n * @param manifest - The engine manifest object to set.\n */\nfunction setAngularAppEngineManifest(manifest) {\n    angularAppEngineManifest = manifest;\n}\n/**\n * Gets the Angular app engine manifest.\n *\n * @returns The Angular app engine manifest.\n * @throws Will throw an error if the Angular app engine manifest is not set.\n */\nfunction getAngularAppEngineManifest() {\n    if (!angularAppEngineManifest) {\n        throw new Error('Angular app engine manifest is not set. ' +\n            `Please ensure you are using the '@angular/build:application' builder to build your server application.`);\n    }\n    return angularAppEngineManifest;\n}\n\n/**\n * Removes the trailing slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the trailing slash.\n * @returns The URL string without a trailing slash.\n *\n * @example\n * ```js\n * stripTrailingSlash('path/'); // 'path'\n * stripTrailingSlash('/path');  // '/path'\n * stripTrailingSlash('/'); // '/'\n * stripTrailingSlash(''); // ''\n * ```\n */\nfunction stripTrailingSlash(url) {\n    // Check if the last character of the URL is a slash\n    return url.length > 1 && url[url.length - 1] === '/' ? url.slice(0, -1) : url;\n}\n/**\n * Removes the leading slash from a URL if it exists.\n *\n * @param url - The URL string from which to remove the leading slash.\n * @returns The URL string without a leading slash.\n *\n * @example\n * ```js\n * stripLeadingSlash('/path'); // 'path'\n * stripLeadingSlash('/path/');  // 'path/'\n * stripLeadingSlash('/'); // '/'\n * stripLeadingSlash(''); // ''\n * ```\n */\nfunction stripLeadingSlash(url) {\n    // Check if the first character of the URL is a slash\n    return url.length > 1 && url[0] === '/' ? url.slice(1) : url;\n}\n/**\n * Adds a leading slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the leading slash will be added.\n * @returns The URL string with a leading slash.\n *\n * @example\n * ```js\n * addLeadingSlash('path'); // '/path'\n * addLeadingSlash('/path'); // '/path'\n * ```\n */\nfunction addLeadingSlash(url) {\n    // Check if the URL already starts with a slash\n    return url[0] === '/' ? url : `/${url}`;\n}\n/**\n * Adds a trailing slash to a URL if it does not already have one.\n *\n * @param url - The URL string to which the trailing slash will be added.\n * @returns The URL string with a trailing slash.\n *\n * @example\n * ```js\n * addTrailingSlash('path'); // 'path/'\n * addTrailingSlash('path/'); // 'path/'\n * ```\n */\nfunction addTrailingSlash(url) {\n    // Check if the URL already end with a slash\n    return url[url.length - 1] === '/' ? url : `${url}/`;\n}\n/**\n * Joins URL parts into a single URL string.\n *\n * This function takes multiple URL segments, normalizes them by removing leading\n * and trailing slashes where appropriate, and then joins them into a single URL.\n *\n * @param parts - The parts of the URL to join. Each part can be a string with or without slashes.\n * @returns The joined URL string, with normalized slashes.\n *\n * @example\n * ```js\n * joinUrlParts('path/', '/to/resource'); // '/path/to/resource'\n * joinUrlParts('/path/', 'to/resource'); // '/path/to/resource'\n * joinUrlParts('', ''); // '/'\n * ```\n */\nfunction joinUrlParts(...parts) {\n    const normalizeParts = [];\n    for (const part of parts) {\n        if (part === '') {\n            // Skip any empty parts\n            continue;\n        }\n        let normalizedPart = part;\n        if (part[0] === '/') {\n            normalizedPart = normalizedPart.slice(1);\n        }\n        if (part[part.length - 1] === '/') {\n            normalizedPart = normalizedPart.slice(0, -1);\n        }\n        if (normalizedPart !== '') {\n            normalizeParts.push(normalizedPart);\n        }\n    }\n    return addLeadingSlash(normalizeParts.join('/'));\n}\n/**\n * Strips `/index.html` from the end of a URL's path, if present.\n *\n * This function is used to convert URLs pointing to an `index.html` file into their directory\n * equivalents. For example, it transforms a URL like `http://www.example.com/page/index.html`\n * into `http://www.example.com/page`.\n *\n * @param url - The URL object to process.\n * @returns A new URL object with `/index.html` removed from the path, if it was present.\n *\n * @example\n * ```typescript\n * const originalUrl = new URL('http://www.example.com/page/index.html');\n * const cleanedUrl = stripIndexHtmlFromURL(originalUrl);\n * console.log(cleanedUrl.href); // Output: 'http://www.example.com/page'\n * ```\n */\nfunction stripIndexHtmlFromURL(url) {\n    if (url.pathname.endsWith('/index.html')) {\n        const modifiedURL = new URL(url);\n        // Remove '/index.html' from the pathname\n        modifiedURL.pathname = modifiedURL.pathname.slice(0, /** '/index.html'.length */ -11);\n        return modifiedURL;\n    }\n    return url;\n}\n/**\n * Resolves `*` placeholders in a path template by mapping them to corresponding segments\n * from a base path. This is useful for constructing paths dynamically based on a given base path.\n *\n * The function processes the `toPath` string, replacing each `*` placeholder with\n * the corresponding segment from the `fromPath`. If the `toPath` contains no placeholders,\n * it is returned as-is. Invalid `toPath` formats (not starting with `/`) will throw an error.\n *\n * @param toPath - A path template string that may contain `*` placeholders. Each `*` is replaced\n * by the corresponding segment from the `fromPath`. Static paths (e.g., `/static/path`) are returned\n * directly without placeholder replacement.\n * @param fromPath - A base path string, split into segments, that provides values for\n * replacing `*` placeholders in the `toPath`.\n * @returns A resolved path string with `*` placeholders replaced by segments from the `fromPath`,\n * or the `toPath` returned unchanged if it contains no placeholders.\n *\n * @throws If the `toPath` does not start with a `/`, indicating an invalid path format.\n *\n * @example\n * ```typescript\n * // Example with placeholders resolved\n * const resolvedPath = buildPathWithParams('/*\\/details', '/123/abc');\n * console.log(resolvedPath); // Outputs: '/123/details'\n *\n * // Example with a static path\n * const staticPath = buildPathWithParams('/static/path', '/base/unused');\n * console.log(staticPath); // Outputs: '/static/path'\n * ```\n */\nfunction buildPathWithParams(toPath, fromPath) {\n    if (toPath[0] !== '/') {\n        throw new Error(`Invalid toPath: The string must start with a '/'. Received: '${toPath}'`);\n    }\n    if (fromPath[0] !== '/') {\n        throw new Error(`Invalid fromPath: The string must start with a '/'. Received: '${fromPath}'`);\n    }\n    if (!toPath.includes('/*')) {\n        return toPath;\n    }\n    const fromPathParts = fromPath.split('/');\n    const toPathParts = toPath.split('/');\n    const resolvedParts = toPathParts.map((part, index) => toPathParts[index] === '*' ? fromPathParts[index] : part);\n    return joinUrlParts(...resolvedParts);\n}\nconst MATRIX_PARAMS_REGEX = /;[^/]+/g;\n/**\n * Removes Angular matrix parameters from a given URL path.\n *\n * This function takes a URL path string and removes any matrix parameters.\n * Matrix parameters are parts of a URL segment that start with a semicolon `;`.\n *\n * @param pathname - The URL path to remove matrix parameters from.\n * @returns The URL path with matrix parameters removed.\n *\n * @example\n * ```ts\n * stripMatrixParams('/path;param=value'); // returns '/path'\n * stripMatrixParams('/path;param=value/to;p=1/resource'); // returns '/path/to/resource'\n * stripMatrixParams('/path/to/resource'); // returns '/path/to/resource'\n * ```\n */\nfunction stripMatrixParams(pathname) {\n    // Use a regular expression to remove matrix parameters.\n    // This regex finds all occurrences of a semicolon followed by any characters\n    return pathname.includes(';') ? pathname.replace(MATRIX_PARAMS_REGEX, '') : pathname;\n}\n\n/**\n * Renders an Angular application or module to an HTML string.\n *\n * This function determines whether the provided `bootstrap` value is an Angular module\n * or a bootstrap function and invokes the appropriate rendering method (`renderModule` or `renderApplication`).\n *\n * @param html - The initial HTML document content.\n * @param bootstrap - An Angular module type or a function returning a promise that resolves to an `ApplicationRef`.\n * @param url - The application URL, used for route-based rendering in SSR.\n * @param platformProviders - An array of platform providers for the rendering process.\n * @param serverContext - A string representing the server context, providing additional metadata for SSR.\n * @returns A promise resolving to an object containing:\n *          - `hasNavigationError`: Indicates if a navigation error occurred.\n *          - `redirectTo`: (Optional) The redirect URL if a navigation redirect occurred.\n *          - `content`: A function returning a promise that resolves to the rendered HTML string.\n */\nasync function renderAngular(html, bootstrap, url, platformProviders, serverContext) {\n    // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n    const urlToRender = stripIndexHtmlFromURL(url);\n    const platformRef = platformServer([\n        {\n            provide: INITIAL_CONFIG,\n            useValue: {\n                url: urlToRender.href,\n                document: html,\n            },\n        },\n        {\n            provide: _SERVER_CONTEXT,\n            useValue: serverContext,\n        },\n        {\n            // An Angular Console Provider that does not print a set of predefined logs.\n            provide: _Console,\n            // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n            // which would require switching from `ts_library` to `ng_module`. This change\n            // would also necessitate various patches of `@angular/bazel` to support ESM.\n            useFactory: () => new Console(),\n        },\n        ...platformProviders,\n    ]);\n    let redirectTo;\n    let hasNavigationError = true;\n    try {\n        let applicationRef;\n        if (isNgModule(bootstrap)) {\n            const moduleRef = await platformRef.bootstrapModule(bootstrap);\n            applicationRef = moduleRef.injector.get(ApplicationRef);\n        }\n        else {\n            applicationRef = await bootstrap({ platformRef });\n        }\n        // Block until application is stable.\n        await applicationRef.whenStable();\n        // TODO(alanagius): Find a way to avoid rendering here especially for redirects as any output will be discarded.\n        const envInjector = applicationRef.injector;\n        const routerIsProvided = !!envInjector.get(ActivatedRoute, null);\n        const router = envInjector.get(Router);\n        const lastSuccessfulNavigation = router.lastSuccessfulNavigation;\n        if (!routerIsProvided) {\n            hasNavigationError = false;\n        }\n        else if (lastSuccessfulNavigation) {\n            hasNavigationError = false;\n            const { pathname, search, hash } = envInjector.get(PlatformLocation);\n            const finalUrl = [stripTrailingSlash(pathname), search, hash].join('');\n            if (urlToRender.href !== new URL(finalUrl, urlToRender.origin).href) {\n                redirectTo = finalUrl;\n            }\n        }\n        return {\n            hasNavigationError,\n            redirectTo,\n            content: () => new Promise((resolve, reject) => {\n                // Defer rendering to the next event loop iteration to avoid blocking, as most operations in `renderInternal` are synchronous.\n                setTimeout(() => {\n                    _renderInternal(platformRef, applicationRef)\n                        .then(resolve)\n                        .catch(reject)\n                        .finally(() => void asyncDestroyPlatform(platformRef));\n                }, 0);\n            }),\n        };\n    }\n    catch (error) {\n        await asyncDestroyPlatform(platformRef);\n        throw error;\n    }\n    finally {\n        if (hasNavigationError || redirectTo) {\n            void asyncDestroyPlatform(platformRef);\n        }\n    }\n}\n/**\n * Type guard to determine if a given value is an Angular module.\n * Angular modules are identified by the presence of the `ɵmod` static property.\n * This function helps distinguish between Angular modules and bootstrap functions.\n *\n * @param value - The value to be checked.\n * @returns True if the value is an Angular module (i.e., it has the `ɵmod` property), false otherwise.\n */\nfunction isNgModule(value) {\n    return 'ɵmod' in value;\n}\n/**\n * Gracefully destroys the application in a macrotask, allowing pending promises to resolve\n * and surfacing any potential errors to the user.\n *\n * @param platformRef - The platform reference to be destroyed.\n */\nfunction asyncDestroyPlatform(platformRef) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            if (!platformRef.destroyed) {\n                platformRef.destroy();\n            }\n            resolve();\n        }, 0);\n    });\n}\n\n/**\n * Creates a promise that resolves with the result of the provided `promise` or rejects with an\n * `AbortError` if the `AbortSignal` is triggered before the promise resolves.\n *\n * @param promise - The promise to monitor for completion.\n * @param signal - An `AbortSignal` used to monitor for an abort event. If the signal is aborted,\n *                 the returned promise will reject.\n * @param errorMessagePrefix - A custom message prefix to include in the error message when the operation is aborted.\n * @returns A promise that either resolves with the value of the provided `promise` or rejects with\n *          an `AbortError` if the `AbortSignal` is triggered.\n *\n * @throws {AbortError} If the `AbortSignal` is triggered before the `promise` resolves.\n */\nfunction promiseWithAbort(promise, signal, errorMessagePrefix) {\n    return new Promise((resolve, reject) => {\n        const abortHandler = () => {\n            reject(new DOMException(`${errorMessagePrefix} was aborted.\\n${signal.reason}`, 'AbortError'));\n        };\n        // Check for abort signal\n        if (signal.aborted) {\n            abortHandler();\n            return;\n        }\n        signal.addEventListener('abort', abortHandler, { once: true });\n        promise\n            .then(resolve)\n            .catch(reject)\n            .finally(() => {\n            signal.removeEventListener('abort', abortHandler);\n        });\n    });\n}\n\n/**\n * The internal path used for the app shell route.\n * @internal\n */\nconst APP_SHELL_ROUTE = 'ng-app-shell';\n/**\n * Identifies a particular kind of `ServerRenderingFeatureKind`.\n * @see {@link ServerRenderingFeature}\n */\nvar ServerRenderingFeatureKind;\n(function (ServerRenderingFeatureKind) {\n    ServerRenderingFeatureKind[ServerRenderingFeatureKind[\"AppShell\"] = 0] = \"AppShell\";\n    ServerRenderingFeatureKind[ServerRenderingFeatureKind[\"ServerRoutes\"] = 1] = \"ServerRoutes\";\n})(ServerRenderingFeatureKind || (ServerRenderingFeatureKind = {}));\n/**\n * Different rendering modes for server routes.\n * @see {@link withRoutes}\n * @see {@link ServerRoute}\n */\nvar RenderMode;\n(function (RenderMode) {\n    /** Server-Side Rendering (SSR) mode, where content is rendered on the server for each request. */\n    RenderMode[RenderMode[\"Server\"] = 0] = \"Server\";\n    /** Client-Side Rendering (CSR) mode, where content is rendered on the client side in the browser. */\n    RenderMode[RenderMode[\"Client\"] = 1] = \"Client\";\n    /** Static Site Generation (SSG) mode, where content is pre-rendered at build time and served as static files. */\n    RenderMode[RenderMode[\"Prerender\"] = 2] = \"Prerender\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Defines the fallback strategies for Static Site Generation (SSG) routes when a pre-rendered path is not available.\n * This is particularly relevant for routes with parameterized URLs where some paths might not be pre-rendered at build time.\n * @see {@link ServerRoutePrerenderWithParams}\n */\nvar PrerenderFallback;\n(function (PrerenderFallback) {\n    /**\n     * Fallback to Server-Side Rendering (SSR) if the pre-rendered path is not available.\n     * This strategy dynamically generates the page on the server at request time.\n     */\n    PrerenderFallback[PrerenderFallback[\"Server\"] = 0] = \"Server\";\n    /**\n     * Fallback to Client-Side Rendering (CSR) if the pre-rendered path is not available.\n     * This strategy allows the page to be rendered on the client side.\n     */\n    PrerenderFallback[PrerenderFallback[\"Client\"] = 1] = \"Client\";\n    /**\n     * No fallback; if the path is not pre-rendered, the server will not handle the request.\n     * This means the application will not provide any response for paths that are not pre-rendered.\n     */\n    PrerenderFallback[PrerenderFallback[\"None\"] = 2] = \"None\";\n})(PrerenderFallback || (PrerenderFallback = {}));\n/**\n * Token for providing the server routes configuration.\n * @internal\n */\nconst SERVER_ROUTES_CONFIG = new InjectionToken('SERVER_ROUTES_CONFIG');\n/**\n * Configures server-side routing for the application.\n *\n * This function registers an array of `ServerRoute` definitions, enabling server-side rendering\n * for specific URL paths. These routes are used to pre-render content on the server, improving\n * initial load performance and SEO.\n *\n * @param routes - An array of `ServerRoute` objects, each defining a server-rendered route.\n * @returns A `ServerRenderingFeature` object configuring server-side routes.\n *\n * @example\n * ```ts\n * import { provideServerRendering, withRoutes, ServerRoute, RenderMode } from '@angular/ssr';\n *\n * const serverRoutes: ServerRoute[] = [\n *   {\n *     path: '', // This renders the \"/\" route on the client (CSR)\n *     renderMode: RenderMode.Client,\n *   },\n *   {\n *     path: 'about', // This page is static, so we prerender it (SSG)\n *     renderMode: RenderMode.Prerender,\n *   },\n *   {\n *     path: 'profile', // This page requires user-specific data, so we use SSR\n *     renderMode: RenderMode.Server,\n *   },\n *   {\n *     path: '**', // All other routes will be rendered on the server (SSR)\n *     renderMode: RenderMode.Server,\n *   },\n * ];\n *\n * provideServerRendering(withRoutes(serverRoutes));\n * ```\n *\n * @see {@link provideServerRendering}\n * @see {@link ServerRoute}\n */\nfunction withRoutes(routes) {\n    const config = { routes };\n    return {\n        ɵkind: ServerRenderingFeatureKind.ServerRoutes,\n        ɵproviders: [\n            {\n                provide: SERVER_ROUTES_CONFIG,\n                useValue: config,\n            },\n        ],\n    };\n}\n/**\n * Configures the shell of the application.\n *\n * The app shell is a minimal, static HTML page that is served immediately, while the\n * full Angular application loads in the background. This improves perceived performance\n * by providing instant feedback to the user.\n *\n * This function configures the app shell route, which serves the provided component for\n * requests that do not match any defined server routes.\n *\n * @param component - The Angular component to render for the app shell. Can be a direct\n * component type or a dynamic import function.\n * @returns A `ServerRenderingFeature` object configuring the app shell.\n *\n * @example\n * ```ts\n * import { provideServerRendering, withAppShell, withRoutes } from '@angular/ssr';\n * import { AppShellComponent } from './app-shell.component';\n *\n * provideServerRendering(\n *   withRoutes(serverRoutes),\n *   withAppShell(AppShellComponent)\n * );\n * ```\n *\n * @example\n * ```ts\n * import { provideServerRendering, withAppShell, withRoutes } from '@angular/ssr';\n *\n * provideServerRendering(\n *   withRoutes(serverRoutes),\n *   withAppShell(() =>\n *     import('./app-shell.component').then((m) => m.AppShellComponent)\n *   )\n * );\n * ```\n *\n * @see {@link provideServerRendering}\n * @see {@link https://angular.dev/ecosystem/service-workers/app-shell App shell pattern on Angular.dev}\n */\nfunction withAppShell(component) {\n    const routeConfig = {\n        path: APP_SHELL_ROUTE,\n    };\n    if ('ɵcmp' in component) {\n        routeConfig.component = component;\n    }\n    else {\n        routeConfig.loadComponent = component;\n    }\n    return {\n        ɵkind: ServerRenderingFeatureKind.AppShell,\n        ɵproviders: [\n            {\n                provide: ROUTES,\n                useValue: routeConfig,\n                multi: true,\n            },\n            provideEnvironmentInitializer(() => {\n                const config = inject(SERVER_ROUTES_CONFIG);\n                config.appShellRoute = APP_SHELL_ROUTE;\n            }),\n        ],\n    };\n}\n/**\n * Configures server-side rendering for an Angular application.\n *\n * This function sets up the necessary providers for server-side rendering, including\n * support for server routes and app shell. It combines features configured using\n * `withRoutes` and `withAppShell` to provide a comprehensive server-side rendering setup.\n *\n * @param features - Optional features to configure additional server rendering behaviors.\n * @returns An `EnvironmentProviders` instance with the server-side rendering configuration.\n *\n * @example\n * Basic example of how you can enable server-side rendering in your application\n * when using the `bootstrapApplication` function:\n *\n * ```ts\n * import { bootstrapApplication, BootstrapContext } from '@angular/platform-browser';\n * import { provideServerRendering, withRoutes, withAppShell } from '@angular/ssr';\n * import { AppComponent } from './app/app.component';\n * import { SERVER_ROUTES } from './app/app.server.routes';\n * import { AppShellComponent } from './app/app-shell.component';\n *\n * const bootstrap = (context: BootstrapContext) =>\n *     bootstrapApplication(AppComponent, {\n *       providers: [\n *         provideServerRendering(\n *           withRoutes(SERVER_ROUTES),\n *           withAppShell(AppShellComponent),\n *         ),\n *       ],\n *     }, context);\n *\n * export default bootstrap;\n * ```\n * @see {@link withRoutes} configures server-side routing\n * @see {@link withAppShell} configures the application shell\n */\nfunction provideServerRendering(...features) {\n    let hasAppShell = false;\n    let hasServerRoutes = false;\n    const providers = [provideServerRendering$1()];\n    for (const { ɵkind, ɵproviders } of features) {\n        hasAppShell ||= ɵkind === ServerRenderingFeatureKind.AppShell;\n        hasServerRoutes ||= ɵkind === ServerRenderingFeatureKind.ServerRoutes;\n        providers.push(...ɵproviders);\n    }\n    if (!hasServerRoutes && hasAppShell) {\n        throw new Error(`Configuration error: found 'withAppShell()' without 'withRoutes()' in the same call to 'provideServerRendering()'.` +\n            `The 'withAppShell()' function requires 'withRoutes()' to be used.`);\n    }\n    return makeEnvironmentProviders(providers);\n}\n\n/**\n * A route tree implementation that supports efficient route matching, including support for wildcard routes.\n * This structure is useful for organizing and retrieving routes in a hierarchical manner,\n * enabling complex routing scenarios with nested paths.\n *\n * @typeParam AdditionalMetadata - Type of additional metadata that can be associated with route nodes.\n */\nclass RouteTree {\n    /**\n     * The root node of the route tree.\n     * All routes are stored and accessed relative to this root node.\n     */\n    root = this.createEmptyRouteTreeNode();\n    /**\n     * Inserts a new route into the route tree.\n     * The route is broken down into segments, and each segment is added to the tree.\n     * Parameterized segments (e.g., :id) are normalized to wildcards (*) for matching purposes.\n     *\n     * @param route - The route path to insert into the tree.\n     * @param metadata - Metadata associated with the route, excluding the route path itself.\n     */\n    insert(route, metadata) {\n        let node = this.root;\n        const segments = this.getPathSegments(route);\n        const normalizedSegments = [];\n        for (const segment of segments) {\n            // Replace parameterized segments (e.g., :id) with a wildcard (*) for matching\n            const normalizedSegment = segment[0] === ':' ? '*' : segment;\n            let childNode = node.children.get(normalizedSegment);\n            if (!childNode) {\n                childNode = this.createEmptyRouteTreeNode();\n                node.children.set(normalizedSegment, childNode);\n            }\n            node = childNode;\n            normalizedSegments.push(normalizedSegment);\n        }\n        // At the leaf node, store the full route and its associated metadata\n        node.metadata = {\n            ...metadata,\n            route: addLeadingSlash(normalizedSegments.join('/')),\n        };\n    }\n    /**\n     * Matches a given route against the route tree and returns the best matching route's metadata.\n     * The best match is determined by the lowest insertion index, meaning the earliest defined route\n     * takes precedence.\n     *\n     * @param route - The route path to match against the route tree.\n     * @returns The metadata of the best matching route or `undefined` if no match is found.\n     */\n    match(route) {\n        const segments = this.getPathSegments(route);\n        return this.traverseBySegments(segments)?.metadata;\n    }\n    /**\n     * Converts the route tree into a serialized format representation.\n     * This method converts the route tree into an array of metadata objects that describe the structure of the tree.\n     * The array represents the routes in a nested manner where each entry includes the route and its associated metadata.\n     *\n     * @returns An array of `RouteTreeNodeMetadata` objects representing the route tree structure.\n     *          Each object includes the `route` and associated metadata of a route.\n     */\n    toObject() {\n        return Array.from(this.traverse());\n    }\n    /**\n     * Constructs a `RouteTree` from an object representation.\n     * This method is used to recreate a `RouteTree` instance from an array of metadata objects.\n     * The array should be in the format produced by `toObject`, allowing for the reconstruction of the route tree\n     * with the same routes and metadata.\n     *\n     * @param value - An array of `RouteTreeNodeMetadata` objects that represent the serialized format of the route tree.\n     *                Each object should include a `route` and its associated metadata.\n     * @returns A new `RouteTree` instance constructed from the provided metadata objects.\n     */\n    static fromObject(value) {\n        const tree = new RouteTree();\n        for (const { route, ...metadata } of value) {\n            tree.insert(route, metadata);\n        }\n        return tree;\n    }\n    /**\n     * A generator function that recursively traverses the route tree and yields the metadata of each node.\n     * This allows for easy and efficient iteration over all nodes in the tree.\n     *\n     * @param node - The current node to start the traversal from. Defaults to the root node of the tree.\n     */\n    *traverse(node = this.root) {\n        if (node.metadata) {\n            yield node.metadata;\n        }\n        for (const childNode of node.children.values()) {\n            yield* this.traverse(childNode);\n        }\n    }\n    /**\n     * Extracts the path segments from a given route string.\n     *\n     * @param route - The route string from which to extract segments.\n     * @returns An array of path segments.\n     */\n    getPathSegments(route) {\n        return route.split('/').filter(Boolean);\n    }\n    /**\n     * Recursively traverses the route tree from a given node, attempting to match the remaining route segments.\n     * If the node is a leaf node (no more segments to match) and contains metadata, the node is yielded.\n     *\n     * This function prioritizes exact segment matches first, followed by wildcard matches (`*`),\n     * and finally deep wildcard matches (`**`) that consume all segments.\n     *\n     * @param segments - The array of route path segments to match against the route tree.\n     * @param node - The current node in the route tree to start traversal from. Defaults to the root node.\n     * @param currentIndex - The index of the segment in `remainingSegments` currently being matched.\n     * Defaults to `0` (the first segment).\n     *\n     * @returns The node that best matches the remaining segments or `undefined` if no match is found.\n     */\n    traverseBySegments(segments, node = this.root, currentIndex = 0) {\n        if (currentIndex >= segments.length) {\n            return node.metadata ? node : node.children.get('**');\n        }\n        if (!node.children.size) {\n            return undefined;\n        }\n        const segment = segments[currentIndex];\n        // 1. Attempt exact match with the current segment.\n        const exactMatch = node.children.get(segment);\n        if (exactMatch) {\n            const match = this.traverseBySegments(segments, exactMatch, currentIndex + 1);\n            if (match) {\n                return match;\n            }\n        }\n        // 2. Attempt wildcard match ('*').\n        const wildcardMatch = node.children.get('*');\n        if (wildcardMatch) {\n            const match = this.traverseBySegments(segments, wildcardMatch, currentIndex + 1);\n            if (match) {\n                return match;\n            }\n        }\n        // 3. Attempt double wildcard match ('**').\n        return node.children.get('**');\n    }\n    /**\n     * Creates an empty route tree node.\n     * This helper function is used during the tree construction.\n     *\n     * @returns A new, empty route tree node.\n     */\n    createEmptyRouteTreeNode() {\n        return {\n            children: new Map(),\n        };\n    }\n}\n\n/**\n * The maximum number of module preload link elements that should be added for\n * initial scripts.\n */\nconst MODULE_PRELOAD_MAX = 10;\n/**\n * Regular expression to match a catch-all route pattern in a URL path,\n * specifically one that ends with '/**'.\n */\nconst CATCH_ALL_REGEXP = /\\/(\\*\\*)$/;\n/**\n * Regular expression to match segments preceded by a colon in a string.\n */\nconst URL_PARAMETER_REGEXP = /(?<!\\\\):([^/]+)/g;\n/**\n * An set of HTTP status codes that are considered valid for redirect responses.\n */\nconst VALID_REDIRECT_RESPONSE_CODES = new Set([301, 302, 303, 307, 308]);\n/**\n * Handles a single route within the route tree and yields metadata or errors.\n *\n * @param options - Configuration options for handling the route.\n * @returns An async iterable iterator yielding `RouteTreeNodeMetadata` or an error object.\n */\nasync function* handleRoute(options) {\n    try {\n        const { metadata, currentRoutePath, route, compiler, parentInjector, serverConfigRouteTree, entryPointToBrowserMapping, invokeGetPrerenderParams, includePrerenderFallbackRoutes, } = options;\n        const { redirectTo, loadChildren, loadComponent, children, ɵentryName } = route;\n        if (ɵentryName && loadComponent) {\n            appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata);\n        }\n        if (metadata.renderMode === RenderMode.Prerender) {\n            yield* handleSSGRoute(serverConfigRouteTree, typeof redirectTo === 'string' ? redirectTo : undefined, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes);\n        }\n        else if (redirectTo !== undefined) {\n            if (metadata.status && !VALID_REDIRECT_RESPONSE_CODES.has(metadata.status)) {\n                yield {\n                    error: `The '${metadata.status}' status code is not a valid redirect response code. ` +\n                        `Please use one of the following redirect response codes: ${[...VALID_REDIRECT_RESPONSE_CODES.values()].join(', ')}.`,\n                };\n            }\n            else if (typeof redirectTo === 'string') {\n                yield {\n                    ...metadata,\n                    redirectTo: resolveRedirectTo(metadata.route, redirectTo),\n                };\n            }\n            else {\n                yield metadata;\n            }\n        }\n        else {\n            yield metadata;\n        }\n        // Recursively process child routes\n        if (children?.length) {\n            yield* traverseRoutesConfig({\n                ...options,\n                routes: children,\n                parentRoute: currentRoutePath,\n                parentPreloads: metadata.preload,\n            });\n        }\n        // Load and process lazy-loaded child routes\n        if (loadChildren) {\n            if (ɵentryName) {\n                appendPreloadToMetadata(ɵentryName, entryPointToBrowserMapping, metadata);\n            }\n            const routeInjector = route.providers\n                ? createEnvironmentInjector(route.providers, parentInjector.get(EnvironmentInjector), `Route: ${route.path}`)\n                : parentInjector;\n            const loadedChildRoutes = await _loadChildren(route, compiler, routeInjector).toPromise();\n            if (loadedChildRoutes) {\n                const { routes: childRoutes, injector = routeInjector } = loadedChildRoutes;\n                yield* traverseRoutesConfig({\n                    ...options,\n                    routes: childRoutes,\n                    parentInjector: injector,\n                    parentRoute: currentRoutePath,\n                    parentPreloads: metadata.preload,\n                });\n            }\n        }\n    }\n    catch (error) {\n        yield {\n            error: `Error in handleRoute for '${options.currentRoutePath}': ${error.message}`,\n        };\n    }\n}\n/**\n * Traverses an array of route configurations to generate route tree node metadata.\n *\n * This function processes each route and its children, handling redirects, SSG (Static Site Generation) settings,\n * and lazy-loaded routes. It yields route metadata for each route and its potential variants.\n *\n * @param options - The configuration options for traversing routes.\n * @returns An async iterable iterator yielding either route tree node metadata or an error object with an error message.\n */\nasync function* traverseRoutesConfig(options) {\n    const { routes: routeConfigs, parentPreloads, parentRoute, serverConfigRouteTree } = options;\n    for (const route of routeConfigs) {\n        const { matcher, path = matcher ? '**' : '' } = route;\n        const currentRoutePath = joinUrlParts(parentRoute, path);\n        if (matcher && serverConfigRouteTree) {\n            let foundMatch = false;\n            for (const matchedMetaData of serverConfigRouteTree.traverse()) {\n                if (!matchedMetaData.route.startsWith(currentRoutePath)) {\n                    continue;\n                }\n                foundMatch = true;\n                matchedMetaData.presentInClientRouter = true;\n                if (matchedMetaData.renderMode === RenderMode.Prerender) {\n                    yield {\n                        error: `The route '${stripLeadingSlash(currentRoutePath)}' is set for prerendering but has a defined matcher. ` +\n                            `Routes with matchers cannot use prerendering. Please specify a different 'renderMode'.`,\n                    };\n                    continue;\n                }\n                yield* handleRoute({\n                    ...options,\n                    currentRoutePath,\n                    route,\n                    metadata: {\n                        ...matchedMetaData,\n                        preload: parentPreloads,\n                        route: matchedMetaData.route,\n                        presentInClientRouter: undefined,\n                    },\n                });\n            }\n            if (!foundMatch) {\n                yield {\n                    error: `The route '${stripLeadingSlash(currentRoutePath)}' has a defined matcher but does not ` +\n                        'match any route in the server routing configuration. Please ensure this route is added to the server routing configuration.',\n                };\n            }\n            continue;\n        }\n        let matchedMetaData;\n        if (serverConfigRouteTree) {\n            matchedMetaData = serverConfigRouteTree.match(currentRoutePath);\n            if (!matchedMetaData) {\n                yield {\n                    error: `The '${stripLeadingSlash(currentRoutePath)}' route does not match any route defined in the server routing configuration. ` +\n                        'Please ensure this route is added to the server routing configuration.',\n                };\n                continue;\n            }\n            matchedMetaData.presentInClientRouter = true;\n        }\n        yield* handleRoute({\n            ...options,\n            metadata: {\n                renderMode: RenderMode.Prerender,\n                ...matchedMetaData,\n                preload: parentPreloads,\n                // Match Angular router behavior\n                // ['one', 'two', ''] -> 'one/two/'\n                // ['one', 'two', 'three'] -> 'one/two/three'\n                route: path === '' ? addTrailingSlash(currentRoutePath) : currentRoutePath,\n                presentInClientRouter: undefined,\n            },\n            currentRoutePath,\n            route,\n        });\n    }\n}\n/**\n * Appends preload information to the metadata object based on the specified entry-point and chunk mappings.\n *\n * This function extracts preload data for a given entry-point from the provided chunk mappings. It adds the\n * corresponding browser bundles to the metadata's preload list, ensuring no duplicates and limiting the total\n * preloads to a predefined maximum.\n */\nfunction appendPreloadToMetadata(entryName, entryPointToBrowserMapping, metadata) {\n    const existingPreloads = metadata.preload ?? [];\n    if (!entryPointToBrowserMapping || existingPreloads.length >= MODULE_PRELOAD_MAX) {\n        return;\n    }\n    const preload = entryPointToBrowserMapping[entryName];\n    if (!preload?.length) {\n        return;\n    }\n    // Merge existing preloads with new ones, ensuring uniqueness and limiting the total to the maximum allowed.\n    const combinedPreloads = new Set(existingPreloads);\n    for (const href of preload) {\n        combinedPreloads.add(href);\n        if (combinedPreloads.size === MODULE_PRELOAD_MAX) {\n            break;\n        }\n    }\n    metadata.preload = Array.from(combinedPreloads);\n}\n/**\n * Handles SSG (Static Site Generation) routes by invoking `getPrerenderParams` and yielding\n * all parameterized paths, returning any errors encountered.\n *\n * @param serverConfigRouteTree - The tree representing the server's routing setup.\n * @param redirectTo - Optional path to redirect to, if specified.\n * @param metadata - The metadata associated with the route tree node.\n * @param parentInjector - The dependency injection container for the parent route.\n * @param invokeGetPrerenderParams - A flag indicating whether to invoke the `getPrerenderParams` function.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result.\n * @returns An async iterable iterator that yields route tree node metadata for each SSG path or errors.\n */\nasync function* handleSSGRoute(serverConfigRouteTree, redirectTo, metadata, parentInjector, invokeGetPrerenderParams, includePrerenderFallbackRoutes) {\n    if (metadata.renderMode !== RenderMode.Prerender) {\n        throw new Error(`'handleSSGRoute' was called for a route which rendering mode is not prerender.`);\n    }\n    const { route: currentRoutePath, fallback, ...meta } = metadata;\n    const getPrerenderParams = 'getPrerenderParams' in meta ? meta.getPrerenderParams : undefined;\n    if ('getPrerenderParams' in meta) {\n        delete meta['getPrerenderParams'];\n    }\n    if (redirectTo !== undefined) {\n        meta.redirectTo = resolveRedirectTo(currentRoutePath, redirectTo);\n    }\n    const isCatchAllRoute = CATCH_ALL_REGEXP.test(currentRoutePath);\n    if ((isCatchAllRoute && !getPrerenderParams) ||\n        (!isCatchAllRoute && !URL_PARAMETER_REGEXP.test(currentRoutePath))) {\n        // Route has no parameters\n        yield {\n            ...meta,\n            route: currentRoutePath,\n        };\n        return;\n    }\n    if (invokeGetPrerenderParams) {\n        if (!getPrerenderParams) {\n            yield {\n                error: `The '${stripLeadingSlash(currentRoutePath)}' route uses prerendering and includes parameters, but 'getPrerenderParams' ` +\n                    `is missing. Please define 'getPrerenderParams' function for this route in your server routing configuration ` +\n                    `or specify a different 'renderMode'.`,\n            };\n            return;\n        }\n        if (serverConfigRouteTree) {\n            // Automatically resolve dynamic parameters for nested routes.\n            const catchAllRoutePath = isCatchAllRoute\n                ? currentRoutePath\n                : joinUrlParts(currentRoutePath, '**');\n            const match = serverConfigRouteTree.match(catchAllRoutePath);\n            if (match && match.renderMode === RenderMode.Prerender && !('getPrerenderParams' in match)) {\n                serverConfigRouteTree.insert(catchAllRoutePath, {\n                    ...match,\n                    presentInClientRouter: true,\n                    getPrerenderParams,\n                });\n            }\n        }\n        const parameters = await runInInjectionContext(parentInjector, () => getPrerenderParams());\n        try {\n            for (const params of parameters) {\n                const replacer = handlePrerenderParamsReplacement(params, currentRoutePath);\n                const routeWithResolvedParams = currentRoutePath\n                    .replace(URL_PARAMETER_REGEXP, replacer)\n                    .replace(CATCH_ALL_REGEXP, replacer);\n                yield {\n                    ...meta,\n                    route: routeWithResolvedParams,\n                    redirectTo: redirectTo === undefined\n                        ? undefined\n                        : resolveRedirectTo(routeWithResolvedParams, redirectTo),\n                };\n            }\n        }\n        catch (error) {\n            yield { error: `${error.message}` };\n            return;\n        }\n    }\n    // Handle fallback render modes\n    if (includePrerenderFallbackRoutes &&\n        (fallback !== PrerenderFallback.None || !invokeGetPrerenderParams)) {\n        yield {\n            ...meta,\n            route: currentRoutePath,\n            renderMode: fallback === PrerenderFallback.Client ? RenderMode.Client : RenderMode.Server,\n        };\n    }\n}\n/**\n * Creates a replacer function used for substituting parameter placeholders in a route path\n * with their corresponding values provided in the `params` object.\n *\n * @param params - An object mapping parameter names to their string values.\n * @param currentRoutePath - The current route path, used for constructing error messages.\n * @returns A function that replaces a matched parameter placeholder (e.g., ':id') with its corresponding value.\n */\nfunction handlePrerenderParamsReplacement(params, currentRoutePath) {\n    return (match) => {\n        const parameterName = match.slice(1);\n        const value = params[parameterName];\n        if (typeof value !== 'string') {\n            throw new Error(`The 'getPrerenderParams' function defined for the '${stripLeadingSlash(currentRoutePath)}' route ` +\n                `returned a non-string value for parameter '${parameterName}'. ` +\n                `Please make sure the 'getPrerenderParams' function returns values for all parameters ` +\n                'specified in this route.');\n        }\n        return parameterName === '**' ? `/${value}` : value;\n    };\n}\n/**\n * Resolves the `redirectTo` property for a given route.\n *\n * This function processes the `redirectTo` property to ensure that it correctly\n * resolves relative to the current route path. If `redirectTo` is an absolute path,\n * it is returned as is. If it is a relative path, it is resolved based on the current route path.\n *\n * @param routePath - The current route path.\n * @param redirectTo - The target path for redirection.\n * @returns The resolved redirect path as a string.\n */\nfunction resolveRedirectTo(routePath, redirectTo) {\n    if (redirectTo[0] === '/') {\n        // If the redirectTo path is absolute, return it as is.\n        return redirectTo;\n    }\n    // Resolve relative redirectTo based on the current route path.\n    const segments = routePath.replace(URL_PARAMETER_REGEXP, '*').split('/');\n    segments.pop(); // Remove the last segment to make it relative.\n    return joinUrlParts(...segments, redirectTo);\n}\n/**\n * Builds a server configuration route tree from the given server routes configuration.\n *\n * @param serverRoutesConfig - The server routes to be used for configuration.\n\n * @returns An object containing:\n * - `serverConfigRouteTree`: A populated `RouteTree` instance, which organizes the server routes\n *   along with their additional metadata.\n * - `errors`: An array of strings that list any errors encountered during the route tree construction\n *   process, such as invalid paths.\n */\nfunction buildServerConfigRouteTree({ routes, appShellRoute }) {\n    const serverRoutes = [...routes];\n    if (appShellRoute !== undefined) {\n        serverRoutes.unshift({\n            path: appShellRoute,\n            renderMode: RenderMode.Prerender,\n        });\n    }\n    const serverConfigRouteTree = new RouteTree();\n    const errors = [];\n    for (const { path, ...metadata } of serverRoutes) {\n        if (path[0] === '/') {\n            errors.push(`Invalid '${path}' route configuration: the path cannot start with a slash.`);\n            continue;\n        }\n        if ('getPrerenderParams' in metadata && (path.includes('/*/') || path.endsWith('/*'))) {\n            errors.push(`Invalid '${path}' route configuration: 'getPrerenderParams' cannot be used with a '*' route.`);\n            continue;\n        }\n        serverConfigRouteTree.insert(path, metadata);\n    }\n    return { serverConfigRouteTree, errors };\n}\n/**\n * Retrieves routes from the given Angular application.\n *\n * This function initializes an Angular platform, bootstraps the application or module,\n * and retrieves routes from the Angular router configuration. It handles both module-based\n * and function-based bootstrapping. It yields the resulting routes as `RouteTreeNodeMetadata` objects or errors.\n *\n * @param bootstrap - A function that returns a promise resolving to an `ApplicationRef` or an Angular module to bootstrap.\n * @param document - The initial HTML document used for server-side rendering.\n * This document is necessary to render the application on the server.\n * @param url - The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n * for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n * @param invokeGetPrerenderParams - A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n * to handle prerendering paths. Defaults to `false`.\n * @param includePrerenderFallbackRoutes - A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n * @param entryPointToBrowserMapping - Maps the entry-point name to the associated JavaScript browser bundles.\n *\n * @returns A promise that resolves to an object of type `AngularRouterConfigResult` or errors.\n */\nasync function getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams = false, includePrerenderFallbackRoutes = true, entryPointToBrowserMapping = undefined) {\n    const { protocol, host } = url;\n    // Create and initialize the Angular platform for server-side rendering.\n    const platformRef = platformServer([\n        {\n            provide: INITIAL_CONFIG,\n            useValue: { document, url: `${protocol}//${host}/` },\n        },\n        {\n            // An Angular Console Provider that does not print a set of predefined logs.\n            provide: _Console,\n            // Using `useClass` would necessitate decorating `Console` with `@Injectable`,\n            // which would require switching from `ts_library` to `ng_module`. This change\n            // would also necessitate various patches of `@angular/bazel` to support ESM.\n            useFactory: () => new Console(),\n        },\n        {\n            provide: _ENABLE_ROOT_COMPONENT_BOOTSTRAP,\n            useValue: false,\n        },\n    ]);\n    try {\n        let applicationRef;\n        if (isNgModule(bootstrap)) {\n            const moduleRef = await platformRef.bootstrapModule(bootstrap);\n            applicationRef = moduleRef.injector.get(ApplicationRef);\n        }\n        else {\n            applicationRef = await bootstrap({ platformRef });\n        }\n        const injector = applicationRef.injector;\n        const router = injector.get(Router);\n        // Workaround to unblock navigation when `withEnabledBlockingInitialNavigation()` is used.\n        // This is necessary because route extraction disables component bootstrapping.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        router.navigationTransitions.afterPreactivation()?.next?.();\n        // Wait until the application is stable.\n        await applicationRef.whenStable();\n        const errors = [];\n        const rawBaseHref = injector.get(APP_BASE_HREF, null, { optional: true }) ??\n            injector.get(PlatformLocation).getBaseHrefFromDOM();\n        const { pathname: baseHref } = new URL(rawBaseHref, 'http://localhost');\n        const compiler = injector.get(Compiler);\n        const serverRoutesConfig = injector.get(SERVER_ROUTES_CONFIG, null, { optional: true });\n        let serverConfigRouteTree;\n        if (serverRoutesConfig) {\n            const result = buildServerConfigRouteTree(serverRoutesConfig);\n            serverConfigRouteTree = result.serverConfigRouteTree;\n            errors.push(...result.errors);\n        }\n        if (errors.length) {\n            return {\n                baseHref,\n                routes: [],\n                errors,\n            };\n        }\n        const routesResults = [];\n        if (router.config.length) {\n            // Retrieve all routes from the Angular router configuration.\n            const traverseRoutes = traverseRoutesConfig({\n                routes: router.config,\n                compiler,\n                parentInjector: injector,\n                parentRoute: '',\n                serverConfigRouteTree,\n                invokeGetPrerenderParams,\n                includePrerenderFallbackRoutes,\n                entryPointToBrowserMapping,\n            });\n            const seenRoutes = new Set();\n            for await (const routeMetadata of traverseRoutes) {\n                if ('error' in routeMetadata) {\n                    errors.push(routeMetadata.error);\n                    continue;\n                }\n                // If a result already exists for the exact same route, subsequent matches should be ignored.\n                // This aligns with Angular's app router behavior, which prioritizes the first route.\n                const routePath = routeMetadata.route;\n                if (!seenRoutes.has(routePath)) {\n                    routesResults.push(routeMetadata);\n                    seenRoutes.add(routePath);\n                }\n            }\n            // This timeout is necessary to prevent 'adev' from hanging in production builds.\n            // The exact cause is unclear, but removing it leads to the issue.\n            await new Promise((resolve) => setTimeout(resolve, 0));\n            if (serverConfigRouteTree) {\n                for (const { route, presentInClientRouter } of serverConfigRouteTree.traverse()) {\n                    if (presentInClientRouter || route.endsWith('/**')) {\n                        // Skip if matched or it's the catch-all route.\n                        continue;\n                    }\n                    errors.push(`The '${stripLeadingSlash(route)}' server route does not match any routes defined in the Angular ` +\n                        `routing configuration (typically provided as a part of the 'provideRouter' call). ` +\n                        'Please make sure that the mentioned server route is present in the Angular routing configuration.');\n                }\n            }\n        }\n        else {\n            const rootRouteMetadata = serverConfigRouteTree?.match('') ?? {\n                route: '',\n                renderMode: RenderMode.Prerender,\n            };\n            routesResults.push({\n                ...rootRouteMetadata,\n                // Matched route might be `/*` or `/**`, which would make Angular serve all routes rather than just `/`.\n                // So we limit to just `/` for the empty app router case.\n                route: '',\n            });\n        }\n        return {\n            baseHref,\n            routes: routesResults,\n            errors,\n            appShellRoute: serverRoutesConfig?.appShellRoute,\n        };\n    }\n    finally {\n        platformRef.destroy();\n    }\n}\n/**\n * Asynchronously extracts routes from the Angular application configuration\n * and creates a `RouteTree` to manage server-side routing.\n *\n * @param options - An object containing the following options:\n *  - `url`: The URL for server-side rendering. The URL is used to configure `ServerPlatformLocation`. This configuration is crucial\n *     for ensuring that API requests for relative paths succeed, which is essential for accurate route extraction.\n *     See:\n *      - https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51\n *      - https://github.com/angular/angular/blob/6882cc7d9eed26d3caeedca027452367ba25f2b9/packages/platform-server/src/http.ts#L44\n *  - `manifest`: An optional `AngularAppManifest` that contains the application's routing and configuration details.\n *     If not provided, the default manifest is retrieved using `getAngularAppManifest()`.\n *  - `invokeGetPrerenderParams`: A boolean flag indicating whether to invoke `getPrerenderParams` for parameterized SSG routes\n *     to handle prerendering paths. Defaults to `false`.\n *  - `includePrerenderFallbackRoutes`: A flag indicating whether to include fallback routes in the result. Defaults to `true`.\n *  - `signal`: An optional `AbortSignal` that can be used to abort the operation.\n *\n * @returns A promise that resolves to an object containing:\n *  - `routeTree`: A populated `RouteTree` containing all extracted routes from the Angular application.\n *  - `appShellRoute`: The specified route for the app-shell, if configured.\n *  - `errors`: An array of strings representing any errors encountered during the route extraction process.\n */\nfunction extractRoutesAndCreateRouteTree(options) {\n    const { url, manifest = getAngularAppManifest(), invokeGetPrerenderParams = false, includePrerenderFallbackRoutes = true, signal, } = options;\n    async function extract() {\n        const routeTree = new RouteTree();\n        const document = await new ServerAssets(manifest).getIndexServerHtml().text();\n        const bootstrap = await manifest.bootstrap();\n        const { baseHref, appShellRoute, routes, errors } = await getRoutesFromAngularRouterConfig(bootstrap, document, url, invokeGetPrerenderParams, includePrerenderFallbackRoutes, manifest.entryPointToBrowserMapping);\n        for (const { route, ...metadata } of routes) {\n            if (metadata.redirectTo !== undefined) {\n                metadata.redirectTo = joinUrlParts(baseHref, metadata.redirectTo);\n            }\n            // Remove undefined fields\n            // Helps avoid unnecessary test updates\n            for (const [key, value] of Object.entries(metadata)) {\n                if (value === undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    delete metadata[key];\n                }\n            }\n            const fullRoute = joinUrlParts(baseHref, route);\n            routeTree.insert(fullRoute, metadata);\n        }\n        return {\n            appShellRoute,\n            routeTree,\n            errors,\n        };\n    }\n    return signal ? promiseWithAbort(extract(), signal, 'Routes extraction') : extract();\n}\n\n/**\n * Manages a collection of hooks and provides methods to register and execute them.\n * Hooks are functions that can be invoked with specific arguments to allow modifications or enhancements.\n */\nclass Hooks {\n    /**\n     * A map of hook names to arrays of hook functions.\n     * Each hook name can have multiple associated functions, which are executed in sequence.\n     */\n    store = new Map();\n    /**\n     * Executes all hooks associated with the specified name, passing the given argument to each hook function.\n     * The hooks are invoked sequentially, and the argument may be modified by each hook.\n     *\n     * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n     * @param name - The name of the hook whose functions will be executed.\n     * @param context - The input value to be passed to each hook function. The value is mutated by each hook function.\n     * @returns A promise that resolves once all hook functions have been executed.\n     *\n     * @example\n     * ```typescript\n     * const hooks = new Hooks();\n     * hooks.on('html:transform:pre', async (ctx) => {\n     *   ctx.html = ctx.html.replace(/foo/g, 'bar');\n     *   return ctx.html;\n     * });\n     * const result = await hooks.run('html:transform:pre', { html: '<div>foo</div>' });\n     * console.log(result); // '<div>bar</div>'\n     * ```\n     * @internal\n     */\n    async run(name, context) {\n        const hooks = this.store.get(name);\n        switch (name) {\n            case 'html:transform:pre': {\n                if (!hooks) {\n                    return context.html;\n                }\n                const ctx = { ...context };\n                for (const hook of hooks) {\n                    ctx.html = await hook(ctx);\n                }\n                return ctx.html;\n            }\n            default:\n                throw new Error(`Running hook \"${name}\" is not supported.`);\n        }\n    }\n    /**\n     * Registers a new hook function under the specified hook name.\n     * This function should be a function that takes an argument of type `T` and returns a `string` or `Promise<string>`.\n     *\n     * @template Hook - The type of the hook name. It should be one of the keys of `HooksMapping`.\n     * @param name - The name of the hook under which the function will be registered.\n     * @param handler - A function to be executed when the hook is triggered. The handler will be called with an argument\n     *                  that may be modified by the hook functions.\n     *\n     * @remarks\n     * - If there are existing handlers registered under the given hook name, the new handler will be added to the list.\n     * - If no handlers are registered under the given hook name, a new list will be created with the handler as its first element.\n     *\n     * @example\n     * ```typescript\n     * hooks.on('html:transform:pre', async (ctx) => {\n     *   return ctx.html.replace(/foo/g, 'bar');\n     * });\n     * ```\n     */\n    on(name, handler) {\n        const hooks = this.store.get(name);\n        if (hooks) {\n            hooks.push(handler);\n        }\n        else {\n            this.store.set(name, [handler]);\n        }\n    }\n    /**\n     * Checks if there are any hooks registered under the specified name.\n     *\n     * @param name - The name of the hook to check.\n     * @returns `true` if there are hooks registered under the specified name, otherwise `false`.\n     */\n    has(name) {\n        return !!this.store.get(name)?.length;\n    }\n}\n\n/**\n * Manages the application's server routing logic by building and maintaining a route tree.\n *\n * This class is responsible for constructing the route tree from the Angular application\n * configuration and using it to match incoming requests to the appropriate routes.\n */\nclass ServerRouter {\n    routeTree;\n    /**\n     * Creates an instance of the `ServerRouter`.\n     *\n     * @param routeTree - An instance of `RouteTree` that holds the routing information.\n     * The `RouteTree` is used to match request URLs to the appropriate route metadata.\n     */\n    constructor(routeTree) {\n        this.routeTree = routeTree;\n    }\n    /**\n     * Static property to track the ongoing build promise.\n     */\n    static #extractionPromise;\n    /**\n     * Creates or retrieves a `ServerRouter` instance based on the provided manifest and URL.\n     *\n     * If the manifest contains pre-built routes, a new `ServerRouter` is immediately created.\n     * Otherwise, it builds the router by extracting routes from the Angular configuration\n     * asynchronously. This method ensures that concurrent builds are prevented by re-using\n     * the same promise.\n     *\n     * @param manifest - An instance of `AngularAppManifest` that contains the route information.\n     * @param url - The URL for server-side rendering. The URL is needed to configure `ServerPlatformLocation`.\n     * This is necessary to ensure that API requests for relative paths succeed, which is crucial for correct route extraction.\n     * [Reference](https://github.com/angular/angular/blob/d608b857c689d17a7ffa33bbb510301014d24a17/packages/platform-server/src/location.ts#L51)\n     * @returns A promise resolving to a `ServerRouter` instance.\n     */\n    static from(manifest, url) {\n        if (manifest.routes) {\n            const routeTree = RouteTree.fromObject(manifest.routes);\n            return Promise.resolve(new ServerRouter(routeTree));\n        }\n        // Create and store a new promise for the build process.\n        // This prevents concurrent builds by re-using the same promise.\n        ServerRouter.#extractionPromise ??= extractRoutesAndCreateRouteTree({ url, manifest })\n            .then(({ routeTree, errors }) => {\n            if (errors.length > 0) {\n                throw new Error('Error(s) occurred while extracting routes:\\n' +\n                    errors.map((error) => `- ${error}`).join('\\n'));\n            }\n            return new ServerRouter(routeTree);\n        })\n            .finally(() => {\n            ServerRouter.#extractionPromise = undefined;\n        });\n        return ServerRouter.#extractionPromise;\n    }\n    /**\n     * Matches a request URL against the route tree to retrieve route metadata.\n     *\n     * This method strips 'index.html' from the URL if it is present and then attempts\n     * to find a match in the route tree. If a match is found, it returns the associated\n     * route metadata; otherwise, it returns `undefined`.\n     *\n     * @param url - The URL to be matched against the route tree.\n     * @returns The metadata for the matched route or `undefined` if no match is found.\n     */\n    match(url) {\n        // Strip 'index.html' from URL if present.\n        // A request to `http://www.example.com/page/index.html` will render the Angular route corresponding to `http://www.example.com/page`.\n        let { pathname } = stripIndexHtmlFromURL(url);\n        pathname = stripMatrixParams(pathname);\n        pathname = decodeURIComponent(pathname);\n        return this.routeTree.match(pathname);\n    }\n}\n\n/**\n * Generates a SHA-256 hash of the provided string.\n *\n * @param data - The input string to be hashed.\n * @returns A promise that resolves to the SHA-256 hash of the input,\n * represented as a hexadecimal string.\n */\nasync function sha256(data) {\n    const encodedData = new TextEncoder().encode(data);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', encodedData);\n    const hashParts = [];\n    for (const h of new Uint8Array(hashBuffer)) {\n        hashParts.push(h.toString(16).padStart(2, '0'));\n    }\n    return hashParts.join('');\n}\n\n/**\n * Pattern used to extract the media query set by Beasties in an `onload` handler.\n */\nconst MEDIA_SET_HANDLER_PATTERN = /^this\\.media=[\"'](.*)[\"'];?$/;\n/**\n * Name of the attribute used to save the Beasties media query so it can be re-assigned on load.\n */\nconst CSP_MEDIA_ATTR = 'ngCspMedia';\n/**\n * Script that dynamically updates the `media` attribute of `<link>` tags based on a custom attribute (`CSP_MEDIA_ATTR`).\n *\n * NOTE:\n * We do not use `document.querySelectorAll('link').forEach((s) => s.addEventListener('load', ...)`\n * because load events are not always triggered reliably on Chrome.\n * See: https://github.com/angular/angular-cli/issues/26932 and https://crbug.com/1521256\n *\n * The script:\n * - Ensures the event target is a `<link>` tag with the `CSP_MEDIA_ATTR` attribute.\n * - Updates the `media` attribute with the value of `CSP_MEDIA_ATTR` and then removes the attribute.\n * - Removes the event listener when all relevant `<link>` tags have been processed.\n * - Uses event capturing (the `true` parameter) since load events do not bubble up the DOM.\n */\nconst LINK_LOAD_SCRIPT_CONTENT = /* @__PURE__ */ (() => `(() => {\n  const CSP_MEDIA_ATTR = '${CSP_MEDIA_ATTR}';\n  const documentElement = document.documentElement;\n\n  // Listener for load events on link tags.\n  const listener = (e) => {\n    const target = e.target;\n    if (\n      !target ||\n      target.tagName !== 'LINK' ||\n      !target.hasAttribute(CSP_MEDIA_ATTR)\n    ) {\n      return;\n    }\n\n    target.media = target.getAttribute(CSP_MEDIA_ATTR);\n    target.removeAttribute(CSP_MEDIA_ATTR);\n\n    if (!document.head.querySelector(\\`link[\\${CSP_MEDIA_ATTR}]\\`)) {\n      documentElement.removeEventListener('load', listener);\n    }\n  };\n\n  documentElement.addEventListener('load', listener, true);\n})();`)();\nclass BeastiesBase extends Beasties {\n}\n/* eslint-enable @typescript-eslint/no-unsafe-declaration-merging */\nclass InlineCriticalCssProcessor extends BeastiesBase {\n    readFile;\n    outputPath;\n    addedCspScriptsDocuments = new WeakSet();\n    documentNonces = new WeakMap();\n    constructor(readFile, outputPath) {\n        super({\n            logger: {\n                // eslint-disable-next-line no-console\n                warn: (s) => console.warn(s),\n                // eslint-disable-next-line no-console\n                error: (s) => console.error(s),\n                info: () => { },\n            },\n            logLevel: 'warn',\n            path: outputPath,\n            publicPath: undefined,\n            compress: false,\n            pruneSource: false,\n            reduceInlineStyles: false,\n            mergeStylesheets: false,\n            // Note: if `preload` changes to anything other than `media`, the logic in\n            // `embedLinkedStylesheet` will have to be updated.\n            preload: 'media',\n            noscriptFallback: true,\n            inlineFonts: true,\n        });\n        this.readFile = readFile;\n        this.outputPath = outputPath;\n    }\n    /**\n     * Override of the Beasties `embedLinkedStylesheet` method\n     * that makes it work with Angular's CSP APIs.\n     */\n    async embedLinkedStylesheet(link, document) {\n        if (link.getAttribute('media') === 'print' && link.next?.name === 'noscript') {\n            // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n            // NB: this is only needed for the webpack based builders.\n            const media = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n            if (media) {\n                link.removeAttribute('onload');\n                link.setAttribute('media', media[1]);\n                link?.next?.remove();\n            }\n        }\n        const returnValue = await super.embedLinkedStylesheet(link, document);\n        const cspNonce = this.findCspNonce(document);\n        if (cspNonce) {\n            const beastiesMedia = link.getAttribute('onload')?.match(MEDIA_SET_HANDLER_PATTERN);\n            if (beastiesMedia) {\n                // If there's a Beasties-generated `onload` handler and the file has an Angular CSP nonce,\n                // we have to remove the handler, because it's incompatible with CSP. We save the value\n                // in a different attribute and we generate a script tag with the nonce that uses\n                // `addEventListener` to apply the media query instead.\n                link.removeAttribute('onload');\n                link.setAttribute(CSP_MEDIA_ATTR, beastiesMedia[1]);\n                this.conditionallyInsertCspLoadingScript(document, cspNonce, link);\n            }\n            // Ideally we would hook in at the time Beasties inserts the `style` tags, but there isn't\n            // a way of doing that at the moment so we fall back to doing it any time a `link` tag is\n            // inserted. We mitigate it by only iterating the direct children of the `<head>` which\n            // should be pretty shallow.\n            document.head.children.forEach((child) => {\n                if (child.tagName === 'style' && !child.hasAttribute('nonce')) {\n                    child.setAttribute('nonce', cspNonce);\n                }\n            });\n        }\n        return returnValue;\n    }\n    /**\n     * Finds the CSP nonce for a specific document.\n     */\n    findCspNonce(document) {\n        if (this.documentNonces.has(document)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.documentNonces.get(document);\n        }\n        // HTML attribute are case-insensitive, but the parser used by Beasties is case-sensitive.\n        const nonceElement = document.querySelector('[ngCspNonce], [ngcspnonce]');\n        const cspNonce = nonceElement?.getAttribute('ngCspNonce') || nonceElement?.getAttribute('ngcspnonce') || null;\n        this.documentNonces.set(document, cspNonce);\n        return cspNonce;\n    }\n    /**\n     * Inserts the `script` tag that swaps the critical CSS at runtime,\n     * if one hasn't been inserted into the document already.\n     */\n    conditionallyInsertCspLoadingScript(document, nonce, link) {\n        if (this.addedCspScriptsDocuments.has(document)) {\n            return;\n        }\n        if (document.head.textContent.includes(LINK_LOAD_SCRIPT_CONTENT)) {\n            // Script was already added during the build.\n            this.addedCspScriptsDocuments.add(document);\n            return;\n        }\n        const script = document.createElement('script');\n        script.setAttribute('nonce', nonce);\n        script.textContent = LINK_LOAD_SCRIPT_CONTENT;\n        // Prepend the script to the head since it needs to\n        // run as early as possible, before the `link` tags.\n        document.head.insertBefore(script, link);\n        this.addedCspScriptsDocuments.add(document);\n    }\n}\n\n/**\n * A Least Recently Used (LRU) cache implementation.\n *\n * This cache stores a fixed number of key-value pairs, and when the cache exceeds its capacity,\n * the least recently accessed items are evicted.\n *\n * @template Key - The type of the cache keys.\n * @template Value - The type of the cache values.\n */\nclass LRUCache {\n    /**\n     * The maximum number of items the cache can hold.\n     */\n    capacity;\n    /**\n     * Internal storage for the cache, mapping keys to their associated nodes in the linked list.\n     */\n    cache = new Map();\n    /**\n     * Head of the doubly linked list, representing the most recently used item.\n     */\n    head;\n    /**\n     * Tail of the doubly linked list, representing the least recently used item.\n     */\n    tail;\n    /**\n     * Creates a new LRUCache instance.\n     * @param capacity The maximum number of items the cache can hold.\n     */\n    constructor(capacity) {\n        this.capacity = capacity;\n    }\n    /**\n     * Gets the value associated with the given key.\n     * @param key The key to retrieve the value for.\n     * @returns The value associated with the key, or undefined if the key is not found.\n     */\n    get(key) {\n        const node = this.cache.get(key);\n        if (node) {\n            this.moveToHead(node);\n            return node.value;\n        }\n        return undefined;\n    }\n    /**\n     * Puts a key-value pair into the cache.\n     * If the key already exists, the value is updated.\n     * If the cache is full, the least recently used item is evicted.\n     * @param key The key to insert or update.\n     * @param value The value to associate with the key.\n     */\n    put(key, value) {\n        const cachedNode = this.cache.get(key);\n        if (cachedNode) {\n            // Update existing node\n            cachedNode.value = value;\n            this.moveToHead(cachedNode);\n            return;\n        }\n        // Create a new node\n        const newNode = { key, value, prev: undefined, next: undefined };\n        this.cache.set(key, newNode);\n        this.addToHead(newNode);\n        if (this.cache.size > this.capacity) {\n            // Evict the LRU item\n            const tail = this.removeTail();\n            if (tail) {\n                this.cache.delete(tail.key);\n            }\n        }\n    }\n    /**\n     * Adds a node to the head of the linked list.\n     * @param node The node to add.\n     */\n    addToHead(node) {\n        node.next = this.head;\n        node.prev = undefined;\n        if (this.head) {\n            this.head.prev = node;\n        }\n        this.head = node;\n        if (!this.tail) {\n            this.tail = node;\n        }\n    }\n    /**\n     * Removes a node from the linked list.\n     * @param node The node to remove.\n     */\n    removeNode(node) {\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        else {\n            this.head = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        else {\n            this.tail = node.prev;\n        }\n    }\n    /**\n     * Moves a node to the head of the linked list.\n     * @param node The node to move.\n     */\n    moveToHead(node) {\n        this.removeNode(node);\n        this.addToHead(node);\n    }\n    /**\n     * Removes the tail node from the linked list.\n     * @returns The removed tail node, or undefined if the list is empty.\n     */\n    removeTail() {\n        const node = this.tail;\n        if (node) {\n            this.removeNode(node);\n        }\n        return node;\n    }\n}\n\n/**\n * Maximum number of critical CSS entries the cache can store.\n * This value determines the capacity of the LRU (Least Recently Used) cache, which stores critical CSS for pages.\n */\nconst MAX_INLINE_CSS_CACHE_ENTRIES = 50;\n/**\n * A mapping of `RenderMode` enum values to corresponding string representations.\n *\n * This record is used to map each `RenderMode` to a specific string value that represents\n * the server context. The string values are used internally to differentiate\n * between various rendering strategies when processing routes.\n *\n * - `RenderMode.Prerender` maps to `'ssg'` (Static Site Generation).\n * - `RenderMode.Server` maps to `'ssr'` (Server-Side Rendering).\n * - `RenderMode.Client` maps to an empty string `''` (Client-Side Rendering, no server context needed).\n */\nconst SERVER_CONTEXT_VALUE = {\n    [RenderMode.Prerender]: 'ssg',\n    [RenderMode.Server]: 'ssr',\n    [RenderMode.Client]: '',\n};\n/**\n * Represents a locale-specific Angular server application managed by the server application engine.\n *\n * The `AngularServerApp` class handles server-side rendering and asset management for a specific locale.\n */\nclass AngularServerApp {\n    options;\n    /**\n     * Whether prerendered routes should be rendered on demand or served directly.\n     *\n     * @see {@link AngularServerAppOptions.allowStaticRouteRender} for more details.\n     */\n    allowStaticRouteRender;\n    /**\n     * Hooks for extending or modifying server behavior.\n     *\n     * @see {@link AngularServerAppOptions.hooks} for more details.\n     */\n    hooks;\n    /**\n     * Constructs an instance of `AngularServerApp`.\n     *\n     * @param options Optional configuration options for the server application.\n     */\n    constructor(options = {}) {\n        this.options = options;\n        this.allowStaticRouteRender = this.options.allowStaticRouteRender ?? false;\n        this.hooks = options.hooks ?? new Hooks();\n        if (this.manifest.inlineCriticalCss) {\n            this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor((path) => {\n                const fileName = path.split('/').pop() ?? path;\n                return this.assets.getServerAsset(fileName).text();\n            });\n        }\n    }\n    /**\n     * The manifest associated with this server application.\n     */\n    manifest = getAngularAppManifest();\n    /**\n     * An instance of ServerAsset that handles server-side asset.\n     */\n    assets = new ServerAssets(this.manifest);\n    /**\n     * The router instance used for route matching and handling.\n     */\n    router;\n    /**\n     * The `inlineCriticalCssProcessor` is responsible for handling critical CSS inlining.\n     */\n    inlineCriticalCssProcessor;\n    /**\n     * The bootstrap mechanism for the server application.\n     */\n    boostrap;\n    /**\n     * Decorder used to convert a string to a Uint8Array.\n     */\n    textDecoder = new TextEncoder();\n    /**\n     * A cache that stores critical CSS to avoid re-processing for every request, improving performance.\n     * This cache uses a Least Recently Used (LRU) eviction policy.\n     *\n     * @see {@link MAX_INLINE_CSS_CACHE_ENTRIES} for the maximum number of entries this cache can hold.\n     */\n    criticalCssLRUCache = new LRUCache(MAX_INLINE_CSS_CACHE_ENTRIES);\n    /**\n     * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n     * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n     *\n     * @param request - The HTTP request to handle.\n     * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n     * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n     *\n     * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n     * corresponding to `https://www.example.com/page`.\n     */\n    async handle(request, requestContext) {\n        const url = new URL(request.url);\n        this.router ??= await ServerRouter.from(this.manifest, url);\n        const matchedRoute = this.router.match(url);\n        if (!matchedRoute) {\n            // Not a known Angular route.\n            return null;\n        }\n        const { redirectTo, status, renderMode } = matchedRoute;\n        if (redirectTo !== undefined) {\n            return createRedirectResponse(buildPathWithParams(redirectTo, url.pathname), status);\n        }\n        if (renderMode === RenderMode.Prerender) {\n            const response = await this.handleServe(request, matchedRoute);\n            if (response) {\n                return response;\n            }\n        }\n        return promiseWithAbort(this.handleRendering(request, matchedRoute, requestContext), request.signal, `Request for: ${request.url}`);\n    }\n    /**\n     * Handles serving a prerendered static asset if available for the matched route.\n     *\n     * This method only supports `GET` and `HEAD` requests.\n     *\n     * @param request - The incoming HTTP request for serving a static page.\n     * @param matchedRoute - The metadata of the matched route for rendering.\n     * @returns A promise that resolves to a `Response` object if the prerendered page is found, or `null`.\n     */\n    async handleServe(request, matchedRoute) {\n        const { headers, renderMode } = matchedRoute;\n        if (renderMode !== RenderMode.Prerender) {\n            return null;\n        }\n        const { method } = request;\n        if (method !== 'GET' && method !== 'HEAD') {\n            return null;\n        }\n        const assetPath = this.buildServerAssetPathFromRequest(request);\n        const { manifest: { locale }, assets, } = this;\n        if (!assets.hasServerAsset(assetPath)) {\n            return null;\n        }\n        const { text, hash, size } = assets.getServerAsset(assetPath);\n        const etag = `\"${hash}\"`;\n        return request.headers.get('if-none-match') === etag\n            ? new Response(undefined, { status: 304, statusText: 'Not Modified' })\n            : new Response(await text(), {\n                headers: {\n                    'Content-Length': size.toString(),\n                    'ETag': etag,\n                    'Content-Type': 'text/html;charset=UTF-8',\n                    ...(locale !== undefined ? { 'Content-Language': locale } : {}),\n                    ...headers,\n                },\n            });\n    }\n    /**\n     * Handles the server-side rendering process for the given HTTP request.\n     * This method matches the request URL to a route and performs rendering if a matching route is found.\n     *\n     * @param request - The incoming HTTP request to be processed.\n     * @param matchedRoute - The metadata of the matched route for rendering.\n     * @param requestContext - Optional additional context for rendering, such as request metadata.\n     *\n     * @returns A promise that resolves to the rendered response, or null if no matching route is found.\n     */\n    async handleRendering(request, matchedRoute, requestContext) {\n        const { renderMode, headers, status, preload } = matchedRoute;\n        if (!this.allowStaticRouteRender && renderMode === RenderMode.Prerender) {\n            return null;\n        }\n        const url = new URL(request.url);\n        const platformProviders = [];\n        const { manifest: { bootstrap, locale }, assets, } = this;\n        // Initialize the response with status and headers if available.\n        const responseInit = {\n            status,\n            headers: new Headers({\n                'Content-Type': 'text/html;charset=UTF-8',\n                ...(locale !== undefined ? { 'Content-Language': locale } : {}),\n                ...headers,\n            }),\n        };\n        if (renderMode === RenderMode.Server) {\n            // Configure platform providers for request and response only for SSR.\n            platformProviders.push({\n                provide: REQUEST,\n                useValue: request,\n            }, {\n                provide: REQUEST_CONTEXT,\n                useValue: requestContext,\n            }, {\n                provide: RESPONSE_INIT,\n                useValue: responseInit,\n            });\n        }\n        else if (renderMode === RenderMode.Client) {\n            // Serve the client-side rendered version if the route is configured for CSR.\n            let html = await this.assets.getServerAsset('index.csr.html').text();\n            html = await this.runTransformsOnHtml(html, url, preload);\n            return new Response(html, responseInit);\n        }\n        if (locale !== undefined) {\n            platformProviders.push({\n                provide: LOCALE_ID,\n                useValue: locale,\n            });\n        }\n        this.boostrap ??= await bootstrap();\n        let html = await assets.getIndexServerHtml().text();\n        html = await this.runTransformsOnHtml(html, url, preload);\n        const result = await renderAngular(html, this.boostrap, url, platformProviders, SERVER_CONTEXT_VALUE[renderMode]);\n        if (result.hasNavigationError) {\n            return null;\n        }\n        if (result.redirectTo) {\n            return createRedirectResponse(result.redirectTo, status);\n        }\n        if (renderMode === RenderMode.Prerender) {\n            const renderedHtml = await result.content();\n            const finalHtml = await this.inlineCriticalCss(renderedHtml, url);\n            return new Response(finalHtml, responseInit);\n        }\n        // Use a stream to send the response before finishing rendering and inling critical CSS, improving performance via header flushing.\n        const stream = new ReadableStream({\n            start: async (controller) => {\n                const renderedHtml = await result.content();\n                const finalHtml = await this.inlineCriticalCssWithCache(renderedHtml, url);\n                controller.enqueue(finalHtml);\n                controller.close();\n            },\n        });\n        return new Response(stream, responseInit);\n    }\n    /**\n     * Inlines critical CSS into the given HTML content.\n     *\n     * @param html The HTML content to process.\n     * @param url The URL associated with the request, for logging purposes.\n     * @returns A promise that resolves to the HTML with inlined critical CSS.\n     */\n    async inlineCriticalCss(html, url) {\n        const { inlineCriticalCssProcessor } = this;\n        if (!inlineCriticalCssProcessor) {\n            return html;\n        }\n        try {\n            return await inlineCriticalCssProcessor.process(html);\n        }\n        catch (error) {\n            // eslint-disable-next-line no-console\n            console.error(`An error occurred while inlining critical CSS for: ${url}.`, error);\n            return html;\n        }\n    }\n    /**\n     * Inlines critical CSS into the given HTML content.\n     * This method uses a cache to avoid reprocessing the same HTML content multiple times.\n     *\n     * @param html The HTML content to process.\n     * @param url The URL associated with the request, for logging purposes.\n     * @returns A promise that resolves to the HTML with inlined critical CSS.\n     */\n    async inlineCriticalCssWithCache(html, url) {\n        const { inlineCriticalCssProcessor, criticalCssLRUCache, textDecoder } = this;\n        if (!inlineCriticalCssProcessor) {\n            return textDecoder.encode(html);\n        }\n        const cacheKey = url.toString();\n        const cached = criticalCssLRUCache.get(cacheKey);\n        const shaOfContentPreInlinedCss = await sha256(html);\n        if (cached?.shaOfContentPreInlinedCss === shaOfContentPreInlinedCss) {\n            return cached.contentWithCriticialCSS;\n        }\n        const processedHtml = await this.inlineCriticalCss(html, url);\n        const finalHtml = textDecoder.encode(processedHtml);\n        criticalCssLRUCache.put(cacheKey, {\n            shaOfContentPreInlinedCss,\n            contentWithCriticialCSS: finalHtml,\n        });\n        return finalHtml;\n    }\n    /**\n     * Constructs the asset path on the server based on the provided HTTP request.\n     *\n     * This method processes the incoming request URL to derive a path corresponding\n     * to the requested asset. It ensures the path points to the correct file (e.g.,\n     * `index.html`) and removes any base href if it is not part of the asset path.\n     *\n     * @param request - The incoming HTTP request object.\n     * @returns The server-relative asset path derived from the request.\n     */\n    buildServerAssetPathFromRequest(request) {\n        let { pathname: assetPath } = new URL(request.url);\n        if (!assetPath.endsWith('/index.html')) {\n            // Append \"index.html\" to build the default asset path.\n            assetPath = joinUrlParts(assetPath, 'index.html');\n        }\n        const { baseHref } = this.manifest;\n        // Check if the asset path starts with the base href and the base href is not (`/` or ``).\n        if (baseHref.length > 1 && assetPath.startsWith(baseHref)) {\n            // Remove the base href from the start of the asset path to align with server-asset expectations.\n            assetPath = assetPath.slice(baseHref.length);\n        }\n        return stripLeadingSlash(assetPath);\n    }\n    /**\n     * Runs the registered transform hooks on the given HTML content.\n     *\n     * @param html - The raw HTML content to be transformed.\n     * @param url - The URL associated with the HTML content, used for context during transformations.\n     * @param preload - An array of URLs representing the JavaScript resources to preload.\n     * @returns A promise that resolves to the transformed HTML string.\n     */\n    async runTransformsOnHtml(html, url, preload) {\n        if (this.hooks.has('html:transform:pre')) {\n            html = await this.hooks.run('html:transform:pre', { html, url });\n        }\n        if (preload?.length) {\n            html = appendPreloadHintsToHtml(html, preload);\n        }\n        return html;\n    }\n}\nlet angularServerApp;\n/**\n * Retrieves or creates an instance of `AngularServerApp`.\n * - If an instance of `AngularServerApp` already exists, it will return the existing one.\n * - If no instance exists, it will create a new one with the provided options.\n *\n * @param options Optional configuration options for the server application.\n *\n * @returns The existing or newly created instance of `AngularServerApp`.\n */\nfunction getOrCreateAngularServerApp(options) {\n    return (angularServerApp ??= new AngularServerApp(options));\n}\n/**\n * Destroys the existing `AngularServerApp` instance, releasing associated resources and resetting the\n * reference to `undefined`.\n *\n * This function is primarily used to enable the recreation of the `AngularServerApp` instance,\n * typically when server configuration or application state needs to be refreshed.\n */\nfunction destroyAngularServerApp() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Need to clean up GENERATED_COMP_IDS map in `@angular/core`.\n        // Otherwise an incorrect component ID generation collision detected warning will be displayed in development.\n        // See: https://github.com/angular/angular-cli/issues/25924\n        _resetCompiledComponents();\n    }\n    angularServerApp = undefined;\n}\n/**\n * Appends module preload hints to an HTML string for specified JavaScript resources.\n * This function enhances the HTML by injecting `<link rel=\"modulepreload\">` elements\n * for each provided resource, allowing browsers to preload the specified JavaScript\n * modules for better performance.\n *\n * @param html - The original HTML string to which preload hints will be added.\n * @param preload - An array of URLs representing the JavaScript resources to preload.\n * @returns The modified HTML string with the preload hints injected before the closing `</body>` tag.\n *          If `</body>` is not found, the links are not added.\n */\nfunction appendPreloadHintsToHtml(html, preload) {\n    const bodyCloseIdx = html.lastIndexOf('</body>');\n    if (bodyCloseIdx === -1) {\n        return html;\n    }\n    // Note: Module preloads should be placed at the end before the closing body tag to avoid a performance penalty.\n    // Placing them earlier can cause the browser to prioritize downloading these modules\n    // over other critical page resources like images, CSS, and fonts.\n    return [\n        html.slice(0, bodyCloseIdx),\n        ...preload.map((val) => `<link rel=\"modulepreload\" href=\"${val}\">`),\n        html.slice(bodyCloseIdx),\n    ].join('\\n');\n}\n/**\n * Creates an HTTP redirect response with a specified location and status code.\n *\n * @param location - The URL to which the response should redirect.\n * @param status - The HTTP status code for the redirection. Defaults to 302 (Found).\n *                 See: https://developer.mozilla.org/en-US/docs/Web/API/Response/redirect_static#status\n * @returns A `Response` object representing the HTTP redirect.\n */\nfunction createRedirectResponse(location, status = 302) {\n    return new Response(null, {\n        status,\n        headers: {\n            'Location': location,\n        },\n    });\n}\n\n/**\n * Extracts a potential locale ID from a given URL based on the specified base path.\n *\n * This function parses the URL to locate a potential locale identifier that immediately\n * follows the base path segment in the URL's pathname. If the URL does not contain a valid\n * locale ID, an empty string is returned.\n *\n * @param url - The full URL from which to extract the locale ID.\n * @param basePath - The base path used as the reference point for extracting the locale ID.\n * @returns The extracted locale ID if present, or an empty string if no valid locale ID is found.\n *\n * @example\n * ```js\n * const url = new URL('https://example.com/base/en/page');\n * const basePath = '/base';\n * const localeId = getPotentialLocaleIdFromUrl(url, basePath);\n * console.log(localeId); // Output: 'en'\n * ```\n */\nfunction getPotentialLocaleIdFromUrl(url, basePath) {\n    const { pathname } = url;\n    // Move forward of the base path section.\n    let start = basePath.length;\n    if (pathname[start] === '/') {\n        start++;\n    }\n    // Find the next forward slash.\n    let end = pathname.indexOf('/', start);\n    if (end === -1) {\n        end = pathname.length;\n    }\n    // Extract the potential locale id.\n    return pathname.slice(start, end);\n}\n/**\n * Parses the `Accept-Language` header and returns a list of locale preferences with their respective quality values.\n *\n * The `Accept-Language` header is typically a comma-separated list of locales, with optional quality values\n * in the form of `q=<value>`. If no quality value is specified, a default quality of `1` is assumed.\n * Special case: if the header is `*`, it returns the default locale with a quality of `1`.\n *\n * @param header - The value of the `Accept-Language` header, typically a comma-separated list of locales\n *                  with optional quality values (e.g., `en-US;q=0.8,fr-FR;q=0.9`). If the header is `*`,\n *                  it represents a wildcard for any language, returning the default locale.\n *\n * @returns A `ReadonlyMap` where the key is the locale (e.g., `en-US`, `fr-FR`), and the value is\n *          the associated quality value (a number between 0 and 1). If no quality value is provided,\n *          a default of `1` is used.\n *\n * @example\n * ```js\n * parseLanguageHeader('en-US;q=0.8,fr-FR;q=0.9')\n * // returns new Map([['en-US', 0.8], ['fr-FR', 0.9]])\n\n * parseLanguageHeader('*')\n * // returns new Map([['*', 1]])\n * ```\n */\nfunction parseLanguageHeader(header) {\n    if (header === '*') {\n        return new Map([['*', 1]]);\n    }\n    const parsedValues = header\n        .split(',')\n        .map((item) => {\n        const [locale, qualityValue] = item.split(';', 2).map((v) => v.trim());\n        let quality = qualityValue?.startsWith('q=') ? parseFloat(qualityValue.slice(2)) : undefined;\n        if (typeof quality !== 'number' || isNaN(quality) || quality < 0 || quality > 1) {\n            quality = 1; // Invalid quality value defaults to 1\n        }\n        return [locale, quality];\n    })\n        .sort(([_localeA, qualityA], [_localeB, qualityB]) => qualityB - qualityA);\n    return new Map(parsedValues);\n}\n/**\n * Gets the preferred locale based on the highest quality value from the provided `Accept-Language` header\n * and the set of available locales.\n *\n * This function adheres to the HTTP `Accept-Language` header specification as defined in\n * [RFC 7231](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5), including:\n * - Case-insensitive matching of language tags.\n * - Quality value handling (e.g., `q=1`, `q=0.8`). If no quality value is provided, it defaults to `q=1`.\n * - Prefix matching (e.g., `en` matching `en-US` or `en-GB`).\n *\n * @param header - The `Accept-Language` header string to parse and evaluate. It may contain multiple\n *                 locales with optional quality values, for example: `'en-US;q=0.8,fr-FR;q=0.9'`.\n * @param supportedLocales - An array of supported locales (e.g., `['en-US', 'fr-FR']`),\n *                           representing the locales available in the application.\n * @returns The best matching locale from the supported languages, or `undefined` if no match is found.\n *\n * @example\n * ```js\n * getPreferredLocale('en-US;q=0.8,fr-FR;q=0.9', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'fr-FR'\n *\n * getPreferredLocale('en;q=0.9,fr-FR;q=0.8', ['en-US', 'fr-FR', 'de-DE'])\n * // returns 'en-US'\n *\n * getPreferredLocale('es-ES;q=0.7', ['en-US', 'fr-FR', 'de-DE'])\n * // returns undefined\n * ```\n */\nfunction getPreferredLocale(header, supportedLocales) {\n    if (supportedLocales.length < 2) {\n        return supportedLocales[0];\n    }\n    const parsedLocales = parseLanguageHeader(header);\n    // Handle edge cases:\n    // - No preferred locales provided.\n    // - Only one supported locale.\n    // - Wildcard preference.\n    if (parsedLocales.size === 0 || (parsedLocales.size === 1 && parsedLocales.has('*'))) {\n        return supportedLocales[0];\n    }\n    // Create a map for case-insensitive lookup of supported locales.\n    // Keys are normalized (lowercase) locale values, values are original casing.\n    const normalizedSupportedLocales = new Map();\n    for (const locale of supportedLocales) {\n        normalizedSupportedLocales.set(normalizeLocale(locale), locale);\n    }\n    // Iterate through parsed locales in descending order of quality.\n    let bestMatch;\n    const qualityZeroNormalizedLocales = new Set();\n    for (const [locale, quality] of parsedLocales) {\n        const normalizedLocale = normalizeLocale(locale);\n        if (quality === 0) {\n            qualityZeroNormalizedLocales.add(normalizedLocale);\n            continue; // Skip locales with quality value of 0.\n        }\n        // Exact match found.\n        if (normalizedSupportedLocales.has(normalizedLocale)) {\n            return normalizedSupportedLocales.get(normalizedLocale);\n        }\n        // If an exact match is not found, try prefix matching (e.g., \"en\" matches \"en-US\").\n        // Store the first prefix match encountered, as it has the highest quality value.\n        if (bestMatch !== undefined) {\n            continue;\n        }\n        const [languagePrefix] = normalizedLocale.split('-', 1);\n        for (const supportedLocale of normalizedSupportedLocales.keys()) {\n            if (supportedLocale.startsWith(languagePrefix)) {\n                bestMatch = normalizedSupportedLocales.get(supportedLocale);\n                break; // No need to continue searching for this locale.\n            }\n        }\n    }\n    if (bestMatch !== undefined) {\n        return bestMatch;\n    }\n    // Return the first locale that is not quality zero.\n    for (const [normalizedLocale, locale] of normalizedSupportedLocales) {\n        if (!qualityZeroNormalizedLocales.has(normalizedLocale)) {\n            return locale;\n        }\n    }\n}\n/**\n * Normalizes a locale string by converting it to lowercase.\n *\n * @param locale - The locale string to normalize.\n * @returns The normalized locale string in lowercase.\n *\n * @example\n * ```ts\n * const normalized = normalizeLocale('EN-US');\n * console.log(normalized); // Output: \"en-us\"\n * ```\n */\nfunction normalizeLocale(locale) {\n    return locale.toLowerCase();\n}\n\n/**\n * Angular server application engine.\n * Manages Angular server applications (including localized ones), handles rendering requests,\n * and optionally transforms index HTML before rendering.\n *\n * @remarks This class should be instantiated once and used as a singleton across the server-side\n * application to ensure consistent handling of rendering requests and resource management.\n */\nclass AngularAppEngine {\n    /**\n     * A flag to enable or disable the rendering of prerendered routes.\n     *\n     * Typically used during development to avoid prerendering all routes ahead of time,\n     * allowing them to be rendered on the fly as requested.\n     *\n     * @private\n     */\n    static ɵallowStaticRouteRender = false;\n    /**\n     * Hooks for extending or modifying the behavior of the server application.\n     * These hooks are used by the Angular CLI when running the development server and\n     * provide extensibility points for the application lifecycle.\n     *\n     * @private\n     */\n    static ɵhooks = /* #__PURE__*/ new Hooks();\n    /**\n     * The manifest for the server application.\n     */\n    manifest = getAngularAppEngineManifest();\n    /**\n     * A map of supported locales from the server application's manifest.\n     */\n    supportedLocales = Object.keys(this.manifest.supportedLocales);\n    /**\n     * A cache that holds entry points, keyed by their potential locale string.\n     */\n    entryPointsCache = new Map();\n    /**\n     * Handles an incoming HTTP request by serving prerendered content, performing server-side rendering,\n     * or delivering a static file for client-side rendered routes based on the `RenderMode` setting.\n     *\n     * @param request - The HTTP request to handle.\n     * @param requestContext - Optional context for rendering, such as metadata associated with the request.\n     * @returns A promise that resolves to the resulting HTTP response object, or `null` if no matching Angular route is found.\n     *\n     * @remarks A request to `https://www.example.com/page/index.html` will serve or render the Angular route\n     * corresponding to `https://www.example.com/page`.\n     */\n    async handle(request, requestContext) {\n        const serverApp = await this.getAngularServerAppForRequest(request);\n        if (serverApp) {\n            return serverApp.handle(request, requestContext);\n        }\n        if (this.supportedLocales.length > 1) {\n            // Redirect to the preferred language if i18n is enabled.\n            return this.redirectBasedOnAcceptLanguage(request);\n        }\n        return null;\n    }\n    /**\n     * Handles requests for the base path when i18n is enabled.\n     * Redirects the user to a locale-specific path based on the `Accept-Language` header.\n     *\n     * @param request The incoming request.\n     * @returns A `Response` object with a 302 redirect, or `null` if i18n is not enabled\n     *          or the request is not for the base path.\n     */\n    redirectBasedOnAcceptLanguage(request) {\n        const { basePath, supportedLocales } = this.manifest;\n        // If the request is not for the base path, it's not our responsibility to handle it.\n        const { pathname } = new URL(request.url);\n        if (pathname !== basePath) {\n            return null;\n        }\n        // For requests to the base path (typically '/'), attempt to extract the preferred locale\n        // from the 'Accept-Language' header.\n        const preferredLocale = getPreferredLocale(request.headers.get('Accept-Language') || '*', this.supportedLocales);\n        if (preferredLocale) {\n            const subPath = supportedLocales[preferredLocale];\n            if (subPath !== undefined) {\n                return new Response(null, {\n                    status: 302, // Use a 302 redirect as language preference may change.\n                    headers: {\n                        'Location': joinUrlParts(pathname, subPath),\n                        'Vary': 'Accept-Language',\n                    },\n                });\n            }\n        }\n        return null;\n    }\n    /**\n     * Retrieves the Angular server application instance for a given request.\n     *\n     * This method checks if the request URL corresponds to an Angular application entry point.\n     * If so, it initializes or retrieves an instance of the Angular server application for that entry point.\n     * Requests that resemble file requests (except for `/index.html`) are skipped.\n     *\n     * @param request - The incoming HTTP request object.\n     * @returns A promise that resolves to an `AngularServerApp` instance if a valid entry point is found,\n     * or `null` if no entry point matches the request URL.\n     */\n    async getAngularServerAppForRequest(request) {\n        // Skip if the request looks like a file but not `/index.html`.\n        const url = new URL(request.url);\n        const entryPoint = await this.getEntryPointExportsForUrl(url);\n        if (!entryPoint) {\n            return null;\n        }\n        // Note: Using `instanceof` is not feasible here because `AngularServerApp` will\n        // be located in separate bundles, making `instanceof` checks unreliable.\n        const ɵgetOrCreateAngularServerApp = entryPoint.ɵgetOrCreateAngularServerApp;\n        const serverApp = ɵgetOrCreateAngularServerApp({\n            allowStaticRouteRender: AngularAppEngine.ɵallowStaticRouteRender,\n            hooks: AngularAppEngine.ɵhooks,\n        });\n        return serverApp;\n    }\n    /**\n     * Retrieves the exports for a specific entry point, caching the result.\n     *\n     * @param potentialLocale - The locale string used to find the corresponding entry point.\n     * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n     */\n    getEntryPointExports(potentialLocale) {\n        const cachedEntryPoint = this.entryPointsCache.get(potentialLocale);\n        if (cachedEntryPoint) {\n            return cachedEntryPoint;\n        }\n        const { entryPoints } = this.manifest;\n        const entryPoint = entryPoints[potentialLocale];\n        if (!entryPoint) {\n            return undefined;\n        }\n        const entryPointExports = entryPoint();\n        this.entryPointsCache.set(potentialLocale, entryPointExports);\n        return entryPointExports;\n    }\n    /**\n     * Retrieves the entry point for a given URL by determining the locale and mapping it to\n     * the appropriate application bundle.\n     *\n     * This method determines the appropriate entry point and locale for rendering the application by examining the URL.\n     * If there is only one entry point available, it is returned regardless of the URL.\n     * Otherwise, the method extracts a potential locale identifier from the URL and looks up the corresponding entry point.\n     *\n     * @param url - The URL of the request.\n     * @returns A promise that resolves to the entry point exports or `undefined` if not found.\n     */\n    getEntryPointExportsForUrl(url) {\n        const { basePath } = this.manifest;\n        if (this.supportedLocales.length === 1) {\n            return this.getEntryPointExports('');\n        }\n        const potentialLocale = getPotentialLocaleIdFromUrl(url, basePath);\n        return this.getEntryPointExports(potentialLocale) ?? this.getEntryPointExports('');\n    }\n}\n\n/**\n * Annotates a request handler function with metadata, marking it as a special\n * handler.\n *\n * @param handler - The request handler function to be annotated.\n * @returns The same handler function passed in, with metadata attached.\n *\n * @example\n * Example usage in a Hono application:\n * ```ts\n * const app = new Hono();\n * export default createRequestHandler(app.fetch);\n * ```\n *\n * @example\n * Example usage in a H3 application:\n * ```ts\n * const app = createApp();\n * const handler = toWebHandler(app);\n * export default createRequestHandler(handler);\n * ```\n */\nfunction createRequestHandler(handler) {\n    handler['__ng_request_handler__'] = true;\n    return handler;\n}\n\nexport { AngularAppEngine, PrerenderFallback, RenderMode, createRequestHandler, provideServerRendering, withAppShell, withRoutes, InlineCriticalCssProcessor as ɵInlineCriticalCssProcessor, destroyAngularServerApp as ɵdestroyAngularServerApp, extractRoutesAndCreateRouteTree as ɵextractRoutesAndCreateRouteTree, getOrCreateAngularServerApp as ɵgetOrCreateAngularServerApp, getRoutesFromAngularRouterConfig as ɵgetRoutesFromAngularRouterConfig, setAngularAppEngineManifest as ɵsetAngularAppEngineManifest, setAngularAppManifest as ɵsetAngularAppManifest };\n\n"],
  "mappings": "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",
  "names": ["utils", "event", "i", "n", "result", "Node", "LinkedList", "NodeUtils", "node", "compareDocumentPosition", "root", "filter", "index", "window", "cp", "find", "el", "compile", "document", "Element", "attributes", "select", "parser", "getElementsByTagName", "getElementsByClassName", "cloneNode", "Text", "Comment", "ProcessingInstruction", "NodeTraversal", "URL", "relative", "path", "parse", "value", "defineElement", "impl", "HTMLElement", "HTMLUnknownElement", "HTMLFormElement", "SVGElement", "Document", "events", "svg", "insertToken", "doc", "comment", "input", "createDocument", "config", "textContent", "import_rxjs", "comment", "result", "resolve", "document", "input", "path", "index", "root", "getDefaultExportFromCjs", "a", "spacing", "node", "stringify", "cloneNode", "Node", "result", "stringifier", "hasRequiredComment", "requireComment", "Comment", "parse", "Root", "Container", "hasRequiredDocument", "requireDocument", "Document", "dirname", "join", "isAbsolute", "resolve", "sep", "_a", "relative", "Parser", "open", "parser", "processor", "warning", "warnOnce", "events", "postcss", "filter", "hasRequiredNode", "requireNode", "SelectorType", "AttributeAction", "CharCode", "subselects", "getName", "ElementType", "attributes", "DocumentPosition", "href", "getText", "rule", "elem", "compileToken", "select", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "State", "QuoteType", "cp", "parseDocument", "node2", "rule2", "container", "document", "serializeDocument", "link", "path", "Console", "index", "resolve", "asyncDestroyPlatform", "ServerRenderingFeatureKind", "RenderMode", "PrerenderFallback", "config", "provideServerRendering", "node", "_a", "loadChildren", "matchedMetaData", "document", "result", "readFile", "link", "html"]
}
